digraph G{
73[shape=box, label="73 translation_unit_type(91):0:0"];
72[shape=box, label="72 external_declaration_type(39):0:0"];
73->72;
72[shape=box, label="72 external_declaration_type(39):0:0"];
71[shape=box, label="71 function_definition_type(42):1:0"];
72->71;
71[shape=box, label="71 function_definition_type(42):1:0"];
2[shape=box, label="2 declaration_specifiers_type(21):3:0"];
71->2;
2[shape=box, label="2 declaration_specifiers_type(21):3:0"];
0[shape=box, label="0 type_specifier_type(95):3:0"];
2->0;
0[shape=box, label="0 type_specifier_type(95):3:0"];
5[shape=box, label="5 declarator_type(23):1:0"];
71->5;
5[shape=box, label="5 declarator_type(23):1:0"];
4[shape=box, label="4 direct_declarator_type(28):12:0"];
5->4;
4[shape=box, label="4 direct_declarator_type(28):12:0"];
3[shape=box, label="3 direct_declarator_type(28):0:0"];
4->3;
3[shape=box, label="3 direct_declarator_type(28):0:0"];
1[shape=box, label="1 IDENTIFIER_type(49):-1:0:main"];
3->1;
1[shape=box, label="1 IDENTIFIER_type(49):-1:0:main"];
70[shape=box, label="70 compound_statement_type(14):1:70"];
71->70;
70[shape=box, label="70 compound_statement_type(14):1:70"];
34[shape=box, label="34 block_item_list_type(11):0:70"];
70->34;
34[shape=box, label="34 block_item_list_type(11):0:70"];
33[shape=box, label="33 block_item_type(12):0:70"];
34->33;
33[shape=box, label="33 block_item_type(12):0:70"];
32[shape=box, label="32 declaration_type(22):1:70"];
33->32;
32[shape=box, label="32 declaration_type(22):1:70"];
8[shape=box, label="8 declaration_specifiers_type(21):3:70"];
32->8;
8[shape=box, label="8 declaration_specifiers_type(21):3:70"];
6[shape=box, label="6 type_specifier_type(95):3:70"];
8->6;
6[shape=box, label="6 type_specifier_type(95):3:70"];
31[shape=box, label="31 init_declarator_list_type(53):0:70"];
32->31;
31[shape=box, label="31 init_declarator_list_type(53):0:70"];
30[shape=box, label="30 init_declarator_type(54):0:70"];
31->30;
30[shape=box, label="30 init_declarator_type(54):0:70"];
10[shape=box, label="10 declarator_type(23):1:70"];
30->10;
10[shape=box, label="10 declarator_type(23):1:70"];
9[shape=box, label="9 direct_declarator_type(28):0:70"];
10->9;
9[shape=box, label="9 direct_declarator_type(28):0:70"];
7[shape=box, label="7 IDENTIFIER_type(49):-1:70:a"];
9->7;
7[shape=box, label="7 IDENTIFIER_type(49):-1:70:a"];
29[shape=box, label="29 initializer_type(56):2:70"];
30->29;
29[shape=box, label="29 initializer_type(56):2:70"];
28[shape=box, label="28 assignment_expression_type(8):0:70"];
29->28;
28[shape=box, label="28 assignment_expression_type(8):0:70"];
27[shape=box, label="27 conditional_expression_type(15):0:70"];
28->27;
27[shape=box, label="27 conditional_expression_type(15):0:70"];
26[shape=box, label="26 logical_or_expression_type(62):0:70"];
27->26;
26[shape=box, label="26 logical_or_expression_type(62):0:70"];
25[shape=box, label="25 logical_and_expression_type(61):0:70"];
26->25;
25[shape=box, label="25 logical_and_expression_type(61):0:70"];
24[shape=box, label="24 inclusive_or_expression_type(52):0:70"];
25->24;
24[shape=box, label="24 inclusive_or_expression_type(52):0:70"];
23[shape=box, label="23 exclusive_or_expression_type(36):0:70"];
24->23;
23[shape=box, label="23 exclusive_or_expression_type(36):0:70"];
22[shape=box, label="22 and_expression_type(6):0:70"];
23->22;
22[shape=box, label="22 and_expression_type(6):0:70"];
21[shape=box, label="21 equality_expression_type(35):0:70"];
22->21;
21[shape=box, label="21 equality_expression_type(35):0:70"];
20[shape=box, label="20 relational_expression_type(74):0:70"];
21->20;
20[shape=box, label="20 relational_expression_type(74):0:70"];
19[shape=box, label="19 shift_expression_type(78):0:70"];
20->19;
19[shape=box, label="19 shift_expression_type(78):0:70"];
18[shape=box, label="18 additive_expression_type(4):0:70"];
19->18;
18[shape=box, label="18 additive_expression_type(4):0:70"];
17[shape=box, label="17 multiplicative_expression_type(65):0:70"];
18->17;
17[shape=box, label="17 multiplicative_expression_type(65):0:70"];
16[shape=box, label="16 cast_expression_type(13):0:70"];
17->16;
16[shape=box, label="16 cast_expression_type(13):0:70"];
15[shape=box, label="15 unary_expression_type(96):0:70"];
16->15;
15[shape=box, label="15 unary_expression_type(96):0:70"];
14[shape=box, label="14 postfix_expression_type(71):0:70"];
15->14;
14[shape=box, label="14 postfix_expression_type(71):0:70"];
13[shape=box, label="13 primary_expression_type(72):1:70"];
14->13;
13[shape=box, label="13 primary_expression_type(72):1:70"];
12[shape=box, label="12 constant_type(17):0:70"];
13->12;
12[shape=box, label="12 constant_type(17):0:70"];
11[shape=box, label="11 I_CONSTANT_type(48):-1:70:12"];
12->11;
11[shape=box, label="11 I_CONSTANT_type(48):-1:70:12"];
69[shape=box, label="69 block_item_type(12):0:70"];
34->69;
69[shape=box, label="69 block_item_type(12):0:70"];
68[shape=box, label="68 declaration_type(22):1:70"];
69->68;
68[shape=box, label="68 declaration_type(22):1:70"];
37[shape=box, label="37 declaration_specifiers_type(21):3:70"];
68->37;
37[shape=box, label="37 declaration_specifiers_type(21):3:70"];
35[shape=box, label="35 type_specifier_type(95):3:70"];
37->35;
35[shape=box, label="35 type_specifier_type(95):3:70"];
67[shape=box, label="67 init_declarator_list_type(53):0:70"];
68->67;
67[shape=box, label="67 init_declarator_list_type(53):0:70"];
66[shape=box, label="66 init_declarator_type(54):0:70"];
67->66;
66[shape=box, label="66 init_declarator_type(54):0:70"];
39[shape=box, label="39 declarator_type(23):1:70"];
66->39;
39[shape=box, label="39 declarator_type(23):1:70"];
38[shape=box, label="38 direct_declarator_type(28):0:70"];
39->38;
38[shape=box, label="38 direct_declarator_type(28):0:70"];
36[shape=box, label="36 IDENTIFIER_type(49):-1:70:b"];
38->36;
36[shape=box, label="36 IDENTIFIER_type(49):-1:70:b"];
65[shape=box, label="65 initializer_type(56):2:70"];
66->65;
65[shape=box, label="65 initializer_type(56):2:70"];
64[shape=box, label="64 assignment_expression_type(8):0:70"];
65->64;
64[shape=box, label="64 assignment_expression_type(8):0:70"];
63[shape=box, label="63 conditional_expression_type(15):0:70"];
64->63;
63[shape=box, label="63 conditional_expression_type(15):0:70"];
62[shape=box, label="62 logical_or_expression_type(62):0:70"];
63->62;
62[shape=box, label="62 logical_or_expression_type(62):0:70"];
61[shape=box, label="61 logical_and_expression_type(61):0:70"];
62->61;
61[shape=box, label="61 logical_and_expression_type(61):0:70"];
60[shape=box, label="60 inclusive_or_expression_type(52):0:70"];
61->60;
60[shape=box, label="60 inclusive_or_expression_type(52):0:70"];
59[shape=box, label="59 exclusive_or_expression_type(36):0:70"];
60->59;
59[shape=box, label="59 exclusive_or_expression_type(36):0:70"];
58[shape=box, label="58 and_expression_type(6):0:70"];
59->58;
58[shape=box, label="58 and_expression_type(6):0:70"];
57[shape=box, label="57 equality_expression_type(35):0:70"];
58->57;
57[shape=box, label="57 equality_expression_type(35):0:70"];
56[shape=box, label="56 relational_expression_type(74):0:70"];
57->56;
56[shape=box, label="56 relational_expression_type(74):0:70"];
55[shape=box, label="55 shift_expression_type(78):0:70"];
56->55;
55[shape=box, label="55 shift_expression_type(78):0:70"];
54[shape=box, label="54 additive_expression_type(4):2:70"];
55->54;
54[shape=box, label="54 additive_expression_type(4):2:70"];
46[shape=box, label="46 additive_expression_type(4):0:70"];
54->46;
46[shape=box, label="46 additive_expression_type(4):0:70"];
45[shape=box, label="45 multiplicative_expression_type(65):0:70"];
46->45;
45[shape=box, label="45 multiplicative_expression_type(65):0:70"];
44[shape=box, label="44 cast_expression_type(13):0:70"];
45->44;
44[shape=box, label="44 cast_expression_type(13):0:70"];
43[shape=box, label="43 unary_expression_type(96):0:70"];
44->43;
43[shape=box, label="43 unary_expression_type(96):0:70"];
42[shape=box, label="42 postfix_expression_type(71):0:70"];
43->42;
42[shape=box, label="42 postfix_expression_type(71):0:70"];
41[shape=box, label="41 primary_expression_type(72):0:70"];
42->41;
41[shape=box, label="41 primary_expression_type(72):0:70"];
40[shape=box, label="40 IDENTIFIER_type(49):-1:70:a"];
41->40;
40[shape=box, label="40 IDENTIFIER_type(49):-1:70:a"];
53[shape=box, label="53 multiplicative_expression_type(65):0:70"];
54->53;
53[shape=box, label="53 multiplicative_expression_type(65):0:70"];
52[shape=box, label="52 cast_expression_type(13):0:70"];
53->52;
52[shape=box, label="52 cast_expression_type(13):0:70"];
51[shape=box, label="51 unary_expression_type(96):0:70"];
52->51;
51[shape=box, label="51 unary_expression_type(96):0:70"];
50[shape=box, label="50 postfix_expression_type(71):0:70"];
51->50;
50[shape=box, label="50 postfix_expression_type(71):0:70"];
49[shape=box, label="49 primary_expression_type(72):1:70"];
50->49;
49[shape=box, label="49 primary_expression_type(72):1:70"];
48[shape=box, label="48 constant_type(17):0:70"];
49->48;
48[shape=box, label="48 constant_type(17):0:70"];
47[shape=box, label="47 I_CONSTANT_type(48):-1:70:12"];
48->47;
47[shape=box, label="47 I_CONSTANT_type(48):-1:70:12"];
}
