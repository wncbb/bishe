before initialize compiler state
81818181: node_table:0xb780f008
81818181: symbol_table:0xb77ce008
lib/compiler_state.c:151 0x9f96170
after  initialize compiler state
================compiler_state start===================
c_file_str:l1.c
symbol_max_number:65536
symbol_number:0
node_max_number:65536
node_number:0
need_dot_file:0
dot_file_str:
need_infor:0
symbol_table:0x9f96170
node_table:0xb780f008
declaration_secifiers_table:0x9f96170
================compiler_state end ====================
type_specifier: INT
!!!main
291:yylineno:1
check_identifier end
declaration_specifiers: type_specifier
direct_declarator: IDENTIFIER
direct_declarator: direct_declarator '(' ')'
stack: 1 0 
declarator: direct_declarator
type_specifier: INT
!!!a
291:yylineno:3
check_identifier end
declaration_specifiers: type_specifier
direct_declarator: IDENTIFIER
declarator: direct_declarator
!!!12
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
initializer: assignment_expression
init_declarator: declarator '=' initializer
init_declarator_list: init_declarator
declaration: declaration_specifiers init_declarator_list ';'
block_item: declaration
block_item_list: block_item
!!!a
291:yylineno:4
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
expression: assignment_expression
stack: 2 1 0 
!!!1
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
constant_expression: conditional_expression
!!!a
291:yylineno:7
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
assignment_operator: '='
!!!a
291:yylineno:7
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
!!!1
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: additive_expression '+' multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
assignment_expression: unary_expression assignment_operator assignment_expression
expression: assignment_expression
expression_statement: expression ';'
statement: expression_statement
labeled_statement: CASE constant_expression ':' statement
statement: labeled_statement
block_item: statement
block_item_list: block_item
jump_statement: BREAK ';'
statement: jump_statement
block_item: statement
block_item_list: block_item_list block_item
!!!2
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
constant_expression: conditional_expression
!!!a
291:yylineno:10
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
assignment_operator: '='
!!!a
291:yylineno:10
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
!!!1
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: additive_expression '-' multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
assignment_expression: unary_expression assignment_operator assignment_expression
expression: assignment_expression
expression_statement: expression ';'
statement: expression_statement
labeled_statement: CASE constant_expression ':' statement
statement: labeled_statement
block_item: statement
block_item_list: block_item_list block_item
jump_statement: BREAK ';'
statement: jump_statement
block_item: statement
block_item_list: block_item_list block_item
!!!3
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
constant_expression: conditional_expression
!!!a
291:yylineno:13
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
assignment_operator: '='
!!!a
291:yylineno:13
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
!!!1
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: multiplicative_expression '*' cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
assignment_expression: unary_expression assignment_operator assignment_expression
expression: assignment_expression
expression_statement: expression ';'
statement: expression_statement
labeled_statement: CASE constant_expression ':' statement
statement: labeled_statement
block_item: statement
block_item_list: block_item_list block_item
jump_statement: BREAK ';'
statement: jump_statement
block_item: statement
block_item_list: block_item_list block_item
!!!defualt
291:yylineno:15
check_identifier end
!!!a
291:yylineno:16
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
assignment_operator: '='
!!!a
291:yylineno:16
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
!!!1
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: multiplicative_expression '/' cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
assignment_expression: unary_expression assignment_operator assignment_expression
expression: assignment_expression
expression_statement: expression ';'
statement: expression_statement
labeled_statement: IDENTIFIER ':' statement
statement: labeled_statement
block_item: statement
block_item_list: block_item_list block_item
jump_statement: BREAK ';'
statement: jump_statement
block_item: statement
block_item_list: block_item_list block_item
stack: 1 0 
compound_statement(id:272): '{' block_item_list '}'
statement: compound_statement
selection_statement: SWITCH '(' expression ')' statement
statement: selection_statement
block_item: statement
block_item_list: block_item_list block_item
stack: 0 
compound_statement(id:277): '{' block_item_list '}'
function_defination: declaration_specifiers declarator compound_statement
deal_type_specifier node_inrule_num 3
haha node_type 28
haha2 inrule_num:12
haha2 inrule_num:0
3949
IDENTIFIER: main node_type:49 node_inrule_num:-1 node_parent:3 node_parent_inrule_num:0 node_parent_type:28 node_brother_seq:0
0513a
infor_ptr->node_ptr=0x9fc1470
infor_ptr->node_ptr=0x9fc1470
infor_ptr->smbl_ptr=0x9fc2140
infor_ptr->smbl_ptr=0x9fc2140
3089
haha49
227a:276
111
333 0
222
0401 : is declaration
0318: 32
deal_type_specifier node_inrule_num 3
right!!!
haha node_type 28
haha2 inrule_num:0
3949
IDENTIFIER: a node_type:49 node_inrule_num:-1 node_parent:9 node_parent_inrule_num:0 node_parent_type:28 node_brother_seq:0
0513a
infor_ptr->node_ptr=0x9fc5f78
infor_ptr->node_ptr=0x9fc5f78
infor_ptr->smbl_ptr=0x9fc5f88
infor_ptr->smbl_ptr=0x9fc5f88
3089
haha49
node_index:29
888
node_index:29
999
0512xxx:symbol_a_table_num 1
333 1
0401 : is statement
deal_statement:1055 inrule_num:3 node_index:274
343b:0 block_item_num:2
0521r:0 57
701a:0
701a:1
343a:0
659a:-1
659a2:1
657a:-1
external_declaration: function_definition
-------------------------translation_unit: external_declaration
----------print_node_table:
node_index node_parent node_child_num node_type_str node_symbol_index node_line_num node_compound_id
id(0):type(type_specifier_type[95]):index(0):parent(2):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(1):compound_id(0):

id(1):type(IDENTIFIER_type[49]):index(1):parent(3):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(main[0]):infor_index(-1):line_num(1):compound_id(0):

id(2):type(declaration_specifiers_type[21]):index(2):parent(277):left_brother(-1):right_brother(5):brother_num(2):brother_seq(0):first_child(0):child_num(1):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(1):compound_id(0):

id(3):type(direct_declarator_type[28]):index(3):parent(4):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(1):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(4):type(direct_declarator_type[28]):index(4):parent(5):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(3):child_num(1):inrule_num(12):symbol_index([12]):infor_index(-1):line_num(1):compound_id(0):

id(5):type(declarator_type[23]):index(5):parent(277):left_brother(2):right_brother(276):brother_num(3):brother_seq(1):first_child(4):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(2):compound_id(0):

id(6):type(type_specifier_type[95]):index(6):parent(8):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(3):compound_id(276):

id(7):type(IDENTIFIER_type[49]):index(7):parent(9):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[1]):infor_index(-1):line_num(3):compound_id(276):

id(8):type(declaration_specifiers_type[21]):index(8):parent(32):left_brother(-1):right_brother(31):brother_num(2):brother_seq(0):first_child(6):child_num(1):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(3):compound_id(276):

id(9):type(direct_declarator_type[28]):index(9):parent(10):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(7):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(10):type(declarator_type[23]):index(10):parent(30):left_brother(-1):right_brother(29):brother_num(2):brother_seq(0):first_child(9):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(3):compound_id(276):

id(11):type(I_CONSTANT_type[48]):index(11):parent(12):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(12[2]):infor_index(-1):line_num(3):compound_id(276):

id(12):type(constant_type[17]):index(12):parent(13):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(11):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(13):type(primary_expression_type[72]):index(13):parent(14):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(12):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(3):compound_id(276):

id(14):type(postfix_expression_type[71]):index(14):parent(15):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(13):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(15):type(unary_expression_type[96]):index(15):parent(16):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(14):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(16):type(cast_expression_type[13]):index(16):parent(17):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(15):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(17):type(multiplicative_expression_type[65]):index(17):parent(18):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(16):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(18):type(additive_expression_type[4]):index(18):parent(19):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(17):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(19):type(shift_expression_type[78]):index(19):parent(20):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(18):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(20):type(relational_expression_type[74]):index(20):parent(21):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(19):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(21):type(equality_expression_type[35]):index(21):parent(22):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(20):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(22):type(and_expression_type[6]):index(22):parent(23):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(21):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(23):type(exclusive_or_expression_type[36]):index(23):parent(24):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(22):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(24):type(inclusive_or_expression_type[52]):index(24):parent(25):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(23):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(25):type(logical_and_expression_type[61]):index(25):parent(26):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(24):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(26):type(logical_or_expression_type[62]):index(26):parent(27):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(25):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(27):type(conditional_expression_type[15]):index(27):parent(28):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(26):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(28):type(assignment_expression_type[8]):index(28):parent(29):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(27):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(29):type(initializer_type[56]):index(29):parent(30):left_brother(10):right_brother(-1):brother_num(2):brother_seq(1):first_child(28):child_num(1):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(3):compound_id(276):

id(30):type(init_declarator_type[54]):index(30):parent(31):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(10):child_num(2):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(31):type(init_declarator_list_type[53]):index(31):parent(32):left_brother(8):right_brother(-1):brother_num(2):brother_seq(1):first_child(30):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(32):type(declaration_type[22]):index(32):parent(33):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(8):child_num(2):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(3):compound_id(276):

id(33):type(block_item_type[12]):index(33):parent(34):left_brother(-1):right_brother(275):brother_num(2):brother_seq(0):first_child(32):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(34):type(block_item_list_type[11]):index(34):parent(276):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(33):child_num(2):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(276):

id(35):type(IDENTIFIER_type[49]):index(35):parent(36):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[3]):infor_index(-1):line_num(4):compound_id(276):

id(36):type(primary_expression_type[72]):index(36):parent(37):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(35):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(37):type(postfix_expression_type[71]):index(37):parent(38):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(36):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(38):type(unary_expression_type[96]):index(38):parent(39):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(37):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(39):type(cast_expression_type[13]):index(39):parent(40):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(38):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(40):type(multiplicative_expression_type[65]):index(40):parent(41):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(39):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(41):type(additive_expression_type[4]):index(41):parent(42):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(40):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(42):type(shift_expression_type[78]):index(42):parent(43):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(41):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(43):type(relational_expression_type[74]):index(43):parent(44):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(42):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(44):type(equality_expression_type[35]):index(44):parent(45):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(43):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(45):type(and_expression_type[6]):index(45):parent(46):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(44):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(46):type(exclusive_or_expression_type[36]):index(46):parent(47):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(45):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(47):type(inclusive_or_expression_type[52]):index(47):parent(48):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(46):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(48):type(logical_and_expression_type[61]):index(48):parent(49):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(47):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(49):type(logical_or_expression_type[62]):index(49):parent(50):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(48):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(50):type(conditional_expression_type[15]):index(50):parent(51):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(49):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(51):type(assignment_expression_type[8]):index(51):parent(52):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(50):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(52):type(expression_type[38]):index(52):parent(273):left_brother(-1):right_brother(272):brother_num(2):brother_seq(0):first_child(51):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(276):

id(53):type(I_CONSTANT_type[48]):index(53):parent(54):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(1[4]):infor_index(-1):line_num(6):compound_id(271):

id(54):type(constant_type[17]):index(54):parent(55):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(53):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(55):type(primary_expression_type[72]):index(55):parent(56):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(54):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(6):compound_id(271):

id(56):type(postfix_expression_type[71]):index(56):parent(57):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(55):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(57):type(unary_expression_type[96]):index(57):parent(58):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(56):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(58):type(cast_expression_type[13]):index(58):parent(59):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(57):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(59):type(multiplicative_expression_type[65]):index(59):parent(60):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(58):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(60):type(additive_expression_type[4]):index(60):parent(61):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(59):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(61):type(shift_expression_type[78]):index(61):parent(62):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(60):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(62):type(relational_expression_type[74]):index(62):parent(63):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(61):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(63):type(equality_expression_type[35]):index(63):parent(64):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(62):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(64):type(and_expression_type[6]):index(64):parent(65):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(63):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(65):type(exclusive_or_expression_type[36]):index(65):parent(66):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(64):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(66):type(inclusive_or_expression_type[52]):index(66):parent(67):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(65):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(67):type(logical_and_expression_type[61]):index(67):parent(68):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(66):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(68):type(logical_or_expression_type[62]):index(68):parent(69):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(67):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(69):type(conditional_expression_type[15]):index(69):parent(70):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(68):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(70):type(constant_expression_type[16]):index(70):parent(106):left_brother(-1):right_brother(105):brother_num(2):brother_seq(0):first_child(69):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(271):

id(71):type(IDENTIFIER_type[49]):index(71):parent(72):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[5]):infor_index(-1):line_num(7):compound_id(271):

id(72):type(primary_expression_type[72]):index(72):parent(73):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(71):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(73):type(postfix_expression_type[71]):index(73):parent(74):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(72):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(74):type(unary_expression_type[96]):index(74):parent(102):left_brother(-1):right_brother(76):brother_num(2):brother_seq(0):first_child(73):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(75):type(EQU_ASSIGN_type[30]):index(75):parent(76):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index([-1]):infor_index(-1):line_num(7):compound_id(271):

id(76):type(assignment_operator_type[9]):index(76):parent(102):left_brother(74):right_brother(101):brother_num(3):brother_seq(1):first_child(75):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(77):type(IDENTIFIER_type[49]):index(77):parent(78):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[6]):infor_index(-1):line_num(7):compound_id(271):

id(78):type(primary_expression_type[72]):index(78):parent(79):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(77):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(79):type(postfix_expression_type[71]):index(79):parent(80):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(78):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(80):type(unary_expression_type[96]):index(80):parent(81):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(79):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(81):type(cast_expression_type[13]):index(81):parent(82):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(80):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(82):type(multiplicative_expression_type[65]):index(82):parent(83):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(81):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(83):type(additive_expression_type[4]):index(83):parent(91):left_brother(-1):right_brother(90):brother_num(2):brother_seq(0):first_child(82):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(84):type(I_CONSTANT_type[48]):index(84):parent(85):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(1[7]):infor_index(-1):line_num(7):compound_id(271):

id(85):type(constant_type[17]):index(85):parent(86):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(84):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(86):type(primary_expression_type[72]):index(86):parent(87):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(85):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(7):compound_id(271):

id(87):type(postfix_expression_type[71]):index(87):parent(88):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(86):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(88):type(unary_expression_type[96]):index(88):parent(89):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(87):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(89):type(cast_expression_type[13]):index(89):parent(90):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(88):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(90):type(multiplicative_expression_type[65]):index(90):parent(91):left_brother(83):right_brother(-1):brother_num(2):brother_seq(1):first_child(89):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(91):type(additive_expression_type[4]):index(91):parent(92):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(83):child_num(2):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(7):compound_id(271):

id(92):type(shift_expression_type[78]):index(92):parent(93):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(91):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(93):type(relational_expression_type[74]):index(93):parent(94):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(92):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(94):type(equality_expression_type[35]):index(94):parent(95):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(93):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(95):type(and_expression_type[6]):index(95):parent(96):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(94):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(96):type(exclusive_or_expression_type[36]):index(96):parent(97):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(95):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(97):type(inclusive_or_expression_type[52]):index(97):parent(98):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(96):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(98):type(logical_and_expression_type[61]):index(98):parent(99):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(97):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(99):type(logical_or_expression_type[62]):index(99):parent(100):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(98):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(100):type(conditional_expression_type[15]):index(100):parent(101):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(99):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(101):type(assignment_expression_type[8]):index(101):parent(102):left_brother(76):right_brother(-1):brother_num(3):brother_seq(2):first_child(100):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(102):type(assignment_expression_type[8]):index(102):parent(103):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(74):child_num(3):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(7):compound_id(271):

id(103):type(expression_type[38]):index(103):parent(104):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(102):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(104):type(expression_statement_type[37]):index(104):parent(105):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(103):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(7):compound_id(271):

id(105):type(statement_type[80]):index(105):parent(106):left_brother(70):right_brother(-1):brother_num(2):brother_seq(1):first_child(104):child_num(1):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(7):compound_id(271):

id(106):type(labeled_statement_type[60]):index(106):parent(107):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(70):child_num(2):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(7):compound_id(271):

id(107):type(statement_type[80]):index(107):parent(108):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(106):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(108):type(block_item_type[12]):index(108):parent(109):left_brother(-1):right_brother(112):brother_num(2):brother_seq(0):first_child(107):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(7):compound_id(271):

id(109):type(block_item_list_type[11]):index(109):parent(271):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(108):child_num(8):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(271):

id(110):type(jump_statement_type[58]):index(110):parent(111):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(8):compound_id(271):

id(111):type(statement_type[80]):index(111):parent(112):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(110):child_num(1):inrule_num(5):symbol_index([5]):infor_index(-1):line_num(8):compound_id(271):

id(112):type(block_item_type[12]):index(112):parent(109):left_brother(108):right_brother(168):brother_num(3):brother_seq(1):first_child(111):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(8):compound_id(271):

id(113):type(I_CONSTANT_type[48]):index(113):parent(114):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(2[8]):infor_index(-1):line_num(9):compound_id(271):

id(114):type(constant_type[17]):index(114):parent(115):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(113):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(115):type(primary_expression_type[72]):index(115):parent(116):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(114):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(9):compound_id(271):

id(116):type(postfix_expression_type[71]):index(116):parent(117):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(115):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(117):type(unary_expression_type[96]):index(117):parent(118):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(116):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(118):type(cast_expression_type[13]):index(118):parent(119):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(117):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(119):type(multiplicative_expression_type[65]):index(119):parent(120):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(118):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(120):type(additive_expression_type[4]):index(120):parent(121):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(119):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(121):type(shift_expression_type[78]):index(121):parent(122):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(120):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(122):type(relational_expression_type[74]):index(122):parent(123):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(121):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(123):type(equality_expression_type[35]):index(123):parent(124):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(122):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(124):type(and_expression_type[6]):index(124):parent(125):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(123):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(125):type(exclusive_or_expression_type[36]):index(125):parent(126):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(124):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(126):type(inclusive_or_expression_type[52]):index(126):parent(127):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(125):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(127):type(logical_and_expression_type[61]):index(127):parent(128):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(126):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(128):type(logical_or_expression_type[62]):index(128):parent(129):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(127):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(129):type(conditional_expression_type[15]):index(129):parent(130):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(128):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(130):type(constant_expression_type[16]):index(130):parent(166):left_brother(-1):right_brother(165):brother_num(2):brother_seq(0):first_child(129):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(271):

id(131):type(IDENTIFIER_type[49]):index(131):parent(132):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[9]):infor_index(-1):line_num(10):compound_id(271):

id(132):type(primary_expression_type[72]):index(132):parent(133):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(131):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(133):type(postfix_expression_type[71]):index(133):parent(134):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(132):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(134):type(unary_expression_type[96]):index(134):parent(162):left_brother(-1):right_brother(136):brother_num(2):brother_seq(0):first_child(133):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(135):type(EQU_ASSIGN_type[30]):index(135):parent(136):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index([-1]):infor_index(-1):line_num(10):compound_id(271):

id(136):type(assignment_operator_type[9]):index(136):parent(162):left_brother(134):right_brother(161):brother_num(3):brother_seq(1):first_child(135):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(137):type(IDENTIFIER_type[49]):index(137):parent(138):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[10]):infor_index(-1):line_num(10):compound_id(271):

id(138):type(primary_expression_type[72]):index(138):parent(139):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(137):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(139):type(postfix_expression_type[71]):index(139):parent(140):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(138):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(140):type(unary_expression_type[96]):index(140):parent(141):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(139):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(141):type(cast_expression_type[13]):index(141):parent(142):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(140):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(142):type(multiplicative_expression_type[65]):index(142):parent(143):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(141):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(143):type(additive_expression_type[4]):index(143):parent(151):left_brother(-1):right_brother(150):brother_num(2):brother_seq(0):first_child(142):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(144):type(I_CONSTANT_type[48]):index(144):parent(145):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(1[11]):infor_index(-1):line_num(10):compound_id(271):

id(145):type(constant_type[17]):index(145):parent(146):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(144):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(146):type(primary_expression_type[72]):index(146):parent(147):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(145):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(10):compound_id(271):

id(147):type(postfix_expression_type[71]):index(147):parent(148):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(146):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(148):type(unary_expression_type[96]):index(148):parent(149):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(147):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(149):type(cast_expression_type[13]):index(149):parent(150):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(148):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(150):type(multiplicative_expression_type[65]):index(150):parent(151):left_brother(143):right_brother(-1):brother_num(2):brother_seq(1):first_child(149):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(151):type(additive_expression_type[4]):index(151):parent(152):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(143):child_num(2):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(10):compound_id(271):

id(152):type(shift_expression_type[78]):index(152):parent(153):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(151):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(153):type(relational_expression_type[74]):index(153):parent(154):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(152):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(154):type(equality_expression_type[35]):index(154):parent(155):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(153):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(155):type(and_expression_type[6]):index(155):parent(156):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(154):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(156):type(exclusive_or_expression_type[36]):index(156):parent(157):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(155):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(157):type(inclusive_or_expression_type[52]):index(157):parent(158):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(156):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(158):type(logical_and_expression_type[61]):index(158):parent(159):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(157):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(159):type(logical_or_expression_type[62]):index(159):parent(160):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(158):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(160):type(conditional_expression_type[15]):index(160):parent(161):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(159):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(161):type(assignment_expression_type[8]):index(161):parent(162):left_brother(136):right_brother(-1):brother_num(3):brother_seq(2):first_child(160):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(162):type(assignment_expression_type[8]):index(162):parent(163):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(134):child_num(3):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(10):compound_id(271):

id(163):type(expression_type[38]):index(163):parent(164):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(162):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(164):type(expression_statement_type[37]):index(164):parent(165):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(163):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(10):compound_id(271):

id(165):type(statement_type[80]):index(165):parent(166):left_brother(130):right_brother(-1):brother_num(2):brother_seq(1):first_child(164):child_num(1):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(10):compound_id(271):

id(166):type(labeled_statement_type[60]):index(166):parent(167):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(130):child_num(2):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(10):compound_id(271):

id(167):type(statement_type[80]):index(167):parent(168):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(166):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(271):

id(168):type(block_item_type[12]):index(168):parent(109):left_brother(112):right_brother(171):brother_num(4):brother_seq(2):first_child(167):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(10):compound_id(271):

id(169):type(jump_statement_type[58]):index(169):parent(170):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(11):compound_id(271):

id(170):type(statement_type[80]):index(170):parent(171):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(169):child_num(1):inrule_num(5):symbol_index([5]):infor_index(-1):line_num(11):compound_id(271):

id(171):type(block_item_type[12]):index(171):parent(109):left_brother(168):right_brother(226):brother_num(5):brother_seq(3):first_child(170):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(11):compound_id(271):

id(172):type(I_CONSTANT_type[48]):index(172):parent(173):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(3[12]):infor_index(-1):line_num(12):compound_id(271):

id(173):type(constant_type[17]):index(173):parent(174):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(172):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(174):type(primary_expression_type[72]):index(174):parent(175):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(173):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(12):compound_id(271):

id(175):type(postfix_expression_type[71]):index(175):parent(176):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(174):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(176):type(unary_expression_type[96]):index(176):parent(177):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(175):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(177):type(cast_expression_type[13]):index(177):parent(178):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(176):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(178):type(multiplicative_expression_type[65]):index(178):parent(179):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(177):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(179):type(additive_expression_type[4]):index(179):parent(180):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(178):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(180):type(shift_expression_type[78]):index(180):parent(181):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(179):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(181):type(relational_expression_type[74]):index(181):parent(182):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(180):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(182):type(equality_expression_type[35]):index(182):parent(183):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(181):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(183):type(and_expression_type[6]):index(183):parent(184):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(182):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(184):type(exclusive_or_expression_type[36]):index(184):parent(185):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(183):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(185):type(inclusive_or_expression_type[52]):index(185):parent(186):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(184):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(186):type(logical_and_expression_type[61]):index(186):parent(187):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(185):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(187):type(logical_or_expression_type[62]):index(187):parent(188):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(186):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(188):type(conditional_expression_type[15]):index(188):parent(189):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(187):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(189):type(constant_expression_type[16]):index(189):parent(224):left_brother(-1):right_brother(223):brother_num(2):brother_seq(0):first_child(188):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(12):compound_id(271):

id(190):type(IDENTIFIER_type[49]):index(190):parent(191):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[13]):infor_index(-1):line_num(13):compound_id(271):

id(191):type(primary_expression_type[72]):index(191):parent(192):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(190):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(192):type(postfix_expression_type[71]):index(192):parent(193):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(191):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(193):type(unary_expression_type[96]):index(193):parent(220):left_brother(-1):right_brother(195):brother_num(2):brother_seq(0):first_child(192):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(194):type(EQU_ASSIGN_type[30]):index(194):parent(195):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index([-1]):infor_index(-1):line_num(13):compound_id(271):

id(195):type(assignment_operator_type[9]):index(195):parent(220):left_brother(193):right_brother(219):brother_num(3):brother_seq(1):first_child(194):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(196):type(IDENTIFIER_type[49]):index(196):parent(197):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[14]):infor_index(-1):line_num(13):compound_id(271):

id(197):type(primary_expression_type[72]):index(197):parent(198):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(196):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(198):type(postfix_expression_type[71]):index(198):parent(199):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(197):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(199):type(unary_expression_type[96]):index(199):parent(200):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(198):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(200):type(cast_expression_type[13]):index(200):parent(201):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(199):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(201):type(multiplicative_expression_type[65]):index(201):parent(208):left_brother(-1):right_brother(207):brother_num(2):brother_seq(0):first_child(200):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(202):type(I_CONSTANT_type[48]):index(202):parent(203):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(1[15]):infor_index(-1):line_num(13):compound_id(271):

id(203):type(constant_type[17]):index(203):parent(204):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(202):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(204):type(primary_expression_type[72]):index(204):parent(205):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(203):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(13):compound_id(271):

id(205):type(postfix_expression_type[71]):index(205):parent(206):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(204):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(206):type(unary_expression_type[96]):index(206):parent(207):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(205):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(207):type(cast_expression_type[13]):index(207):parent(208):left_brother(201):right_brother(-1):brother_num(2):brother_seq(1):first_child(206):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(208):type(multiplicative_expression_type[65]):index(208):parent(209):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(201):child_num(2):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(13):compound_id(271):

id(209):type(additive_expression_type[4]):index(209):parent(210):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(208):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(210):type(shift_expression_type[78]):index(210):parent(211):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(209):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(211):type(relational_expression_type[74]):index(211):parent(212):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(210):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(212):type(equality_expression_type[35]):index(212):parent(213):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(211):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(213):type(and_expression_type[6]):index(213):parent(214):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(212):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(214):type(exclusive_or_expression_type[36]):index(214):parent(215):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(213):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(215):type(inclusive_or_expression_type[52]):index(215):parent(216):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(214):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(216):type(logical_and_expression_type[61]):index(216):parent(217):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(215):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(217):type(logical_or_expression_type[62]):index(217):parent(218):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(216):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(218):type(conditional_expression_type[15]):index(218):parent(219):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(217):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(219):type(assignment_expression_type[8]):index(219):parent(220):left_brother(195):right_brother(-1):brother_num(3):brother_seq(2):first_child(218):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(220):type(assignment_expression_type[8]):index(220):parent(221):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(193):child_num(3):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(13):compound_id(271):

id(221):type(expression_type[38]):index(221):parent(222):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(220):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(222):type(expression_statement_type[37]):index(222):parent(223):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(221):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(13):compound_id(271):

id(223):type(statement_type[80]):index(223):parent(224):left_brother(189):right_brother(-1):brother_num(2):brother_seq(1):first_child(222):child_num(1):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(13):compound_id(271):

id(224):type(labeled_statement_type[60]):index(224):parent(225):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(189):child_num(2):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(13):compound_id(271):

id(225):type(statement_type[80]):index(225):parent(226):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(224):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(13):compound_id(271):

id(226):type(block_item_type[12]):index(226):parent(109):left_brother(171):right_brother(229):brother_num(6):brother_seq(4):first_child(225):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(13):compound_id(271):

id(227):type(jump_statement_type[58]):index(227):parent(228):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(14):compound_id(271):

id(228):type(statement_type[80]):index(228):parent(229):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(227):child_num(1):inrule_num(5):symbol_index([5]):infor_index(-1):line_num(14):compound_id(271):

id(229):type(block_item_type[12]):index(229):parent(109):left_brother(226):right_brother(267):brother_num(7):brother_seq(5):first_child(228):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(14):compound_id(271):

id(230):type(IDENTIFIER_type[49]):index(230):parent(265):left_brother(-1):right_brother(264):brother_num(2):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(defualt[16]):infor_index(-1):line_num(15):compound_id(271):

id(231):type(IDENTIFIER_type[49]):index(231):parent(232):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[17]):infor_index(-1):line_num(16):compound_id(271):

id(232):type(primary_expression_type[72]):index(232):parent(233):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(231):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(233):type(postfix_expression_type[71]):index(233):parent(234):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(232):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(234):type(unary_expression_type[96]):index(234):parent(261):left_brother(-1):right_brother(236):brother_num(2):brother_seq(0):first_child(233):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(235):type(EQU_ASSIGN_type[30]):index(235):parent(236):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index([-1]):infor_index(-1):line_num(16):compound_id(271):

id(236):type(assignment_operator_type[9]):index(236):parent(261):left_brother(234):right_brother(260):brother_num(3):brother_seq(1):first_child(235):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(237):type(IDENTIFIER_type[49]):index(237):parent(238):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[18]):infor_index(-1):line_num(16):compound_id(271):

id(238):type(primary_expression_type[72]):index(238):parent(239):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(237):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(239):type(postfix_expression_type[71]):index(239):parent(240):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(238):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(240):type(unary_expression_type[96]):index(240):parent(241):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(239):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(241):type(cast_expression_type[13]):index(241):parent(242):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(240):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(242):type(multiplicative_expression_type[65]):index(242):parent(249):left_brother(-1):right_brother(248):brother_num(2):brother_seq(0):first_child(241):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(243):type(I_CONSTANT_type[48]):index(243):parent(244):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(1[19]):infor_index(-1):line_num(16):compound_id(271):

id(244):type(constant_type[17]):index(244):parent(245):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(243):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(245):type(primary_expression_type[72]):index(245):parent(246):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(244):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(16):compound_id(271):

id(246):type(postfix_expression_type[71]):index(246):parent(247):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(245):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(247):type(unary_expression_type[96]):index(247):parent(248):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(246):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(248):type(cast_expression_type[13]):index(248):parent(249):left_brother(242):right_brother(-1):brother_num(2):brother_seq(1):first_child(247):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(249):type(multiplicative_expression_type[65]):index(249):parent(250):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(242):child_num(2):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(16):compound_id(271):

id(250):type(additive_expression_type[4]):index(250):parent(251):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(249):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(251):type(shift_expression_type[78]):index(251):parent(252):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(250):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(252):type(relational_expression_type[74]):index(252):parent(253):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(251):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(253):type(equality_expression_type[35]):index(253):parent(254):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(252):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(254):type(and_expression_type[6]):index(254):parent(255):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(253):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(255):type(exclusive_or_expression_type[36]):index(255):parent(256):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(254):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(256):type(inclusive_or_expression_type[52]):index(256):parent(257):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(255):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(257):type(logical_and_expression_type[61]):index(257):parent(258):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(256):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(258):type(logical_or_expression_type[62]):index(258):parent(259):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(257):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(259):type(conditional_expression_type[15]):index(259):parent(260):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(258):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(260):type(assignment_expression_type[8]):index(260):parent(261):left_brother(236):right_brother(-1):brother_num(3):brother_seq(2):first_child(259):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(261):type(assignment_expression_type[8]):index(261):parent(262):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(234):child_num(3):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(16):compound_id(271):

id(262):type(expression_type[38]):index(262):parent(263):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(261):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(263):type(expression_statement_type[37]):index(263):parent(264):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(262):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(16):compound_id(271):

id(264):type(statement_type[80]):index(264):parent(265):left_brother(230):right_brother(-1):brother_num(2):brother_seq(1):first_child(263):child_num(1):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(16):compound_id(271):

id(265):type(labeled_statement_type[60]):index(265):parent(266):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(230):child_num(2):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(266):type(statement_type[80]):index(266):parent(267):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(265):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(16):compound_id(271):

id(267):type(block_item_type[12]):index(267):parent(109):left_brother(229):right_brother(270):brother_num(8):brother_seq(6):first_child(266):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(16):compound_id(271):

id(268):type(jump_statement_type[58]):index(268):parent(269):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(17):compound_id(271):

id(269):type(statement_type[80]):index(269):parent(270):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(268):child_num(1):inrule_num(5):symbol_index([5]):infor_index(-1):line_num(17):compound_id(271):

id(270):type(block_item_type[12]):index(270):parent(109):left_brother(267):right_brother(-1):brother_num(8):brother_seq(7):first_child(269):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(17):compound_id(271):

id(271):type(compound_statement_type[14]):index(271):parent(272):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(109):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(18):compound_id(271):

id(272):type(statement_type[80]):index(272):parent(273):left_brother(52):right_brother(-1):brother_num(2):brother_seq(1):first_child(271):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(18):compound_id(276):

id(273):type(selection_statement_type[77]):index(273):parent(274):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(52):child_num(2):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(18):compound_id(276):

id(274):type(statement_type[80]):index(274):parent(275):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(273):child_num(1):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(18):compound_id(276):

id(275):type(block_item_type[12]):index(275):parent(34):left_brother(33):right_brother(-1):brother_num(2):brother_seq(1):first_child(274):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(18):compound_id(276):

id(276):type(compound_statement_type[14]):index(276):parent(277):left_brother(5):right_brother(-1):brother_num(3):brother_seq(2):first_child(34):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(21):compound_id(276):

id(277):type(function_definition_type[42]):index(277):parent(278):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(2):child_num(3):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(21):compound_id(0):

id(278):type(external_declaration_type[39]):index(278):parent(279):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(277):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(21):compound_id(0):

id(279):type(translation_unit_type[91]):index(279):parent(-1):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(278):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(21):compound_id(0):

----------print_node_table!
+translation_unit_type node_id:279 child_number:1 inrule_num:0 line_num:21
 +external_declaration_type node_id:278 child_number:1 inrule_num:0 line_num:21
  +function_definition_type node_id:277 child_number:3 inrule_num:1 line_num:21
   +declaration_specifiers_type node_id:2 child_number:1 inrule_num:3 line_num:1
    +type_specifier_type node_id:0 child_number:0 inrule_num:3 line_num:1
   +declarator_type node_id:5 child_number:1 inrule_num:1 line_num:2
    +direct_declarator_type node_id:4 child_number:1 inrule_num:12 line_num:1
     +direct_declarator_type node_id:3 child_number:1 inrule_num:0 line_num:1
      +IDENTIFIER_type node_id:1 child_number:0 inrule_num:-1 line_num:1
   +compound_statement_type node_id:276 child_number:1 inrule_num:1 line_num:21
    +block_item_list_type node_id:34 child_number:2 inrule_num:0 line_num:3
     +block_item_type node_id:33 child_number:1 inrule_num:0 line_num:3
      +declaration_type node_id:32 child_number:2 inrule_num:1 line_num:3
       +declaration_specifiers_type node_id:8 child_number:1 inrule_num:3 line_num:3
        +type_specifier_type node_id:6 child_number:0 inrule_num:3 line_num:3
       +init_declarator_list_type node_id:31 child_number:1 inrule_num:0 line_num:3
        +init_declarator_type node_id:30 child_number:2 inrule_num:0 line_num:3
         +declarator_type node_id:10 child_number:1 inrule_num:1 line_num:3
          +direct_declarator_type node_id:9 child_number:1 inrule_num:0 line_num:3
           +IDENTIFIER_type node_id:7 child_number:0 inrule_num:-1 line_num:3
         +initializer_type node_id:29 child_number:1 inrule_num:2 line_num:3
          +assignment_expression_type node_id:28 child_number:1 inrule_num:0 line_num:3
           +conditional_expression_type node_id:27 child_number:1 inrule_num:0 line_num:3
            +logical_or_expression_type node_id:26 child_number:1 inrule_num:0 line_num:3
             +logical_and_expression_type node_id:25 child_number:1 inrule_num:0 line_num:3
              +inclusive_or_expression_type node_id:24 child_number:1 inrule_num:0 line_num:3
               +exclusive_or_expression_type node_id:23 child_number:1 inrule_num:0 line_num:3
                +and_expression_type node_id:22 child_number:1 inrule_num:0 line_num:3
                 +equality_expression_type node_id:21 child_number:1 inrule_num:0 line_num:3
                  +relational_expression_type node_id:20 child_number:1 inrule_num:0 line_num:3
                   +shift_expression_type node_id:19 child_number:1 inrule_num:0 line_num:3
                    +additive_expression_type node_id:18 child_number:1 inrule_num:0 line_num:3
                     +multiplicative_expression_type node_id:17 child_number:1 inrule_num:0 line_num:3
                      +cast_expression_type node_id:16 child_number:1 inrule_num:0 line_num:3
                       +unary_expression_type node_id:15 child_number:1 inrule_num:0 line_num:3
                        +postfix_expression_type node_id:14 child_number:1 inrule_num:0 line_num:3
                         +primary_expression_type node_id:13 child_number:1 inrule_num:1 line_num:3
                          +constant_type node_id:12 child_number:1 inrule_num:0 line_num:3
                           +I_CONSTANT_type node_id:11 child_number:0 inrule_num:-1 line_num:3
     +block_item_type node_id:275 child_number:1 inrule_num:1 line_num:18
      +statement_type node_id:274 child_number:1 inrule_num:3 line_num:18
       +selection_statement_type node_id:273 child_number:2 inrule_num:2 line_num:18
        +expression_type node_id:52 child_number:1 inrule_num:0 line_num:4
         +assignment_expression_type node_id:51 child_number:1 inrule_num:0 line_num:4
          +conditional_expression_type node_id:50 child_number:1 inrule_num:0 line_num:4
           +logical_or_expression_type node_id:49 child_number:1 inrule_num:0 line_num:4
            +logical_and_expression_type node_id:48 child_number:1 inrule_num:0 line_num:4
             +inclusive_or_expression_type node_id:47 child_number:1 inrule_num:0 line_num:4
              +exclusive_or_expression_type node_id:46 child_number:1 inrule_num:0 line_num:4
               +and_expression_type node_id:45 child_number:1 inrule_num:0 line_num:4
                +equality_expression_type node_id:44 child_number:1 inrule_num:0 line_num:4
                 +relational_expression_type node_id:43 child_number:1 inrule_num:0 line_num:4
                  +shift_expression_type node_id:42 child_number:1 inrule_num:0 line_num:4
                   +additive_expression_type node_id:41 child_number:1 inrule_num:0 line_num:4
                    +multiplicative_expression_type node_id:40 child_number:1 inrule_num:0 line_num:4
                     +cast_expression_type node_id:39 child_number:1 inrule_num:0 line_num:4
                      +unary_expression_type node_id:38 child_number:1 inrule_num:0 line_num:4
                       +postfix_expression_type node_id:37 child_number:1 inrule_num:0 line_num:4
                        +primary_expression_type node_id:36 child_number:1 inrule_num:0 line_num:4
                         +IDENTIFIER_type node_id:35 child_number:0 inrule_num:-1 line_num:4
        +statement_type node_id:272 child_number:1 inrule_num:1 line_num:18
         +compound_statement_type node_id:271 child_number:1 inrule_num:1 line_num:18
          +block_item_list_type node_id:109 child_number:8 inrule_num:0 line_num:7
           +block_item_type node_id:108 child_number:1 inrule_num:1 line_num:7
            +statement_type node_id:107 child_number:1 inrule_num:0 line_num:7
             +labeled_statement_type node_id:106 child_number:2 inrule_num:1 line_num:7
              +constant_expression_type node_id:70 child_number:1 inrule_num:0 line_num:6
               +conditional_expression_type node_id:69 child_number:1 inrule_num:0 line_num:6
                +logical_or_expression_type node_id:68 child_number:1 inrule_num:0 line_num:6
                 +logical_and_expression_type node_id:67 child_number:1 inrule_num:0 line_num:6
                  +inclusive_or_expression_type node_id:66 child_number:1 inrule_num:0 line_num:6
                   +exclusive_or_expression_type node_id:65 child_number:1 inrule_num:0 line_num:6
                    +and_expression_type node_id:64 child_number:1 inrule_num:0 line_num:6
                     +equality_expression_type node_id:63 child_number:1 inrule_num:0 line_num:6
                      +relational_expression_type node_id:62 child_number:1 inrule_num:0 line_num:6
                       +shift_expression_type node_id:61 child_number:1 inrule_num:0 line_num:6
                        +additive_expression_type node_id:60 child_number:1 inrule_num:0 line_num:6
                         +multiplicative_expression_type node_id:59 child_number:1 inrule_num:0 line_num:6
                          +cast_expression_type node_id:58 child_number:1 inrule_num:0 line_num:6
                           +unary_expression_type node_id:57 child_number:1 inrule_num:0 line_num:6
                            +postfix_expression_type node_id:56 child_number:1 inrule_num:0 line_num:6
                             +primary_expression_type node_id:55 child_number:1 inrule_num:1 line_num:6
                              +constant_type node_id:54 child_number:1 inrule_num:0 line_num:6
                               +I_CONSTANT_type node_id:53 child_number:0 inrule_num:-1 line_num:6
              +statement_type node_id:105 child_number:1 inrule_num:2 line_num:7
               +expression_statement_type node_id:104 child_number:1 inrule_num:1 line_num:7
                +expression_type node_id:103 child_number:1 inrule_num:0 line_num:7
                 +assignment_expression_type node_id:102 child_number:3 inrule_num:1 line_num:7
                  +unary_expression_type node_id:74 child_number:1 inrule_num:0 line_num:7
                   +postfix_expression_type node_id:73 child_number:1 inrule_num:0 line_num:7
                    +primary_expression_type node_id:72 child_number:1 inrule_num:0 line_num:7
                     +IDENTIFIER_type node_id:71 child_number:0 inrule_num:-1 line_num:7
                  +assignment_operator_type node_id:76 child_number:1 inrule_num:0 line_num:7
                   +EQU_ASSIGN_type node_id:75 child_number:0 inrule_num:-1 line_num:7
                  +assignment_expression_type node_id:101 child_number:1 inrule_num:0 line_num:7
                   +conditional_expression_type node_id:100 child_number:1 inrule_num:0 line_num:7
                    +logical_or_expression_type node_id:99 child_number:1 inrule_num:0 line_num:7
                     +logical_and_expression_type node_id:98 child_number:1 inrule_num:0 line_num:7
                      +inclusive_or_expression_type node_id:97 child_number:1 inrule_num:0 line_num:7
                       +exclusive_or_expression_type node_id:96 child_number:1 inrule_num:0 line_num:7
                        +and_expression_type node_id:95 child_number:1 inrule_num:0 line_num:7
                         +equality_expression_type node_id:94 child_number:1 inrule_num:0 line_num:7
                          +relational_expression_type node_id:93 child_number:1 inrule_num:0 line_num:7
                           +shift_expression_type node_id:92 child_number:1 inrule_num:0 line_num:7
                            +additive_expression_type node_id:91 child_number:2 inrule_num:1 line_num:7
                             +additive_expression_type node_id:83 child_number:1 inrule_num:0 line_num:7
                              +multiplicative_expression_type node_id:82 child_number:1 inrule_num:0 line_num:7
                               +cast_expression_type node_id:81 child_number:1 inrule_num:0 line_num:7
                                +unary_expression_type node_id:80 child_number:1 inrule_num:0 line_num:7
                                 +postfix_expression_type node_id:79 child_number:1 inrule_num:0 line_num:7
                                  +primary_expression_type node_id:78 child_number:1 inrule_num:0 line_num:7
                                   +IDENTIFIER_type node_id:77 child_number:0 inrule_num:-1 line_num:7
                             +multiplicative_expression_type node_id:90 child_number:1 inrule_num:0 line_num:7
                              +cast_expression_type node_id:89 child_number:1 inrule_num:0 line_num:7
                               +unary_expression_type node_id:88 child_number:1 inrule_num:0 line_num:7
                                +postfix_expression_type node_id:87 child_number:1 inrule_num:0 line_num:7
                                 +primary_expression_type node_id:86 child_number:1 inrule_num:1 line_num:7
                                  +constant_type node_id:85 child_number:1 inrule_num:0 line_num:7
                                   +I_CONSTANT_type node_id:84 child_number:0 inrule_num:-1 line_num:7
           +block_item_type node_id:112 child_number:1 inrule_num:1 line_num:8
            +statement_type node_id:111 child_number:1 inrule_num:5 line_num:8
             +jump_statement_type node_id:110 child_number:0 inrule_num:2 line_num:8
           +block_item_type node_id:168 child_number:1 inrule_num:1 line_num:10
            +statement_type node_id:167 child_number:1 inrule_num:0 line_num:10
             +labeled_statement_type node_id:166 child_number:2 inrule_num:1 line_num:10
              +constant_expression_type node_id:130 child_number:1 inrule_num:0 line_num:9
               +conditional_expression_type node_id:129 child_number:1 inrule_num:0 line_num:9
                +logical_or_expression_type node_id:128 child_number:1 inrule_num:0 line_num:9
                 +logical_and_expression_type node_id:127 child_number:1 inrule_num:0 line_num:9
                  +inclusive_or_expression_type node_id:126 child_number:1 inrule_num:0 line_num:9
                   +exclusive_or_expression_type node_id:125 child_number:1 inrule_num:0 line_num:9
                    +and_expression_type node_id:124 child_number:1 inrule_num:0 line_num:9
                     +equality_expression_type node_id:123 child_number:1 inrule_num:0 line_num:9
                      +relational_expression_type node_id:122 child_number:1 inrule_num:0 line_num:9
                       +shift_expression_type node_id:121 child_number:1 inrule_num:0 line_num:9
                        +additive_expression_type node_id:120 child_number:1 inrule_num:0 line_num:9
                         +multiplicative_expression_type node_id:119 child_number:1 inrule_num:0 line_num:9
                          +cast_expression_type node_id:118 child_number:1 inrule_num:0 line_num:9
                           +unary_expression_type node_id:117 child_number:1 inrule_num:0 line_num:9
                            +postfix_expression_type node_id:116 child_number:1 inrule_num:0 line_num:9
                             +primary_expression_type node_id:115 child_number:1 inrule_num:1 line_num:9
                              +constant_type node_id:114 child_number:1 inrule_num:0 line_num:9
                               +I_CONSTANT_type node_id:113 child_number:0 inrule_num:-1 line_num:9
              +statement_type node_id:165 child_number:1 inrule_num:2 line_num:10
               +expression_statement_type node_id:164 child_number:1 inrule_num:1 line_num:10
                +expression_type node_id:163 child_number:1 inrule_num:0 line_num:10
                 +assignment_expression_type node_id:162 child_number:3 inrule_num:1 line_num:10
                  +unary_expression_type node_id:134 child_number:1 inrule_num:0 line_num:10
                   +postfix_expression_type node_id:133 child_number:1 inrule_num:0 line_num:10
                    +primary_expression_type node_id:132 child_number:1 inrule_num:0 line_num:10
                     +IDENTIFIER_type node_id:131 child_number:0 inrule_num:-1 line_num:10
                  +assignment_operator_type node_id:136 child_number:1 inrule_num:0 line_num:10
                   +EQU_ASSIGN_type node_id:135 child_number:0 inrule_num:-1 line_num:10
                  +assignment_expression_type node_id:161 child_number:1 inrule_num:0 line_num:10
                   +conditional_expression_type node_id:160 child_number:1 inrule_num:0 line_num:10
                    +logical_or_expression_type node_id:159 child_number:1 inrule_num:0 line_num:10
                     +logical_and_expression_type node_id:158 child_number:1 inrule_num:0 line_num:10
                      +inclusive_or_expression_type node_id:157 child_number:1 inrule_num:0 line_num:10
                       +exclusive_or_expression_type node_id:156 child_number:1 inrule_num:0 line_num:10
                        +and_expression_type node_id:155 child_number:1 inrule_num:0 line_num:10
                         +equality_expression_type node_id:154 child_number:1 inrule_num:0 line_num:10
                          +relational_expression_type node_id:153 child_number:1 inrule_num:0 line_num:10
                           +shift_expression_type node_id:152 child_number:1 inrule_num:0 line_num:10
                            +additive_expression_type node_id:151 child_number:2 inrule_num:2 line_num:10
                             +additive_expression_type node_id:143 child_number:1 inrule_num:0 line_num:10
                              +multiplicative_expression_type node_id:142 child_number:1 inrule_num:0 line_num:10
                               +cast_expression_type node_id:141 child_number:1 inrule_num:0 line_num:10
                                +unary_expression_type node_id:140 child_number:1 inrule_num:0 line_num:10
                                 +postfix_expression_type node_id:139 child_number:1 inrule_num:0 line_num:10
                                  +primary_expression_type node_id:138 child_number:1 inrule_num:0 line_num:10
                                   +IDENTIFIER_type node_id:137 child_number:0 inrule_num:-1 line_num:10
                             +multiplicative_expression_type node_id:150 child_number:1 inrule_num:0 line_num:10
                              +cast_expression_type node_id:149 child_number:1 inrule_num:0 line_num:10
                               +unary_expression_type node_id:148 child_number:1 inrule_num:0 line_num:10
                                +postfix_expression_type node_id:147 child_number:1 inrule_num:0 line_num:10
                                 +primary_expression_type node_id:146 child_number:1 inrule_num:1 line_num:10
                                  +constant_type node_id:145 child_number:1 inrule_num:0 line_num:10
                                   +I_CONSTANT_type node_id:144 child_number:0 inrule_num:-1 line_num:10
           +block_item_type node_id:171 child_number:1 inrule_num:1 line_num:11
            +statement_type node_id:170 child_number:1 inrule_num:5 line_num:11
             +jump_statement_type node_id:169 child_number:0 inrule_num:2 line_num:11
           +block_item_type node_id:226 child_number:1 inrule_num:1 line_num:13
            +statement_type node_id:225 child_number:1 inrule_num:0 line_num:13
             +labeled_statement_type node_id:224 child_number:2 inrule_num:1 line_num:13
              +constant_expression_type node_id:189 child_number:1 inrule_num:0 line_num:12
               +conditional_expression_type node_id:188 child_number:1 inrule_num:0 line_num:12
                +logical_or_expression_type node_id:187 child_number:1 inrule_num:0 line_num:12
                 +logical_and_expression_type node_id:186 child_number:1 inrule_num:0 line_num:12
                  +inclusive_or_expression_type node_id:185 child_number:1 inrule_num:0 line_num:12
                   +exclusive_or_expression_type node_id:184 child_number:1 inrule_num:0 line_num:12
                    +and_expression_type node_id:183 child_number:1 inrule_num:0 line_num:12
                     +equality_expression_type node_id:182 child_number:1 inrule_num:0 line_num:12
                      +relational_expression_type node_id:181 child_number:1 inrule_num:0 line_num:12
                       +shift_expression_type node_id:180 child_number:1 inrule_num:0 line_num:12
                        +additive_expression_type node_id:179 child_number:1 inrule_num:0 line_num:12
                         +multiplicative_expression_type node_id:178 child_number:1 inrule_num:0 line_num:12
                          +cast_expression_type node_id:177 child_number:1 inrule_num:0 line_num:12
                           +unary_expression_type node_id:176 child_number:1 inrule_num:0 line_num:12
                            +postfix_expression_type node_id:175 child_number:1 inrule_num:0 line_num:12
                             +primary_expression_type node_id:174 child_number:1 inrule_num:1 line_num:12
                              +constant_type node_id:173 child_number:1 inrule_num:0 line_num:12
                               +I_CONSTANT_type node_id:172 child_number:0 inrule_num:-1 line_num:12
              +statement_type node_id:223 child_number:1 inrule_num:2 line_num:13
               +expression_statement_type node_id:222 child_number:1 inrule_num:1 line_num:13
                +expression_type node_id:221 child_number:1 inrule_num:0 line_num:13
                 +assignment_expression_type node_id:220 child_number:3 inrule_num:1 line_num:13
                  +unary_expression_type node_id:193 child_number:1 inrule_num:0 line_num:13
                   +postfix_expression_type node_id:192 child_number:1 inrule_num:0 line_num:13
                    +primary_expression_type node_id:191 child_number:1 inrule_num:0 line_num:13
                     +IDENTIFIER_type node_id:190 child_number:0 inrule_num:-1 line_num:13
                  +assignment_operator_type node_id:195 child_number:1 inrule_num:0 line_num:13
                   +EQU_ASSIGN_type node_id:194 child_number:0 inrule_num:-1 line_num:13
                  +assignment_expression_type node_id:219 child_number:1 inrule_num:0 line_num:13
                   +conditional_expression_type node_id:218 child_number:1 inrule_num:0 line_num:13
                    +logical_or_expression_type node_id:217 child_number:1 inrule_num:0 line_num:13
                     +logical_and_expression_type node_id:216 child_number:1 inrule_num:0 line_num:13
                      +inclusive_or_expression_type node_id:215 child_number:1 inrule_num:0 line_num:13
                       +exclusive_or_expression_type node_id:214 child_number:1 inrule_num:0 line_num:13
                        +and_expression_type node_id:213 child_number:1 inrule_num:0 line_num:13
                         +equality_expression_type node_id:212 child_number:1 inrule_num:0 line_num:13
                          +relational_expression_type node_id:211 child_number:1 inrule_num:0 line_num:13
                           +shift_expression_type node_id:210 child_number:1 inrule_num:0 line_num:13
                            +additive_expression_type node_id:209 child_number:1 inrule_num:0 line_num:13
                             +multiplicative_expression_type node_id:208 child_number:2 inrule_num:1 line_num:13
                              +multiplicative_expression_type node_id:201 child_number:1 inrule_num:0 line_num:13
                               +cast_expression_type node_id:200 child_number:1 inrule_num:0 line_num:13
                                +unary_expression_type node_id:199 child_number:1 inrule_num:0 line_num:13
                                 +postfix_expression_type node_id:198 child_number:1 inrule_num:0 line_num:13
                                  +primary_expression_type node_id:197 child_number:1 inrule_num:0 line_num:13
                                   +IDENTIFIER_type node_id:196 child_number:0 inrule_num:-1 line_num:13
                              +cast_expression_type node_id:207 child_number:1 inrule_num:0 line_num:13
                               +unary_expression_type node_id:206 child_number:1 inrule_num:0 line_num:13
                                +postfix_expression_type node_id:205 child_number:1 inrule_num:0 line_num:13
                                 +primary_expression_type node_id:204 child_number:1 inrule_num:1 line_num:13
                                  +constant_type node_id:203 child_number:1 inrule_num:0 line_num:13
                                   +I_CONSTANT_type node_id:202 child_number:0 inrule_num:-1 line_num:13
           +block_item_type node_id:229 child_number:1 inrule_num:1 line_num:14
            +statement_type node_id:228 child_number:1 inrule_num:5 line_num:14
             +jump_statement_type node_id:227 child_number:0 inrule_num:2 line_num:14
           +block_item_type node_id:267 child_number:1 inrule_num:1 line_num:16
            +statement_type node_id:266 child_number:1 inrule_num:0 line_num:16
             +labeled_statement_type node_id:265 child_number:2 inrule_num:0 line_num:16
              +IDENTIFIER_type node_id:230 child_number:0 inrule_num:-1 line_num:15
              +statement_type node_id:264 child_number:1 inrule_num:2 line_num:16
               +expression_statement_type node_id:263 child_number:1 inrule_num:1 line_num:16
                +expression_type node_id:262 child_number:1 inrule_num:0 line_num:16
                 +assignment_expression_type node_id:261 child_number:3 inrule_num:1 line_num:16
                  +unary_expression_type node_id:234 child_number:1 inrule_num:0 line_num:16
                   +postfix_expression_type node_id:233 child_number:1 inrule_num:0 line_num:16
                    +primary_expression_type node_id:232 child_number:1 inrule_num:0 line_num:16
                     +IDENTIFIER_type node_id:231 child_number:0 inrule_num:-1 line_num:16
                  +assignment_operator_type node_id:236 child_number:1 inrule_num:0 line_num:16
                   +EQU_ASSIGN_type node_id:235 child_number:0 inrule_num:-1 line_num:16
                  +assignment_expression_type node_id:260 child_number:1 inrule_num:0 line_num:16
                   +conditional_expression_type node_id:259 child_number:1 inrule_num:0 line_num:16
                    +logical_or_expression_type node_id:258 child_number:1 inrule_num:0 line_num:16
                     +logical_and_expression_type node_id:257 child_number:1 inrule_num:0 line_num:16
                      +inclusive_or_expression_type node_id:256 child_number:1 inrule_num:0 line_num:16
                       +exclusive_or_expression_type node_id:255 child_number:1 inrule_num:0 line_num:16
                        +and_expression_type node_id:254 child_number:1 inrule_num:0 line_num:16
                         +equality_expression_type node_id:253 child_number:1 inrule_num:0 line_num:16
                          +relational_expression_type node_id:252 child_number:1 inrule_num:0 line_num:16
                           +shift_expression_type node_id:251 child_number:1 inrule_num:0 line_num:16
                            +additive_expression_type node_id:250 child_number:1 inrule_num:0 line_num:16
                             +multiplicative_expression_type node_id:249 child_number:2 inrule_num:2 line_num:16
                              +multiplicative_expression_type node_id:242 child_number:1 inrule_num:0 line_num:16
                               +cast_expression_type node_id:241 child_number:1 inrule_num:0 line_num:16
                                +unary_expression_type node_id:240 child_number:1 inrule_num:0 line_num:16
                                 +postfix_expression_type node_id:239 child_number:1 inrule_num:0 line_num:16
                                  +primary_expression_type node_id:238 child_number:1 inrule_num:0 line_num:16
                                   +IDENTIFIER_type node_id:237 child_number:0 inrule_num:-1 line_num:16
                              +cast_expression_type node_id:248 child_number:1 inrule_num:0 line_num:16
                               +unary_expression_type node_id:247 child_number:1 inrule_num:0 line_num:16
                                +postfix_expression_type node_id:246 child_number:1 inrule_num:0 line_num:16
                                 +primary_expression_type node_id:245 child_number:1 inrule_num:1 line_num:16
                                  +constant_type node_id:244 child_number:1 inrule_num:0 line_num:16
                                   +I_CONSTANT_type node_id:243 child_number:0 inrule_num:-1 line_num:16
           +block_item_type node_id:270 child_number:1 inrule_num:1 line_num:17
            +statement_type node_id:269 child_number:1 inrule_num:5 line_num:17
             +jump_statement_type node_id:268 child_number:0 inrule_num:2 line_num:17
---------------------symbol_table:
id(0):name(main):name_len(4):type(not_know_type[0]):file((null)):file_len(0):line_num:(1):in_which_node(1):
id(1):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(3):in_which_node(7):
id(2):name(12):name_len(2):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(3):in_which_node(11):
id(3):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(4):in_which_node(35):
id(4):name(1):name_len(1):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(6):in_which_node(53):
id(5):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(7):in_which_node(71):
id(6):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(7):in_which_node(77):
id(7):name(1):name_len(1):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(7):in_which_node(84):
id(8):name(2):name_len(1):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(9):in_which_node(113):
id(9):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(10):in_which_node(131):
id(10):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(10):in_which_node(137):
id(11):name(1):name_len(1):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(10):in_which_node(144):
id(12):name(3):name_len(1):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(12):in_which_node(172):
id(13):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(13):in_which_node(190):
id(14):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(13):in_which_node(196):
id(15):name(1):name_len(1):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(13):in_which_node(202):
id(16):name(defualt):name_len(7):type(not_know_type[0]):file((null)):file_len(0):line_num:(15):in_which_node(230):
id(17):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(16):in_which_node(231):
id(18):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(16):in_which_node(237):
id(19):name(1):name_len(1):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(16):in_which_node(243):
---------------------symbol_table!
1 has father 0
2 has father 1
stack: 0 


============================================
= print declaration_specifiers_table       =
============================================
declaration_specifiers_table[0] start
index:0
storage_class_specifier none(0x00000000)
type_specifier(0x00000003): signed default int index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[0] end
--------------------------------------------
declaration_specifiers_table[1] start
index:1
storage_class_specifier none(0x00000000)
type_specifier(0x00000003): signed default int index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[1] end
--------------------------------------------






============================================
= declarator_table                         =
============================================
declarator_table_num:2
--------------------------------------------
index:0 node_index:5 pointer_index:-1 direct_declarator_index:0
--------------------------------------------
index:1 node_index:10 pointer_index:-1 direct_declarator_index:1
--------------------------------------------
--------------------------------------------



============================================
= print direct_declarator_table            =
============================================
index:0
is_IDENTIFIER:0
node_index:-1
number:2
0. category:12 index1:0 index2:0
1. category:0 index1:0 index2:0
--------------------------------------------
index:1
is_IDENTIFIER:0
node_index:-1
number:1
0. category:0 index1:1 index2:0
--------------------------------------------






============================================
= print compound_statement_table           =
============================================
index:0 node_index:276 block_item_num:2
is_statement:0 node_index:33 index:0
is_statement:1 node_index:275 index:1
--------------------------------------------






============================================
= block_item_table                         =
============================================
initializer_block_item_table_num:2
--------------------------------------------
index:0 node_index:33 is_statement:0 data_index:0 child_index:32 block_item_next_index:1
--------------------------------------------
index:1 node_index:275 is_statement:1 data_index:0 child_index:274 block_item_next_index:-1
--------------------------------------------
--------------------------------------------



============================================
= declaration_table                        =
============================================
declaration_table_num:1
--------------------------------------------
index:0 node_index:32 declaration_specifiers_index:1 static_assert_declaration_index:-1
         init_declarator_num:1 init_declarator_infor->next_id:0
--------------------------------------------
--------------------------------------------



============================================
= init_declarator_table                    =
============================================
init_declarator_table_num:1
--------------------------------------------
index:0 node_index:30 declarator_index:1 initializer_index:0 next:-1
--------------------------------------------
--------------------------------------------



============================================
= initializer_table                        =
============================================
initializer_table_num:1
--------------------------------------------
index:0 node_index:29 is_assignment_expression:1 data_index:0
--------------------------------------------
--------------------------------------------



============================================
= initializer_list_table                   =
============================================
initializer_list_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= initializer_list_one_table               =
============================================
initializer_list_one_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= statement_table                          =
============================================
statement_table_num:1
--------------------------------------------
index:0 node_index:274 category:3 data_index:0 
--------------------------------------------
--------------------------------------------



============================================
= labeled_statement_table                  =
============================================
labeled_statement_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= expression_statement_table               =
============================================
expression_statement_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= selection_statement_table                =
============================================
selection_statement_table_num:1
--------------------------------------------
index:0 node_index:273 category:2 data1_index:-1 data2_index:-1 data3_index:-1
--------------------------------------------
--------------------------------------------



============================================
= iteration_statement_table                =
============================================
iteration_statement_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= jump_statement_table                     =
============================================
jump_statement_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= expression_table                         =
============================================
expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= assignment_expression_table              =
============================================
assignment_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= conditional_expression_table             =
============================================
conditional_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= unary_expression_table                   =
============================================
unary_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= logical_or_expression_table              =
============================================
logical_or_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= logical_and_expression_table             =
============================================
logical_and_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= inclusive_or_expression_table            =
============================================
inclusive_or_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= exclusive_or_expression_table            =
============================================
exclusive_or_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= and_expression_table                     =
============================================
and_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= equality_expression_table                =
============================================
equality_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= relational_expression_table              =
============================================
relational_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= shift_expression_table                   =
============================================
shift_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= additive_expression_table                =
============================================
additive_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= multiplicative_expression_table          =
============================================
multiplicative_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= cast_expression_table                    =
============================================
cast_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= unary_expression_table                   =
============================================
unary_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= postfix_expression_table                 =
============================================
postfix_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= primary_expression_table                 =
============================================
primary_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= IDENTIFIER_table                         =
============================================
IDENTIFIER_table_num:2
--------------------------------------------
index:0 node_num:1 smbl_num:1 node_index:1 symbol_a_index:-1
 node_id:1
 smbl_id:0
 smbl_name:main
--------------------------------------------
index:1 node_num:1 smbl_num:1 node_index:7 symbol_a_index:-1
declaration_specifiers_table[0] start
index:0
storage_class_specifier none(0x00000000)
type_specifier(0x00000003): signed default int index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[0] end
 node_id:7
 smbl_id:1
 smbl_name:a
--------------------------------------------
--------------------------------------------



============================================
= symbol_a_table                           =
============================================
symbol_a_table_num:1
--------------------------------------------
index:0 declaration_specifiers_index:1 IDENTIFIER_index:1 symbol_name:***a*** s_type(variable:0 struct:1 function:2):0         
pointer_index:-1 array_dimension:0
taint_m:0
--------------------------------------------
--------------------------------------------


============================================
= instruction_table                        =
============================================
instruction_table_num:1
--------------------------------------------
index:0 sequence:0 node_index:276 prev:0 next:0 ins_type:57
line_num:21 inst_type:57 ins_ret:-1 ins_data1:-1 ins_data2:-1 ins_data3:-1
instruction description: compound_statement_ins(57)
including 0 instruction: -1
--------------------------------------------
--------------------------------------------

