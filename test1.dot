digraph G{
65[label="65 translation_unit_type(91):0:0"];
64[label="64 external_declaration_type(39):0:0"];
65->64;
64[label="64 external_declaration_type(39):0:0"];
63[label="63 function_definition_type(42):1:0"];
64->63;
63[label="63 function_definition_type(42):1:0"];
2[label="2 declaration_specifiers_type(21):3:0"];
63->2;
2[label="2 declaration_specifiers_type(21):3:0"];
0[label="0 type_specifier_type(95):3:0"];
2->0;
0[label="0 type_specifier_type(95):3:0"];
5[label="5 declarator_type(23):1:0"];
63->5;
5[label="5 declarator_type(23):1:0"];
4[label="4 direct_declarator_type(28):12:0"];
5->4;
4[label="4 direct_declarator_type(28):12:0"];
3[label="3 direct_declarator_type(28):0:0"];
4->3;
3[label="3 direct_declarator_type(28):0:0"];
1[label="1 not_know_type(0):-1:0:main"];
3->1;
1[label="1 not_know_type(0):-1:0:main"];
62[label="62 compound_statement_type(14):1:62"];
63->62;
62[label="62 compound_statement_type(14):1:62"];
61[label="61 block_item_list_type(11):0:62"];
62->61;
61[label="61 block_item_list_type(11):0:62"];
60[label="60 block_item_type(12):1:62"];
61->60;
60[label="60 block_item_type(12):1:62"];
59[label="59 statement_type(80):3:62"];
60->59;
59[label="59 statement_type(80):3:62"];
58[label="58 selection_statement_type(77):0:62"];
59->58;
58[label="58 selection_statement_type(77):0:62"];
33[label="33 expression_type(38):0:62"];
58->33;
33[label="33 expression_type(38):0:62"];
32[label="32 assignment_expression_type(8):0:62"];
33->32;
32[label="32 assignment_expression_type(8):0:62"];
31[label="31 conditional_expression_type(15):0:62"];
32->31;
31[label="31 conditional_expression_type(15):0:62"];
30[label="30 logical_or_expression_type(62):0:62"];
31->30;
30[label="30 logical_or_expression_type(62):0:62"];
29[label="29 logical_and_expression_type(61):0:62"];
30->29;
29[label="29 logical_and_expression_type(61):0:62"];
28[label="28 inclusive_or_expression_type(52):0:62"];
29->28;
28[label="28 inclusive_or_expression_type(52):0:62"];
27[label="27 exclusive_or_expression_type(36):0:62"];
28->27;
27[label="27 exclusive_or_expression_type(36):0:62"];
26[label="26 and_expression_type(6):0:62"];
27->26;
26[label="26 and_expression_type(6):0:62"];
25[label="25 equality_expression_type(35):0:62"];
26->25;
25[label="25 equality_expression_type(35):0:62"];
24[label="24 relational_expression_type(74):2:62"];
25->24;
24[label="24 relational_expression_type(74):2:62"];
14[label="14 relational_expression_type(74):0:62"];
24->14;
14[label="14 relational_expression_type(74):0:62"];
13[label="13 shift_expression_type(78):0:62"];
14->13;
13[label="13 shift_expression_type(78):0:62"];
12[label="12 additive_expression_type(4):0:62"];
13->12;
12[label="12 additive_expression_type(4):0:62"];
11[label="11 multiplicative_expression_type(65):0:62"];
12->11;
11[label="11 multiplicative_expression_type(65):0:62"];
10[label="10 cast_expression_type(13):0:62"];
11->10;
10[label="10 cast_expression_type(13):0:62"];
9[label="9 unary_expression_type(96):0:62"];
10->9;
9[label="9 unary_expression_type(96):0:62"];
8[label="8 postfix_expression_type(71):0:62"];
9->8;
8[label="8 postfix_expression_type(71):0:62"];
7[label="7 primary_expression_type(72):0:62"];
8->7;
7[label="7 primary_expression_type(72):0:62"];
6[label="6 not_know_type(0):-1:62:a"];
7->6;
6[label="6 not_know_type(0):-1:62:a"];
23[label="23 shift_expression_type(78):0:62"];
24->23;
23[label="23 shift_expression_type(78):0:62"];
22[label="22 additive_expression_type(4):0:62"];
23->22;
22[label="22 additive_expression_type(4):0:62"];
21[label="21 multiplicative_expression_type(65):0:62"];
22->21;
21[label="21 multiplicative_expression_type(65):0:62"];
20[label="20 cast_expression_type(13):0:62"];
21->20;
20[label="20 cast_expression_type(13):0:62"];
19[label="19 unary_expression_type(96):0:62"];
20->19;
19[label="19 unary_expression_type(96):0:62"];
18[label="18 postfix_expression_type(71):0:62"];
19->18;
18[label="18 postfix_expression_type(71):0:62"];
17[label="17 primary_expression_type(72):1:62"];
18->17;
17[label="17 primary_expression_type(72):1:62"];
16[label="16 constant_type(17):0:62"];
17->16;
16[label="16 constant_type(17):0:62"];
15[label="15 I_CONSTANT_type(48):-1:62:12"];
16->15;
15[label="15 I_CONSTANT_type(48):-1:62:12"];
45[label="45 statement_type(80):1:62"];
58->45;
45[label="45 statement_type(80):1:62"];
44[label="44 compound_statement_type(14):1:44"];
45->44;
44[label="44 compound_statement_type(14):1:44"];
43[label="43 block_item_list_type(11):0:44"];
44->43;
43[label="43 block_item_list_type(11):0:44"];
42[label="42 block_item_type(12):0:44"];
43->42;
42[label="42 block_item_type(12):0:44"];
41[label="41 declaration_type(22):1:44"];
42->41;
41[label="41 declaration_type(22):1:44"];
36[label="36 declaration_specifiers_type(21):3:44"];
41->36;
36[label="36 declaration_specifiers_type(21):3:44"];
34[label="34 type_specifier_type(95):3:44"];
36->34;
34[label="34 type_specifier_type(95):3:44"];
40[label="40 init_declarator_list_type(53):0:44"];
41->40;
40[label="40 init_declarator_list_type(53):0:44"];
39[label="39 init_declarator_type(54):1:44"];
40->39;
39[label="39 init_declarator_type(54):1:44"];
38[label="38 declarator_type(23):1:44"];
39->38;
38[label="38 declarator_type(23):1:44"];
37[label="37 direct_declarator_type(28):0:44"];
38->37;
37[label="37 direct_declarator_type(28):0:44"];
35[label="35 not_know_type(0):-1:44:b"];
37->35;
35[label="35 not_know_type(0):-1:44:b"];
57[label="57 statement_type(80):1:62"];
58->57;
57[label="57 statement_type(80):1:62"];
56[label="56 compound_statement_type(14):1:56"];
57->56;
56[label="56 compound_statement_type(14):1:56"];
55[label="55 block_item_list_type(11):0:56"];
56->55;
55[label="55 block_item_list_type(11):0:56"];
54[label="54 block_item_type(12):0:56"];
55->54;
54[label="54 block_item_type(12):0:56"];
53[label="53 declaration_type(22):1:56"];
54->53;
53[label="53 declaration_type(22):1:56"];
48[label="48 declaration_specifiers_type(21):3:56"];
53->48;
48[label="48 declaration_specifiers_type(21):3:56"];
46[label="46 type_specifier_type(95):3:56"];
48->46;
46[label="46 type_specifier_type(95):3:56"];
52[label="52 init_declarator_list_type(53):0:56"];
53->52;
52[label="52 init_declarator_list_type(53):0:56"];
51[label="51 init_declarator_type(54):1:56"];
52->51;
51[label="51 init_declarator_type(54):1:56"];
50[label="50 declarator_type(23):1:56"];
51->50;
50[label="50 declarator_type(23):1:56"];
49[label="49 direct_declarator_type(28):0:56"];
50->49;
49[label="49 direct_declarator_type(28):0:56"];
47[label="47 not_know_type(0):-1:56:c"];
49->47;
47[label="47 not_know_type(0):-1:56:c"];
}
