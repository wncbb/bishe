digraph G{
47[label="47 translation_unit_type(91):0:0"];
46[label="46 external_declaration_type(39):1:0"];
47->46;
46[label="46 external_declaration_type(39):1:0"];
45[label="45 declaration_type(22):1:0"];
46->45;
45[label="45 declaration_type(22):1:0"];
2[label="2 declaration_specifiers_type(21):3:0"];
45->2;
2[label="2 declaration_specifiers_type(21):3:0"];
0[label="0 type_specifier_type(95):3:0"];
2->0;
0[label="0 type_specifier_type(95):3:0"];
44[label="44 init_declarator_list_type(53):0:0"];
45->44;
44[label="44 init_declarator_list_type(53):0:0"];
43[label="43 init_declarator_type(54):1:0"];
44->43;
43[label="43 init_declarator_type(54):1:0"];
42[label="42 declarator_type(23):1:0"];
43->42;
42[label="42 declarator_type(23):1:0"];
41[label="41 direct_declarator_type(28):10:0"];
42->41;
41[label="41 direct_declarator_type(28):10:0"];
22[label="22 direct_declarator_type(28):10:0"];
41->22;
22[label="22 direct_declarator_type(28):10:0"];
3[label="3 direct_declarator_type(28):0:0"];
22->3;
3[label="3 direct_declarator_type(28):0:0"];
1[label="1 not_know_type(0):-1:0:a"];
3->1;
1[label="1 not_know_type(0):-1:0:a"];
21[label="21 assignment_expression_type(8):0:0"];
22->21;
21[label="21 assignment_expression_type(8):0:0"];
20[label="20 conditional_expression_type(15):0:0"];
21->20;
20[label="20 conditional_expression_type(15):0:0"];
19[label="19 logical_or_expression_type(62):0:0"];
20->19;
19[label="19 logical_or_expression_type(62):0:0"];
18[label="18 logical_and_expression_type(61):0:0"];
19->18;
18[label="18 logical_and_expression_type(61):0:0"];
17[label="17 inclusive_or_expression_type(52):0:0"];
18->17;
17[label="17 inclusive_or_expression_type(52):0:0"];
16[label="16 exclusive_or_expression_type(36):0:0"];
17->16;
16[label="16 exclusive_or_expression_type(36):0:0"];
15[label="15 and_expression_type(6):0:0"];
16->15;
15[label="15 and_expression_type(6):0:0"];
14[label="14 equality_expression_type(35):0:0"];
15->14;
14[label="14 equality_expression_type(35):0:0"];
13[label="13 relational_expression_type(74):0:0"];
14->13;
13[label="13 relational_expression_type(74):0:0"];
12[label="12 shift_expression_type(78):0:0"];
13->12;
12[label="12 shift_expression_type(78):0:0"];
11[label="11 additive_expression_type(4):0:0"];
12->11;
11[label="11 additive_expression_type(4):0:0"];
10[label="10 multiplicative_expression_type(65):0:0"];
11->10;
10[label="10 multiplicative_expression_type(65):0:0"];
9[label="9 cast_expression_type(13):0:0"];
10->9;
9[label="9 cast_expression_type(13):0:0"];
8[label="8 unary_expression_type(96):0:0"];
9->8;
8[label="8 unary_expression_type(96):0:0"];
7[label="7 postfix_expression_type(71):0:0"];
8->7;
7[label="7 postfix_expression_type(71):0:0"];
6[label="6 primary_expression_type(72):1:0"];
7->6;
6[label="6 primary_expression_type(72):1:0"];
5[label="5 constant_type(17):0:0"];
6->5;
5[label="5 constant_type(17):0:0"];
4[label="4 I_CONSTANT_type(48):-1:0:2"];
5->4;
4[label="4 I_CONSTANT_type(48):-1:0:2"];
40[label="40 assignment_expression_type(8):0:0"];
41->40;
40[label="40 assignment_expression_type(8):0:0"];
39[label="39 conditional_expression_type(15):0:0"];
40->39;
39[label="39 conditional_expression_type(15):0:0"];
38[label="38 logical_or_expression_type(62):0:0"];
39->38;
38[label="38 logical_or_expression_type(62):0:0"];
37[label="37 logical_and_expression_type(61):0:0"];
38->37;
37[label="37 logical_and_expression_type(61):0:0"];
36[label="36 inclusive_or_expression_type(52):0:0"];
37->36;
36[label="36 inclusive_or_expression_type(52):0:0"];
35[label="35 exclusive_or_expression_type(36):0:0"];
36->35;
35[label="35 exclusive_or_expression_type(36):0:0"];
34[label="34 and_expression_type(6):0:0"];
35->34;
34[label="34 and_expression_type(6):0:0"];
33[label="33 equality_expression_type(35):0:0"];
34->33;
33[label="33 equality_expression_type(35):0:0"];
32[label="32 relational_expression_type(74):0:0"];
33->32;
32[label="32 relational_expression_type(74):0:0"];
31[label="31 shift_expression_type(78):0:0"];
32->31;
31[label="31 shift_expression_type(78):0:0"];
30[label="30 additive_expression_type(4):0:0"];
31->30;
30[label="30 additive_expression_type(4):0:0"];
29[label="29 multiplicative_expression_type(65):0:0"];
30->29;
29[label="29 multiplicative_expression_type(65):0:0"];
28[label="28 cast_expression_type(13):0:0"];
29->28;
28[label="28 cast_expression_type(13):0:0"];
27[label="27 unary_expression_type(96):0:0"];
28->27;
27[label="27 unary_expression_type(96):0:0"];
26[label="26 postfix_expression_type(71):0:0"];
27->26;
26[label="26 postfix_expression_type(71):0:0"];
25[label="25 primary_expression_type(72):1:0"];
26->25;
25[label="25 primary_expression_type(72):1:0"];
24[label="24 constant_type(17):0:0"];
25->24;
24[label="24 constant_type(17):0:0"];
23[label="23 I_CONSTANT_type(48):-1:0:3"];
24->23;
23[label="23 I_CONSTANT_type(48):-1:0:3"];
}
