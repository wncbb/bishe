before initialize compiler state
81818181: node_table:0x7fbba1b4a010
81818181: symbol_table:0x7fbba1ac9010
lib/compiler_state.c:151 0xa46250
after  initialize compiler state
================compiler_state start===================
c_file_str:10.c
symbol_max_number:65536
symbol_number:0
node_max_number:65536
node_number:0
need_dot_file:0 
need_taint_file:0 
start taint_source_information start:  ===================
stop  taint_source_information strop   ===================
taint_num:0
need_infor:0
symbol_table:0xa46250
node_table:0x7fbba1b4a010
declaration_secifiers_table:0xa46250
================compiler_state end ====================
type_specifier: VOID
!!!main
291:yylineno:1
check_identifier end
declaration_specifiers: type_specifier
direct_declarator: IDENTIFIER
type_specifier: INT
!!!a1
291:yylineno:1
check_identifier end
declaration_specifiers: type_specifier
direct_declarator: IDENTIFIER
declarator: direct_declarator
parameter_declaration: declaration_specifiers declarator
parameter_list: parameter_declaration
type_specifier: INT
!!!a2
291:yylineno:1
check_identifier end
declaration_specifiers: type_specifier
direct_declarator: IDENTIFIER
declarator: direct_declarator
parameter_declaration: declaration_specifiers declarator
parameter_list: parameter_list ',' parameter_declaration
type_specifier: INT
!!!a3
291:yylineno:1
check_identifier end
declaration_specifiers: type_specifier
direct_declarator: IDENTIFIER
declarator: direct_declarator
parameter_declaration: declaration_specifiers declarator
parameter_list: parameter_list ',' parameter_declaration
parameter_type_list: parameter_list
direct_declarator: direct_declarator '(' parameter_type_list ')'
stack: 1 0 
declarator: direct_declarator
type_specifier: INT
!!!a
291:yylineno:3
check_identifier end
declaration_specifiers: type_specifier
direct_declarator: IDENTIFIER
declarator: direct_declarator
!!!12
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
initializer: assignment_expression
init_declarator: declarator '=' initializer
init_declarator_list: init_declarator
declaration: declaration_specifiers init_declarator_list ';'
block_item: declaration
block_item_list: block_item
type_specifier: INT
!!!b
291:yylineno:4
check_identifier end
declaration_specifiers: type_specifier
direct_declarator: IDENTIFIER
declarator: direct_declarator
!!!13
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
initializer: assignment_expression
init_declarator: declarator '=' initializer
init_declarator_list: init_declarator
declaration: declaration_specifiers init_declarator_list ';'
block_item: declaration
block_item_list: block_item_list block_item
type_specifier: INT
!!!c
291:yylineno:5
check_identifier end
declaration_specifiers: type_specifier
direct_declarator: IDENTIFIER
declarator: direct_declarator
init_declarator: declarator
init_declarator_list: init_declarator
declaration: declaration_specifiers init_declarator_list ';'
block_item: declaration
block_item_list: block_item_list block_item
!!!c
291:yylineno:6
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
assignment_operator: '='
!!!a
291:yylineno:6
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
unary_expression: INC_OP unary_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
assignment_expression: unary_expression assignment_operator assignment_expression
expression: assignment_expression
expression_statement: expression ';'
statement: expression_statement
block_item: statement
block_item_list: block_item_list block_item
!!!c
291:yylineno:7
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
!!!12
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: relational_expression '>' shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
expression: assignment_expression
stack: 2 1 0 
!!!printf
291:yylineno:9
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
!!!"a"
string: STRING_LITERAL
primary_expression: string
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
argument_expression_list: assignment_expression
postfix_expression: postfix_expression '(' argument_expression_list')'
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
expression: assignment_expression
expression_statement: expression ';'
statement: expression_statement
block_item: statement
block_item_list: block_item
stack: 1 0 
compound_statement(id:192): '{' block_item_list '}'
statement: compound_statement
iteration_statement: WHILE '(' expression ')' statement
statement: iteration_statement
block_item: statement
block_item_list: block_item_list block_item
stack: 0 
compound_statement(id:197): '{' block_item_list '}'
function_defination: declaration_specifiers declarator compound_statement
deal_type_specifier node_inrule_num 0
haha node_type 28
haha2 inrule_num:11
todd0105:node_index:10 child_num:3
todd0107: node_child_index:9
deal_type_specifier node_inrule_num 3
haha node_type 28
haha2 inrule_num:0
3949
IDENTIFIER: a1 node_type:49 node_inrule_num:-1 node_parent:7 node_parent_inrule_num:0 node_parent_type:28 node_brother_seq:0
0513a
infor_ptr->node_ptr=0xaa4ad0
infor_ptr->node_ptr=0xaa4ad0
infor_ptr->smbl_ptr=0xaa4af0
infor_ptr->smbl_ptr=0xaa4af0
3089
haha49
todd0107: node_child_index:16
deal_type_specifier node_inrule_num 3
haha node_type 28
haha2 inrule_num:0
3949
IDENTIFIER: a2 node_type:49 node_inrule_num:-1 node_parent:14 node_parent_inrule_num:0 node_parent_type:28 node_brother_seq:0
0513a
infor_ptr->node_ptr=0xaa4c00
infor_ptr->node_ptr=0xaa4c00
infor_ptr->smbl_ptr=0xaa4c20
infor_ptr->smbl_ptr=0xaa4c20
3089
haha49
todd0107: node_child_index:22
deal_type_specifier node_inrule_num 3
haha node_type 28
haha2 inrule_num:0
3949
IDENTIFIER: a3 node_type:49 node_inrule_num:-1 node_parent:20 node_parent_inrule_num:0 node_parent_type:28 node_brother_seq:0
0513a
infor_ptr->node_ptr=0xaa4d30
infor_ptr->node_ptr=0xaa4d30
infor_ptr->smbl_ptr=0xaa4d50
infor_ptr->smbl_ptr=0xaa4d50
3089
haha49
haha2 inrule_num:0
3949
IDENTIFIER: main node_type:49 node_inrule_num:-1 node_parent:3 node_parent_inrule_num:0 node_parent_type:28 node_brother_seq:0
0513a
infor_ptr->node_ptr=0xaa4de0
infor_ptr->node_ptr=0xaa4de0
infor_ptr->smbl_ptr=0xaa4e00
infor_ptr->smbl_ptr=0xaa4e00
3089
haha49
2016todd node_inrule_num=1 node_index=24
227a:196
111
333 0
222
0401 : is declaration
0318: 52
deal_type_specifier node_inrule_num 3
right!!!
haha node_type 28
haha2 inrule_num:0
3949
IDENTIFIER: a node_type:49 node_inrule_num:-1 node_parent:29 node_parent_inrule_num:0 node_parent_type:28 node_brother_seq:0
0513a
infor_ptr->node_ptr=0xaa4f90
infor_ptr->node_ptr=0xaa4f90
infor_ptr->smbl_ptr=0xaa4fb0
infor_ptr->smbl_ptr=0xaa4fb0
3089
haha49
node_index:49
888
node_index:49
999
0512xxx:symbol_a_table_num 1
333 1
0401 : is declaration
0318: 52
deal_type_specifier node_inrule_num 3
right!!!
haha node_type 28
haha2 inrule_num:0
3949
IDENTIFIER: b node_type:49 node_inrule_num:-1 node_parent:58 node_parent_inrule_num:0 node_parent_type:28 node_brother_seq:0
0513a
infor_ptr->node_ptr=0xaa5190
infor_ptr->node_ptr=0xaa5190
infor_ptr->smbl_ptr=0xaa51b0
infor_ptr->smbl_ptr=0xaa51b0
3089
haha49
node_index:78
888
node_index:78
999
0512xxx:symbol_a_table_num 2
333 2
0401 : is declaration
0318: 52
deal_type_specifier node_inrule_num 3
right!!!
haha node_type 28
haha2 inrule_num:0
3949
IDENTIFIER: c node_type:49 node_inrule_num:-1 node_parent:86 node_parent_inrule_num:0 node_parent_type:28 node_brother_seq:0
0513a
infor_ptr->node_ptr=0xaa5390
infor_ptr->node_ptr=0xaa5390
infor_ptr->smbl_ptr=0xaa53b0
infor_ptr->smbl_ptr=0xaa53b0
3089
haha49
0512xxx:symbol_a_table_num 3
333 3
0401 : is statement
deal_statement:1055 inrule_num:2 node_index:119
deal_expression_statement 0403
0513bb
3949
IDENTIFIER: c node_type:49 node_inrule_num:-1 node_parent:93 node_parent_inrule_num:0 node_parent_type:72 node_brother_seq:0
0513a
0513xxx
4161: 2
c
0512xxx
infor_ptr->node_ptr=0xaa5580
infor_ptr->node_ptr=0xaa5580
infor_ptr->smbl_ptr=0xaa55a0
infor_ptr->smbl_ptr=0xaa55a0
0513bb
3949
IDENTIFIER: a node_type:49 node_inrule_num:-1 node_parent:99 node_parent_inrule_num:0 node_parent_type:72 node_brother_seq:0
0513a
0513xxx
4161: 0
a
0512xxx
infor_ptr->node_ptr=0xaa5830
infor_ptr->node_ptr=0xaa5830
infor_ptr->smbl_ptr=0xaa5850
infor_ptr->smbl_ptr=0xaa5850

0515x1 1

0515x1 0
0518 expression_node_index:117
333 4
0401 : is statement
deal_statement:1055 inrule_num:4 node_index:194
0513bb
3949
IDENTIFIER: c node_type:49 node_inrule_num:-1 node_parent:122 node_parent_inrule_num:0 node_parent_type:72 node_brother_seq:0
0513a
0513xxx
4161: 2
c
0512xxx
infor_ptr->node_ptr=0xaa5b80
infor_ptr->node_ptr=0xaa5b80
infor_ptr->smbl_ptr=0xaa5ba0
infor_ptr->smbl_ptr=0xaa5ba0

0515x1 2
0518 expression_node_index:148
deal_statement:1055 inrule_num:1 node_index:192
227a:191
111
333 5
222
0401 : is statement
deal_statement:1055 inrule_num:2 node_index:188
deal_expression_statement 0403
0513bb
3949
IDENTIFIER: printf node_type:49 node_inrule_num:-1 node_parent:150 node_parent_inrule_num:0 node_parent_type:72 node_brother_seq:0
0513a
0513xxx
4161: -1
printf
0512xxx
infor_ptr->node_ptr=0xaa5fe0
infor_ptr->node_ptr=0xaa5fe0
infor_ptr->smbl_ptr=0xaa6000
infor_ptr->smbl_ptr=0xaa6000

0515x1 3
0518 expression_node_index:186
343b:0 block_item_num:5
0521r:0 57
701a:0
701a:1
343a:0
0521r:1 56
0521:aaa 0
0521abc:0
0515aa 0

0514a

0514b
0521r:2 55
01519
0521abc:1
0515aa 1

0514a

0514r1  1 0

0514c1 0

0514l1 0

0514a1 0

0514i1 0
1114todd3

0514e1 0

0514n1 0

0514q1 0

0514o1 0

0514t1 0
20150515b:0

0514v1

0514u1
0521r:3 55
01519
0521r:4 22

0514u2

0514u3

0514v2

0514t2

0514o2

0514q2

0514n2

0514e2
1114todd2

0514i2

0514a2

0514l2

0514c2

0514r2

0514c
0521r:5 11

0514c
0521:aaa
alice2: 2
0521c: start_ins_index:end_ins_index  1:5
657a:1
343a:1
0521s:69
0521r:6 69
0521r:7 56
0521:aaa 2
0521abc:2
0515aa 2

0514a

0514r1  2 1

0514c1 1

0514l1 1

0514a1 1

0514i1 1
1114todd3

0514e1 1

0514n1 1

0514q1 1

0514o1 1

0514t1 1
20150515b:1

0514v1

0514u1
0521r:8 55
01519

0514u2

0514u3

0514v2

0514t2

0514o2

0514t1 2
20150515b:2

0514v1

0514u1
here is the constant
01519

0514u2

0514u3

0514v2

0514t2
0521r:9 44

0514q2

0514n2

0514e2
1114todd2

0514i2

0514a2

0514l2

0514c2

0514r2

0514c
0521:aaa
alice2: 3
0521c: start_ins_index:end_ins_index  7:9
343b:1 block_item_num:1
0521r:10 57
701a:10
701a:11
343a:3
0521r:11 56
0521:aaa 3
0521abc:3
0515aa 3

0514a

0514r1  3 2

0514c1 2

0514l1 2

0514a1 2

0514i1 2
1114todd3

0514e1 2

0514n1 2

0514q1 3

0514o1 3

0514t1 3
20150515b:3

0514v1

0514u1

0514u2

0514u3

0514v2

0514t2

0514o2

0514q2

0514n2

0514e2
1114todd2

0514i2

0514a2

0514l2

0514c2

0514r2

0514c
0521:aaa
alice2: -1
0521c: start_ins_index:end_ins_index  11:11
657a:11
657a:6
external_declaration: function_definition
-------------------------translation_unit: external_declaration
----------print_node_table:
node_index node_parent node_child_num node_type_str node_symbol_index node_line_num node_compound_id
id(0):type(type_specifier_type[95]):index(0):parent(2):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(1):type(IDENTIFIER_type[49]):index(1):parent(3):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(main[0]):infor_index(-1):line_num(1):compound_id(0):

id(2):type(declaration_specifiers_type[21]):index(2):parent(197):left_brother(-1):right_brother(25):brother_num(2):brother_seq(0):first_child(0):child_num(1):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(1):compound_id(0):

id(3):type(direct_declarator_type[28]):index(3):parent(24):left_brother(-1):right_brother(23):brother_num(2):brother_seq(0):first_child(1):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(4):type(type_specifier_type[95]):index(4):parent(6):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(1):compound_id(0):

id(5):type(IDENTIFIER_type[49]):index(5):parent(7):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a1[1]):infor_index(-1):line_num(1):compound_id(0):

id(6):type(declaration_specifiers_type[21]):index(6):parent(9):left_brother(-1):right_brother(8):brother_num(2):brother_seq(0):first_child(4):child_num(1):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(1):compound_id(0):

id(7):type(direct_declarator_type[28]):index(7):parent(8):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(5):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(8):type(declarator_type[23]):index(8):parent(9):left_brother(6):right_brother(-1):brother_num(2):brother_seq(1):first_child(7):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(1):compound_id(0):

id(9):type(parameter_declaration_type[67]):index(9):parent(10):left_brother(-1):right_brother(16):brother_num(2):brother_seq(0):first_child(6):child_num(2):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(10):type(parameter_list_type[68]):index(10):parent(23):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(9):child_num(3):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(11):type(type_specifier_type[95]):index(11):parent(13):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(1):compound_id(0):

id(12):type(IDENTIFIER_type[49]):index(12):parent(14):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a2[2]):infor_index(-1):line_num(1):compound_id(0):

id(13):type(declaration_specifiers_type[21]):index(13):parent(16):left_brother(-1):right_brother(15):brother_num(2):brother_seq(0):first_child(11):child_num(1):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(1):compound_id(0):

id(14):type(direct_declarator_type[28]):index(14):parent(15):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(12):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(15):type(declarator_type[23]):index(15):parent(16):left_brother(13):right_brother(-1):brother_num(2):brother_seq(1):first_child(14):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(1):compound_id(0):

id(16):type(parameter_declaration_type[67]):index(16):parent(10):left_brother(9):right_brother(22):brother_num(3):brother_seq(1):first_child(13):child_num(2):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(17):type(type_specifier_type[95]):index(17):parent(19):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(1):compound_id(0):

id(18):type(IDENTIFIER_type[49]):index(18):parent(20):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a3[3]):infor_index(-1):line_num(1):compound_id(0):

id(19):type(declaration_specifiers_type[21]):index(19):parent(22):left_brother(-1):right_brother(21):brother_num(2):brother_seq(0):first_child(17):child_num(1):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(1):compound_id(0):

id(20):type(direct_declarator_type[28]):index(20):parent(21):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(18):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(21):type(declarator_type[23]):index(21):parent(22):left_brother(19):right_brother(-1):brother_num(2):brother_seq(1):first_child(20):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(1):compound_id(0):

id(22):type(parameter_declaration_type[67]):index(22):parent(10):left_brother(16):right_brother(-1):brother_num(3):brother_seq(2):first_child(19):child_num(2):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(23):type(parameter_type_list_type[69]):index(23):parent(24):left_brother(3):right_brother(-1):brother_num(2):brother_seq(1):first_child(10):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(1):compound_id(0):

id(24):type(direct_declarator_type[28]):index(24):parent(25):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(3):child_num(2):inrule_num(11):symbol_index([11]):infor_index(-1):line_num(1):compound_id(0):

id(25):type(declarator_type[23]):index(25):parent(197):left_brother(2):right_brother(196):brother_num(3):brother_seq(1):first_child(24):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(2):compound_id(0):

id(26):type(type_specifier_type[95]):index(26):parent(28):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(3):compound_id(196):

id(27):type(IDENTIFIER_type[49]):index(27):parent(29):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[4]):infor_index(-1):line_num(3):compound_id(196):

id(28):type(declaration_specifiers_type[21]):index(28):parent(52):left_brother(-1):right_brother(51):brother_num(2):brother_seq(0):first_child(26):child_num(1):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(3):compound_id(196):

id(29):type(direct_declarator_type[28]):index(29):parent(30):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(27):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(30):type(declarator_type[23]):index(30):parent(50):left_brother(-1):right_brother(49):brother_num(2):brother_seq(0):first_child(29):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(3):compound_id(196):

id(31):type(I_CONSTANT_type[48]):index(31):parent(32):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(12[5]):infor_index(-1):line_num(3):compound_id(196):

id(32):type(constant_type[17]):index(32):parent(33):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(31):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(33):type(primary_expression_type[72]):index(33):parent(34):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(32):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(3):compound_id(196):

id(34):type(postfix_expression_type[71]):index(34):parent(35):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(33):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(35):type(unary_expression_type[96]):index(35):parent(36):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(34):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(36):type(cast_expression_type[13]):index(36):parent(37):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(35):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(37):type(multiplicative_expression_type[65]):index(37):parent(38):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(36):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(38):type(additive_expression_type[4]):index(38):parent(39):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(37):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(39):type(shift_expression_type[78]):index(39):parent(40):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(38):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(40):type(relational_expression_type[74]):index(40):parent(41):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(39):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(41):type(equality_expression_type[35]):index(41):parent(42):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(40):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(42):type(and_expression_type[6]):index(42):parent(43):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(41):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(43):type(exclusive_or_expression_type[36]):index(43):parent(44):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(42):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(44):type(inclusive_or_expression_type[52]):index(44):parent(45):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(43):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(45):type(logical_and_expression_type[61]):index(45):parent(46):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(44):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(46):type(logical_or_expression_type[62]):index(46):parent(47):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(45):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(47):type(conditional_expression_type[15]):index(47):parent(48):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(46):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(48):type(assignment_expression_type[8]):index(48):parent(49):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(47):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(49):type(initializer_type[56]):index(49):parent(50):left_brother(30):right_brother(-1):brother_num(2):brother_seq(1):first_child(48):child_num(1):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(3):compound_id(196):

id(50):type(init_declarator_type[54]):index(50):parent(51):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(30):child_num(2):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(51):type(init_declarator_list_type[53]):index(51):parent(52):left_brother(28):right_brother(-1):brother_num(2):brother_seq(1):first_child(50):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(52):type(declaration_type[22]):index(52):parent(53):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(28):child_num(2):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(3):compound_id(196):

id(53):type(block_item_type[12]):index(53):parent(54):left_brother(-1):right_brother(82):brother_num(2):brother_seq(0):first_child(52):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(54):type(block_item_list_type[11]):index(54):parent(196):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(53):child_num(5):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(196):

id(55):type(type_specifier_type[95]):index(55):parent(57):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(4):compound_id(196):

id(56):type(IDENTIFIER_type[49]):index(56):parent(58):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(b[6]):infor_index(-1):line_num(4):compound_id(196):

id(57):type(declaration_specifiers_type[21]):index(57):parent(81):left_brother(-1):right_brother(80):brother_num(2):brother_seq(0):first_child(55):child_num(1):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(4):compound_id(196):

id(58):type(direct_declarator_type[28]):index(58):parent(59):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(56):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(59):type(declarator_type[23]):index(59):parent(79):left_brother(-1):right_brother(78):brother_num(2):brother_seq(0):first_child(58):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(4):compound_id(196):

id(60):type(I_CONSTANT_type[48]):index(60):parent(61):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(13[7]):infor_index(-1):line_num(4):compound_id(196):

id(61):type(constant_type[17]):index(61):parent(62):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(60):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(62):type(primary_expression_type[72]):index(62):parent(63):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(61):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(4):compound_id(196):

id(63):type(postfix_expression_type[71]):index(63):parent(64):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(62):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(64):type(unary_expression_type[96]):index(64):parent(65):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(63):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(65):type(cast_expression_type[13]):index(65):parent(66):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(64):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(66):type(multiplicative_expression_type[65]):index(66):parent(67):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(65):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(67):type(additive_expression_type[4]):index(67):parent(68):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(66):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(68):type(shift_expression_type[78]):index(68):parent(69):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(67):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(69):type(relational_expression_type[74]):index(69):parent(70):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(68):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(70):type(equality_expression_type[35]):index(70):parent(71):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(69):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(71):type(and_expression_type[6]):index(71):parent(72):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(70):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(72):type(exclusive_or_expression_type[36]):index(72):parent(73):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(71):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(73):type(inclusive_or_expression_type[52]):index(73):parent(74):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(72):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(74):type(logical_and_expression_type[61]):index(74):parent(75):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(73):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(75):type(logical_or_expression_type[62]):index(75):parent(76):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(74):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(76):type(conditional_expression_type[15]):index(76):parent(77):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(75):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(77):type(assignment_expression_type[8]):index(77):parent(78):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(76):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(78):type(initializer_type[56]):index(78):parent(79):left_brother(59):right_brother(-1):brother_num(2):brother_seq(1):first_child(77):child_num(1):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(4):compound_id(196):

id(79):type(init_declarator_type[54]):index(79):parent(80):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(59):child_num(2):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(80):type(init_declarator_list_type[53]):index(80):parent(81):left_brother(57):right_brother(-1):brother_num(2):brother_seq(1):first_child(79):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(81):type(declaration_type[22]):index(81):parent(82):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(57):child_num(2):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(4):compound_id(196):

id(82):type(block_item_type[12]):index(82):parent(54):left_brother(53):right_brother(91):brother_num(3):brother_seq(1):first_child(81):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(4):compound_id(196):

id(83):type(type_specifier_type[95]):index(83):parent(85):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(5):compound_id(196):

id(84):type(IDENTIFIER_type[49]):index(84):parent(86):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(c[8]):infor_index(-1):line_num(5):compound_id(196):

id(85):type(declaration_specifiers_type[21]):index(85):parent(90):left_brother(-1):right_brother(89):brother_num(2):brother_seq(0):first_child(83):child_num(1):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(5):compound_id(196):

id(86):type(direct_declarator_type[28]):index(86):parent(87):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(84):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(196):

id(87):type(declarator_type[23]):index(87):parent(88):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(86):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(5):compound_id(196):

id(88):type(init_declarator_type[54]):index(88):parent(89):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(87):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(5):compound_id(196):

id(89):type(init_declarator_list_type[53]):index(89):parent(90):left_brother(85):right_brother(-1):brother_num(2):brother_seq(1):first_child(88):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(196):

id(90):type(declaration_type[22]):index(90):parent(91):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(85):child_num(2):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(5):compound_id(196):

id(91):type(block_item_type[12]):index(91):parent(54):left_brother(82):right_brother(120):brother_num(4):brother_seq(2):first_child(90):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(196):

id(92):type(IDENTIFIER_type[49]):index(92):parent(93):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(c[9]):infor_index(-1):line_num(6):compound_id(196):

id(93):type(primary_expression_type[72]):index(93):parent(94):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(92):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(94):type(postfix_expression_type[71]):index(94):parent(95):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(93):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(95):type(unary_expression_type[96]):index(95):parent(116):left_brother(-1):right_brother(97):brother_num(2):brother_seq(0):first_child(94):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(96):type(EQU_ASSIGN_type[30]):index(96):parent(97):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index([-1]):infor_index(-1):line_num(6):compound_id(196):

id(97):type(assignment_operator_type[9]):index(97):parent(116):left_brother(95):right_brother(115):brother_num(3):brother_seq(1):first_child(96):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(98):type(IDENTIFIER_type[49]):index(98):parent(99):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[10]):infor_index(-1):line_num(6):compound_id(196):

id(99):type(primary_expression_type[72]):index(99):parent(100):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(98):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(100):type(postfix_expression_type[71]):index(100):parent(101):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(99):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(101):type(unary_expression_type[96]):index(101):parent(102):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(100):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(102):type(unary_expression_type[96]):index(102):parent(103):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(101):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(6):compound_id(196):

id(103):type(cast_expression_type[13]):index(103):parent(104):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(102):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(104):type(multiplicative_expression_type[65]):index(104):parent(105):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(103):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(105):type(additive_expression_type[4]):index(105):parent(106):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(104):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(106):type(shift_expression_type[78]):index(106):parent(107):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(105):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(107):type(relational_expression_type[74]):index(107):parent(108):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(106):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(108):type(equality_expression_type[35]):index(108):parent(109):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(107):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(109):type(and_expression_type[6]):index(109):parent(110):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(108):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(110):type(exclusive_or_expression_type[36]):index(110):parent(111):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(109):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(111):type(inclusive_or_expression_type[52]):index(111):parent(112):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(110):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(112):type(logical_and_expression_type[61]):index(112):parent(113):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(111):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(113):type(logical_or_expression_type[62]):index(113):parent(114):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(112):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(114):type(conditional_expression_type[15]):index(114):parent(115):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(113):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(115):type(assignment_expression_type[8]):index(115):parent(116):left_brother(97):right_brother(-1):brother_num(3):brother_seq(2):first_child(114):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(116):type(assignment_expression_type[8]):index(116):parent(117):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(95):child_num(3):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(6):compound_id(196):

id(117):type(expression_type[38]):index(117):parent(118):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(116):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(6):compound_id(196):

id(118):type(expression_statement_type[37]):index(118):parent(119):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(117):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(6):compound_id(196):

id(119):type(statement_type[80]):index(119):parent(120):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(118):child_num(1):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(6):compound_id(196):

id(120):type(block_item_type[12]):index(120):parent(54):left_brother(91):right_brother(195):brother_num(5):brother_seq(3):first_child(119):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(6):compound_id(196):

id(121):type(IDENTIFIER_type[49]):index(121):parent(122):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(c[11]):infor_index(-1):line_num(7):compound_id(196):

id(122):type(primary_expression_type[72]):index(122):parent(123):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(121):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(123):type(postfix_expression_type[71]):index(123):parent(124):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(122):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(124):type(unary_expression_type[96]):index(124):parent(125):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(123):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(125):type(cast_expression_type[13]):index(125):parent(126):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(124):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(126):type(multiplicative_expression_type[65]):index(126):parent(127):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(125):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(127):type(additive_expression_type[4]):index(127):parent(128):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(126):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(128):type(shift_expression_type[78]):index(128):parent(129):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(127):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(129):type(relational_expression_type[74]):index(129):parent(139):left_brother(-1):right_brother(138):brother_num(2):brother_seq(0):first_child(128):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(130):type(I_CONSTANT_type[48]):index(130):parent(131):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(12[12]):infor_index(-1):line_num(7):compound_id(196):

id(131):type(constant_type[17]):index(131):parent(132):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(130):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(132):type(primary_expression_type[72]):index(132):parent(133):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(131):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(7):compound_id(196):

id(133):type(postfix_expression_type[71]):index(133):parent(134):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(132):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(134):type(unary_expression_type[96]):index(134):parent(135):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(133):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(135):type(cast_expression_type[13]):index(135):parent(136):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(134):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(136):type(multiplicative_expression_type[65]):index(136):parent(137):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(135):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(137):type(additive_expression_type[4]):index(137):parent(138):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(136):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(138):type(shift_expression_type[78]):index(138):parent(139):left_brother(129):right_brother(-1):brother_num(2):brother_seq(1):first_child(137):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(139):type(relational_expression_type[74]):index(139):parent(140):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(129):child_num(2):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(7):compound_id(196):

id(140):type(equality_expression_type[35]):index(140):parent(141):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(139):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(141):type(and_expression_type[6]):index(141):parent(142):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(140):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(142):type(exclusive_or_expression_type[36]):index(142):parent(143):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(141):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(143):type(inclusive_or_expression_type[52]):index(143):parent(144):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(142):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(144):type(logical_and_expression_type[61]):index(144):parent(145):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(143):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(145):type(logical_or_expression_type[62]):index(145):parent(146):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(144):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(146):type(conditional_expression_type[15]):index(146):parent(147):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(145):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(147):type(assignment_expression_type[8]):index(147):parent(148):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(146):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(148):type(expression_type[38]):index(148):parent(193):left_brother(-1):right_brother(192):brother_num(2):brother_seq(0):first_child(147):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(196):

id(149):type(IDENTIFIER_type[49]):index(149):parent(150):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(printf[13]):infor_index(-1):line_num(9):compound_id(191):

id(150):type(primary_expression_type[72]):index(150):parent(151):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(149):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(151):type(postfix_expression_type[71]):index(151):parent(171):left_brother(-1):right_brother(170):brother_num(2):brother_seq(0):first_child(150):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(152):type(STRING_LITERAL_type[75]):index(152):parent(153):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index("a"[14]):infor_index(-1):line_num(9):compound_id(191):

id(153):type(string_type[83]):index(153):parent(154):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(152):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(154):type(primary_expression_type[72]):index(154):parent(155):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(153):child_num(1):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(9):compound_id(191):

id(155):type(postfix_expression_type[71]):index(155):parent(156):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(154):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(156):type(unary_expression_type[96]):index(156):parent(157):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(155):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(157):type(cast_expression_type[13]):index(157):parent(158):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(156):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(158):type(multiplicative_expression_type[65]):index(158):parent(159):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(157):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(159):type(additive_expression_type[4]):index(159):parent(160):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(158):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(160):type(shift_expression_type[78]):index(160):parent(161):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(159):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(161):type(relational_expression_type[74]):index(161):parent(162):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(160):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(162):type(equality_expression_type[35]):index(162):parent(163):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(161):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(163):type(and_expression_type[6]):index(163):parent(164):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(162):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(164):type(exclusive_or_expression_type[36]):index(164):parent(165):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(163):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(165):type(inclusive_or_expression_type[52]):index(165):parent(166):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(164):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(166):type(logical_and_expression_type[61]):index(166):parent(167):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(165):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(167):type(logical_or_expression_type[62]):index(167):parent(168):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(166):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(168):type(conditional_expression_type[15]):index(168):parent(169):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(167):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(169):type(assignment_expression_type[8]):index(169):parent(170):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(168):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(170):type(argument_expression_list_type[7]):index(170):parent(171):left_brother(151):right_brother(-1):brother_num(2):brother_seq(1):first_child(169):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(171):type(postfix_expression_type[71]):index(171):parent(172):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(151):child_num(2):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(9):compound_id(191):

id(172):type(unary_expression_type[96]):index(172):parent(173):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(171):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(173):type(cast_expression_type[13]):index(173):parent(174):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(172):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(174):type(multiplicative_expression_type[65]):index(174):parent(175):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(173):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(175):type(additive_expression_type[4]):index(175):parent(176):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(174):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(176):type(shift_expression_type[78]):index(176):parent(177):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(175):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(177):type(relational_expression_type[74]):index(177):parent(178):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(176):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(178):type(equality_expression_type[35]):index(178):parent(179):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(177):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(179):type(and_expression_type[6]):index(179):parent(180):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(178):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(180):type(exclusive_or_expression_type[36]):index(180):parent(181):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(179):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(181):type(inclusive_or_expression_type[52]):index(181):parent(182):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(180):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(182):type(logical_and_expression_type[61]):index(182):parent(183):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(181):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(183):type(logical_or_expression_type[62]):index(183):parent(184):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(182):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(184):type(conditional_expression_type[15]):index(184):parent(185):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(183):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(185):type(assignment_expression_type[8]):index(185):parent(186):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(184):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(186):type(expression_type[38]):index(186):parent(187):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(185):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(187):type(expression_statement_type[37]):index(187):parent(188):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(186):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(9):compound_id(191):

id(188):type(statement_type[80]):index(188):parent(189):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(187):child_num(1):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(9):compound_id(191):

id(189):type(block_item_type[12]):index(189):parent(190):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(188):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(9):compound_id(191):

id(190):type(block_item_list_type[11]):index(190):parent(191):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(189):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(191):

id(191):type(compound_statement_type[14]):index(191):parent(192):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(190):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(10):compound_id(191):

id(192):type(statement_type[80]):index(192):parent(193):left_brother(148):right_brother(-1):brother_num(2):brother_seq(1):first_child(191):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(10):compound_id(196):

id(193):type(iteration_statement_type[57]):index(193):parent(194):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(148):child_num(2):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(10):compound_id(196):

id(194):type(statement_type[80]):index(194):parent(195):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(193):child_num(1):inrule_num(4):symbol_index([4]):infor_index(-1):line_num(10):compound_id(196):

id(195):type(block_item_type[12]):index(195):parent(54):left_brother(120):right_brother(-1):brother_num(5):brother_seq(4):first_child(194):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(10):compound_id(196):

id(196):type(compound_statement_type[14]):index(196):parent(197):left_brother(25):right_brother(-1):brother_num(3):brother_seq(2):first_child(54):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(11):compound_id(196):

id(197):type(function_definition_type[42]):index(197):parent(198):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(2):child_num(3):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(11):compound_id(0):

id(198):type(external_declaration_type[39]):index(198):parent(199):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(197):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(11):compound_id(0):

id(199):type(translation_unit_type[91]):index(199):parent(-1):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(198):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(11):compound_id(0):

----------print_node_table!
+translation_unit_type node_id:199 child_number:1 inrule_num:0 line_num:11
 +external_declaration_type node_id:198 child_number:1 inrule_num:0 line_num:11
  +function_definition_type node_id:197 child_number:3 inrule_num:1 line_num:11
   +declaration_specifiers_type node_id:2 child_number:1 inrule_num:3 line_num:1
    +type_specifier_type node_id:0 child_number:0 inrule_num:0 line_num:1
   +declarator_type node_id:25 child_number:1 inrule_num:1 line_num:2
    +direct_declarator_type node_id:24 child_number:2 inrule_num:11 line_num:1
     +direct_declarator_type node_id:3 child_number:1 inrule_num:0 line_num:1
      +IDENTIFIER_type node_id:1 child_number:0 inrule_num:-1 line_num:1
     +parameter_type_list_type node_id:23 child_number:1 inrule_num:1 line_num:1
      +parameter_list_type node_id:10 child_number:3 inrule_num:0 line_num:1
       +parameter_declaration_type node_id:9 child_number:2 inrule_num:0 line_num:1
        +declaration_specifiers_type node_id:6 child_number:1 inrule_num:3 line_num:1
         +type_specifier_type node_id:4 child_number:0 inrule_num:3 line_num:1
        +declarator_type node_id:8 child_number:1 inrule_num:1 line_num:1
         +direct_declarator_type node_id:7 child_number:1 inrule_num:0 line_num:1
          +IDENTIFIER_type node_id:5 child_number:0 inrule_num:-1 line_num:1
       +parameter_declaration_type node_id:16 child_number:2 inrule_num:0 line_num:1
        +declaration_specifiers_type node_id:13 child_number:1 inrule_num:3 line_num:1
         +type_specifier_type node_id:11 child_number:0 inrule_num:3 line_num:1
        +declarator_type node_id:15 child_number:1 inrule_num:1 line_num:1
         +direct_declarator_type node_id:14 child_number:1 inrule_num:0 line_num:1
          +IDENTIFIER_type node_id:12 child_number:0 inrule_num:-1 line_num:1
       +parameter_declaration_type node_id:22 child_number:2 inrule_num:0 line_num:1
        +declaration_specifiers_type node_id:19 child_number:1 inrule_num:3 line_num:1
         +type_specifier_type node_id:17 child_number:0 inrule_num:3 line_num:1
        +declarator_type node_id:21 child_number:1 inrule_num:1 line_num:1
         +direct_declarator_type node_id:20 child_number:1 inrule_num:0 line_num:1
          +IDENTIFIER_type node_id:18 child_number:0 inrule_num:-1 line_num:1
   +compound_statement_type node_id:196 child_number:1 inrule_num:1 line_num:11
    +block_item_list_type node_id:54 child_number:5 inrule_num:0 line_num:3
     +block_item_type node_id:53 child_number:1 inrule_num:0 line_num:3
      +declaration_type node_id:52 child_number:2 inrule_num:1 line_num:3
       +declaration_specifiers_type node_id:28 child_number:1 inrule_num:3 line_num:3
        +type_specifier_type node_id:26 child_number:0 inrule_num:3 line_num:3
       +init_declarator_list_type node_id:51 child_number:1 inrule_num:0 line_num:3
        +init_declarator_type node_id:50 child_number:2 inrule_num:0 line_num:3
         +declarator_type node_id:30 child_number:1 inrule_num:1 line_num:3
          +direct_declarator_type node_id:29 child_number:1 inrule_num:0 line_num:3
           +IDENTIFIER_type node_id:27 child_number:0 inrule_num:-1 line_num:3
         +initializer_type node_id:49 child_number:1 inrule_num:2 line_num:3
          +assignment_expression_type node_id:48 child_number:1 inrule_num:0 line_num:3
           +conditional_expression_type node_id:47 child_number:1 inrule_num:0 line_num:3
            +logical_or_expression_type node_id:46 child_number:1 inrule_num:0 line_num:3
             +logical_and_expression_type node_id:45 child_number:1 inrule_num:0 line_num:3
              +inclusive_or_expression_type node_id:44 child_number:1 inrule_num:0 line_num:3
               +exclusive_or_expression_type node_id:43 child_number:1 inrule_num:0 line_num:3
                +and_expression_type node_id:42 child_number:1 inrule_num:0 line_num:3
                 +equality_expression_type node_id:41 child_number:1 inrule_num:0 line_num:3
                  +relational_expression_type node_id:40 child_number:1 inrule_num:0 line_num:3
                   +shift_expression_type node_id:39 child_number:1 inrule_num:0 line_num:3
                    +additive_expression_type node_id:38 child_number:1 inrule_num:0 line_num:3
                     +multiplicative_expression_type node_id:37 child_number:1 inrule_num:0 line_num:3
                      +cast_expression_type node_id:36 child_number:1 inrule_num:0 line_num:3
                       +unary_expression_type node_id:35 child_number:1 inrule_num:0 line_num:3
                        +postfix_expression_type node_id:34 child_number:1 inrule_num:0 line_num:3
                         +primary_expression_type node_id:33 child_number:1 inrule_num:1 line_num:3
                          +constant_type node_id:32 child_number:1 inrule_num:0 line_num:3
                           +I_CONSTANT_type node_id:31 child_number:0 inrule_num:-1 line_num:3
     +block_item_type node_id:82 child_number:1 inrule_num:0 line_num:4
      +declaration_type node_id:81 child_number:2 inrule_num:1 line_num:4
       +declaration_specifiers_type node_id:57 child_number:1 inrule_num:3 line_num:4
        +type_specifier_type node_id:55 child_number:0 inrule_num:3 line_num:4
       +init_declarator_list_type node_id:80 child_number:1 inrule_num:0 line_num:4
        +init_declarator_type node_id:79 child_number:2 inrule_num:0 line_num:4
         +declarator_type node_id:59 child_number:1 inrule_num:1 line_num:4
          +direct_declarator_type node_id:58 child_number:1 inrule_num:0 line_num:4
           +IDENTIFIER_type node_id:56 child_number:0 inrule_num:-1 line_num:4
         +initializer_type node_id:78 child_number:1 inrule_num:2 line_num:4
          +assignment_expression_type node_id:77 child_number:1 inrule_num:0 line_num:4
           +conditional_expression_type node_id:76 child_number:1 inrule_num:0 line_num:4
            +logical_or_expression_type node_id:75 child_number:1 inrule_num:0 line_num:4
             +logical_and_expression_type node_id:74 child_number:1 inrule_num:0 line_num:4
              +inclusive_or_expression_type node_id:73 child_number:1 inrule_num:0 line_num:4
               +exclusive_or_expression_type node_id:72 child_number:1 inrule_num:0 line_num:4
                +and_expression_type node_id:71 child_number:1 inrule_num:0 line_num:4
                 +equality_expression_type node_id:70 child_number:1 inrule_num:0 line_num:4
                  +relational_expression_type node_id:69 child_number:1 inrule_num:0 line_num:4
                   +shift_expression_type node_id:68 child_number:1 inrule_num:0 line_num:4
                    +additive_expression_type node_id:67 child_number:1 inrule_num:0 line_num:4
                     +multiplicative_expression_type node_id:66 child_number:1 inrule_num:0 line_num:4
                      +cast_expression_type node_id:65 child_number:1 inrule_num:0 line_num:4
                       +unary_expression_type node_id:64 child_number:1 inrule_num:0 line_num:4
                        +postfix_expression_type node_id:63 child_number:1 inrule_num:0 line_num:4
                         +primary_expression_type node_id:62 child_number:1 inrule_num:1 line_num:4
                          +constant_type node_id:61 child_number:1 inrule_num:0 line_num:4
                           +I_CONSTANT_type node_id:60 child_number:0 inrule_num:-1 line_num:4
     +block_item_type node_id:91 child_number:1 inrule_num:0 line_num:5
      +declaration_type node_id:90 child_number:2 inrule_num:1 line_num:5
       +declaration_specifiers_type node_id:85 child_number:1 inrule_num:3 line_num:5
        +type_specifier_type node_id:83 child_number:0 inrule_num:3 line_num:5
       +init_declarator_list_type node_id:89 child_number:1 inrule_num:0 line_num:5
        +init_declarator_type node_id:88 child_number:1 inrule_num:1 line_num:5
         +declarator_type node_id:87 child_number:1 inrule_num:1 line_num:5
          +direct_declarator_type node_id:86 child_number:1 inrule_num:0 line_num:5
           +IDENTIFIER_type node_id:84 child_number:0 inrule_num:-1 line_num:5
     +block_item_type node_id:120 child_number:1 inrule_num:1 line_num:6
      +statement_type node_id:119 child_number:1 inrule_num:2 line_num:6
       +expression_statement_type node_id:118 child_number:1 inrule_num:1 line_num:6
        +expression_type node_id:117 child_number:1 inrule_num:0 line_num:6
         +assignment_expression_type node_id:116 child_number:3 inrule_num:1 line_num:6
          +unary_expression_type node_id:95 child_number:1 inrule_num:0 line_num:6
           +postfix_expression_type node_id:94 child_number:1 inrule_num:0 line_num:6
            +primary_expression_type node_id:93 child_number:1 inrule_num:0 line_num:6
             +IDENTIFIER_type node_id:92 child_number:0 inrule_num:-1 line_num:6
          +assignment_operator_type node_id:97 child_number:1 inrule_num:0 line_num:6
           +EQU_ASSIGN_type node_id:96 child_number:0 inrule_num:-1 line_num:6
          +assignment_expression_type node_id:115 child_number:1 inrule_num:0 line_num:6
           +conditional_expression_type node_id:114 child_number:1 inrule_num:0 line_num:6
            +logical_or_expression_type node_id:113 child_number:1 inrule_num:0 line_num:6
             +logical_and_expression_type node_id:112 child_number:1 inrule_num:0 line_num:6
              +inclusive_or_expression_type node_id:111 child_number:1 inrule_num:0 line_num:6
               +exclusive_or_expression_type node_id:110 child_number:1 inrule_num:0 line_num:6
                +and_expression_type node_id:109 child_number:1 inrule_num:0 line_num:6
                 +equality_expression_type node_id:108 child_number:1 inrule_num:0 line_num:6
                  +relational_expression_type node_id:107 child_number:1 inrule_num:0 line_num:6
                   +shift_expression_type node_id:106 child_number:1 inrule_num:0 line_num:6
                    +additive_expression_type node_id:105 child_number:1 inrule_num:0 line_num:6
                     +multiplicative_expression_type node_id:104 child_number:1 inrule_num:0 line_num:6
                      +cast_expression_type node_id:103 child_number:1 inrule_num:0 line_num:6
                       +unary_expression_type node_id:102 child_number:1 inrule_num:1 line_num:6
                        +unary_expression_type node_id:101 child_number:1 inrule_num:0 line_num:6
                         +postfix_expression_type node_id:100 child_number:1 inrule_num:0 line_num:6
                          +primary_expression_type node_id:99 child_number:1 inrule_num:0 line_num:6
                           +IDENTIFIER_type node_id:98 child_number:0 inrule_num:-1 line_num:6
     +block_item_type node_id:195 child_number:1 inrule_num:1 line_num:10
      +statement_type node_id:194 child_number:1 inrule_num:4 line_num:10
       +iteration_statement_type node_id:193 child_number:2 inrule_num:0 line_num:10
        +expression_type node_id:148 child_number:1 inrule_num:0 line_num:7
         +assignment_expression_type node_id:147 child_number:1 inrule_num:0 line_num:7
          +conditional_expression_type node_id:146 child_number:1 inrule_num:0 line_num:7
           +logical_or_expression_type node_id:145 child_number:1 inrule_num:0 line_num:7
            +logical_and_expression_type node_id:144 child_number:1 inrule_num:0 line_num:7
             +inclusive_or_expression_type node_id:143 child_number:1 inrule_num:0 line_num:7
              +exclusive_or_expression_type node_id:142 child_number:1 inrule_num:0 line_num:7
               +and_expression_type node_id:141 child_number:1 inrule_num:0 line_num:7
                +equality_expression_type node_id:140 child_number:1 inrule_num:0 line_num:7
                 +relational_expression_type node_id:139 child_number:2 inrule_num:2 line_num:7
                  +relational_expression_type node_id:129 child_number:1 inrule_num:0 line_num:7
                   +shift_expression_type node_id:128 child_number:1 inrule_num:0 line_num:7
                    +additive_expression_type node_id:127 child_number:1 inrule_num:0 line_num:7
                     +multiplicative_expression_type node_id:126 child_number:1 inrule_num:0 line_num:7
                      +cast_expression_type node_id:125 child_number:1 inrule_num:0 line_num:7
                       +unary_expression_type node_id:124 child_number:1 inrule_num:0 line_num:7
                        +postfix_expression_type node_id:123 child_number:1 inrule_num:0 line_num:7
                         +primary_expression_type node_id:122 child_number:1 inrule_num:0 line_num:7
                          +IDENTIFIER_type node_id:121 child_number:0 inrule_num:-1 line_num:7
                  +shift_expression_type node_id:138 child_number:1 inrule_num:0 line_num:7
                   +additive_expression_type node_id:137 child_number:1 inrule_num:0 line_num:7
                    +multiplicative_expression_type node_id:136 child_number:1 inrule_num:0 line_num:7
                     +cast_expression_type node_id:135 child_number:1 inrule_num:0 line_num:7
                      +unary_expression_type node_id:134 child_number:1 inrule_num:0 line_num:7
                       +postfix_expression_type node_id:133 child_number:1 inrule_num:0 line_num:7
                        +primary_expression_type node_id:132 child_number:1 inrule_num:1 line_num:7
                         +constant_type node_id:131 child_number:1 inrule_num:0 line_num:7
                          +I_CONSTANT_type node_id:130 child_number:0 inrule_num:-1 line_num:7
        +statement_type node_id:192 child_number:1 inrule_num:1 line_num:10
         +compound_statement_type node_id:191 child_number:1 inrule_num:1 line_num:10
          +block_item_list_type node_id:190 child_number:1 inrule_num:0 line_num:9
           +block_item_type node_id:189 child_number:1 inrule_num:1 line_num:9
            +statement_type node_id:188 child_number:1 inrule_num:2 line_num:9
             +expression_statement_type node_id:187 child_number:1 inrule_num:1 line_num:9
              +expression_type node_id:186 child_number:1 inrule_num:0 line_num:9
               +assignment_expression_type node_id:185 child_number:1 inrule_num:0 line_num:9
                +conditional_expression_type node_id:184 child_number:1 inrule_num:0 line_num:9
                 +logical_or_expression_type node_id:183 child_number:1 inrule_num:0 line_num:9
                  +logical_and_expression_type node_id:182 child_number:1 inrule_num:0 line_num:9
                   +inclusive_or_expression_type node_id:181 child_number:1 inrule_num:0 line_num:9
                    +exclusive_or_expression_type node_id:180 child_number:1 inrule_num:0 line_num:9
                     +and_expression_type node_id:179 child_number:1 inrule_num:0 line_num:9
                      +equality_expression_type node_id:178 child_number:1 inrule_num:0 line_num:9
                       +relational_expression_type node_id:177 child_number:1 inrule_num:0 line_num:9
                        +shift_expression_type node_id:176 child_number:1 inrule_num:0 line_num:9
                         +additive_expression_type node_id:175 child_number:1 inrule_num:0 line_num:9
                          +multiplicative_expression_type node_id:174 child_number:1 inrule_num:0 line_num:9
                           +cast_expression_type node_id:173 child_number:1 inrule_num:0 line_num:9
                            +unary_expression_type node_id:172 child_number:1 inrule_num:0 line_num:9
                             +postfix_expression_type node_id:171 child_number:2 inrule_num:3 line_num:9
                              +postfix_expression_type node_id:151 child_number:1 inrule_num:0 line_num:9
                               +primary_expression_type node_id:150 child_number:1 inrule_num:0 line_num:9
                                +IDENTIFIER_type node_id:149 child_number:0 inrule_num:-1 line_num:9
                              +argument_expression_list_type node_id:170 child_number:1 inrule_num:0 line_num:9
                               +assignment_expression_type node_id:169 child_number:1 inrule_num:0 line_num:9
                                +conditional_expression_type node_id:168 child_number:1 inrule_num:0 line_num:9
                                 +logical_or_expression_type node_id:167 child_number:1 inrule_num:0 line_num:9
                                  +logical_and_expression_type node_id:166 child_number:1 inrule_num:0 line_num:9
                                   +inclusive_or_expression_type node_id:165 child_number:1 inrule_num:0 line_num:9
                                    +exclusive_or_expression_type node_id:164 child_number:1 inrule_num:0 line_num:9
                                     +and_expression_type node_id:163 child_number:1 inrule_num:0 line_num:9
                                      +equality_expression_type node_id:162 child_number:1 inrule_num:0 line_num:9
                                       +relational_expression_type node_id:161 child_number:1 inrule_num:0 line_num:9
                                        +shift_expression_type node_id:160 child_number:1 inrule_num:0 line_num:9
                                         +additive_expression_type node_id:159 child_number:1 inrule_num:0 line_num:9
                                          +multiplicative_expression_type node_id:158 child_number:1 inrule_num:0 line_num:9
                                           +cast_expression_type node_id:157 child_number:1 inrule_num:0 line_num:9
                                            +unary_expression_type node_id:156 child_number:1 inrule_num:0 line_num:9
                                             +postfix_expression_type node_id:155 child_number:1 inrule_num:0 line_num:9
                                              +primary_expression_type node_id:154 child_number:1 inrule_num:2 line_num:9
                                               +string_type node_id:153 child_number:1 inrule_num:0 line_num:9
                                                +STRING_LITERAL_type node_id:152 child_number:0 inrule_num:-1 line_num:9
---------------------symbol_table:
id(0):name(main):name_len(4):type(not_know_type[0]):file((null)):file_len(0):line_num:(1):in_which_node(1):
id(1):name(a1):name_len(2):type(not_know_type[0]):file((null)):file_len(0):line_num:(1):in_which_node(5):
id(2):name(a2):name_len(2):type(not_know_type[0]):file((null)):file_len(0):line_num:(1):in_which_node(12):
id(3):name(a3):name_len(2):type(not_know_type[0]):file((null)):file_len(0):line_num:(1):in_which_node(18):
id(4):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(3):in_which_node(27):
id(5):name(12):name_len(2):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(3):in_which_node(31):
id(6):name(b):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(4):in_which_node(56):
id(7):name(13):name_len(2):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(4):in_which_node(60):
id(8):name(c):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(5):in_which_node(84):
id(9):name(c):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(6):in_which_node(92):
id(10):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(6):in_which_node(98):
id(11):name(c):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(7):in_which_node(121):
id(12):name(12):name_len(2):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(7):in_which_node(130):
id(13):name(printf):name_len(6):type(not_know_type[0]):file((null)):file_len(0):line_num:(9):in_which_node(149):
id(14):name("a"):name_len(3):type(STRING_LITERAL_type[75]):file((null)):file_len(0):line_num:(9):in_which_node(152):
---------------------symbol_table!
1 has father 0
2 has father 1
stack: 0 


============================================
= print declaration_specifiers_table       =
============================================
declaration_specifiers_table[0] start
index:0
storage_class_specifier none(0x00000000)
type_specifier(0x00000001): signed default void index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[0] end
--------------------------------------------
declaration_specifiers_table[1] start
index:1
storage_class_specifier none(0x00000000)
type_specifier(0x00000003): signed default int index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[1] end
--------------------------------------------
declaration_specifiers_table[2] start
index:2
storage_class_specifier none(0x00000000)
type_specifier(0x00000003): signed default int index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[2] end
--------------------------------------------
declaration_specifiers_table[3] start
index:3
storage_class_specifier none(0x00000000)
type_specifier(0x00000003): signed default int index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[3] end
--------------------------------------------
declaration_specifiers_table[4] start
index:4
storage_class_specifier none(0x00000000)
type_specifier(0x00000003): signed default int index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[4] end
--------------------------------------------
declaration_specifiers_table[5] start
index:5
storage_class_specifier none(0x00000000)
type_specifier(0x00000003): signed default int index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[5] end
--------------------------------------------
declaration_specifiers_table[6] start
index:6
storage_class_specifier none(0x00000000)
type_specifier(0x00000003): signed default int index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[6] end
--------------------------------------------






============================================
= declarator_table                         =
============================================
declarator_table_num:7
--------------------------------------------
index:0 node_index:25 pointer_index:-1 direct_declarator_index:0
--------------------------------------------
index:1 node_index:8 pointer_index:-1 direct_declarator_index:1
--------------------------------------------
index:2 node_index:15 pointer_index:-1 direct_declarator_index:2
--------------------------------------------
index:3 node_index:21 pointer_index:-1 direct_declarator_index:3
--------------------------------------------
index:4 node_index:30 pointer_index:-1 direct_declarator_index:4
--------------------------------------------
index:5 node_index:59 pointer_index:-1 direct_declarator_index:5
--------------------------------------------
index:6 node_index:87 pointer_index:-1 direct_declarator_index:6
--------------------------------------------
--------------------------------------------



============================================
= print direct_declarator_table            =
============================================
index:0
is_IDENTIFIER:0
node_index:-1
number:1
0. category:11 index1:-1 index2:0
--------------------------------------------
index:1
is_IDENTIFIER:0
node_index:-1
number:1
0. category:0 index1:0 index2:0
--------------------------------------------
index:2
is_IDENTIFIER:0
node_index:-1
number:1
0. category:0 index1:1 index2:0
--------------------------------------------
index:3
is_IDENTIFIER:0
node_index:-1
number:2
0. category:0 index1:2 index2:0
1. category:0 index1:3 index2:0
--------------------------------------------
index:4
is_IDENTIFIER:0
node_index:-1
number:1
0. category:0 index1:4 index2:0
--------------------------------------------
index:5
is_IDENTIFIER:0
node_index:-1
number:1
0. category:0 index1:5 index2:0
--------------------------------------------
index:6
is_IDENTIFIER:0
node_index:-1
number:1
0. category:0 index1:6 index2:0
--------------------------------------------






============================================
= print compound_statement_table           =
============================================
index:0 node_index:196 block_item_num:5
is_statement:0 node_index:53 index:0
is_statement:0 node_index:82 index:1
is_statement:0 node_index:91 index:2
is_statement:1 node_index:120 index:3
is_statement:1 node_index:195 index:4
--------------------------------------------
index:1 node_index:191 block_item_num:1
is_statement:1 node_index:189 index:5
--------------------------------------------






============================================
= block_item_table                         =
============================================
initializer_block_item_table_num:6
--------------------------------------------
index:0 node_index:53 is_statement:0 data_index:0 child_index:52 block_item_next_index:1
--------------------------------------------
index:1 node_index:82 is_statement:0 data_index:1 child_index:81 block_item_next_index:2
--------------------------------------------
index:2 node_index:91 is_statement:0 data_index:2 child_index:90 block_item_next_index:3
--------------------------------------------
index:3 node_index:120 is_statement:1 data_index:0 child_index:119 block_item_next_index:4
--------------------------------------------
index:4 node_index:195 is_statement:1 data_index:1 child_index:194 block_item_next_index:-1
--------------------------------------------
index:5 node_index:189 is_statement:1 data_index:3 child_index:188 block_item_next_index:-1
--------------------------------------------
--------------------------------------------



============================================
= declaration_table                        =
============================================
declaration_table_num:3
--------------------------------------------
index:0 node_index:52 declaration_specifiers_index:4 static_assert_declaration_index:-1
         init_declarator_num:1 init_declarator_infor->next_id:0
--------------------------------------------
index:1 node_index:81 declaration_specifiers_index:5 static_assert_declaration_index:-1
         init_declarator_num:1 init_declarator_infor->next_id:1
--------------------------------------------
index:2 node_index:90 declaration_specifiers_index:6 static_assert_declaration_index:-1
         init_declarator_num:1 init_declarator_infor->next_id:2
--------------------------------------------
--------------------------------------------



============================================
= init_declarator_table                    =
============================================
init_declarator_table_num:3
--------------------------------------------
index:0 node_index:50 declarator_index:4 initializer_index:0 next:-1
--------------------------------------------
index:1 node_index:79 declarator_index:5 initializer_index:1 next:-1
--------------------------------------------
index:2 node_index:88 declarator_index:6 initializer_index:-1 next:-1
--------------------------------------------
--------------------------------------------



============================================
= initializer_table                        =
============================================
initializer_table_num:2
--------------------------------------------
index:0 node_index:49 is_assignment_expression:1 data_index:0
--------------------------------------------
index:1 node_index:78 is_assignment_expression:1 data_index:0
--------------------------------------------
--------------------------------------------



============================================
= initializer_list_table                   =
============================================
initializer_list_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= initializer_list_one_table               =
============================================
initializer_list_one_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= statement_table                          =
============================================
statement_table_num:4
--------------------------------------------
index:0 node_index:119 category:2 data_index:0 
--------------------------------------------
index:1 node_index:194 category:4 data_index:0 
--------------------------------------------
index:2 node_index:192 category:1 data_index:1 
--------------------------------------------
index:3 node_index:188 category:2 data_index:1 
--------------------------------------------
--------------------------------------------



============================================
= labeled_statement_table                  =
============================================
labeled_statement_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= expression_statement_table               =
============================================
expression_statement_table_num:2
--------------------------------------------
index:0 node_index:118 data_index:0 
--------------------------------------------
index:1 node_index:187 data_index:2 
--------------------------------------------
--------------------------------------------



============================================
= selection_statement_table                =
============================================
selection_statement_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= iteration_statement_table                =
============================================
iteration_statement_table_num:1
--------------------------------------------
index:0 node_index:193 category:0 data1_index:1 data2_index:2 data3_index:-1 data4_index:-1
--------------------------------------------
--------------------------------------------



============================================
= jump_statement_table                     =
============================================
jump_statement_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= expression_table                         =
============================================
expression_table_num:3
--------------------------------------------
index:0 node_index:117 data_num:1 data_index:0 
--------------------------------------------
index:1 node_index:148 data_num:1 data_index:2 
--------------------------------------------
index:2 node_index:186 data_num:1 data_index:3 
--------------------------------------------
--------------------------------------------



============================================
= assignment_expression_table              =
============================================
assignment_expression_table_num:4
--------------------------------------------
index:0 node_index:116 category:1 data1_index:0 data2_index:1 next_index:-1
--------------------------------------------
index:1 node_index:115 category:0 data1_index:0 data2_index:-1 next_index:-1
--------------------------------------------
index:2 node_index:147 category:0 data1_index:1 data2_index:-1 next_index:-1
--------------------------------------------
index:3 node_index:185 category:0 data1_index:2 data2_index:-1 next_index:-1
--------------------------------------------
--------------------------------------------



============================================
= conditional_expression_table             =
============================================
conditional_expression_table_num:3
--------------------------------------------
index:0 node_index:114 category:0 data1_index:0 data2_index:-1 data3_index:-1
--------------------------------------------
index:1 node_index:146 category:0 data1_index:1 data2_index:-1 data3_index:-1
--------------------------------------------
index:2 node_index:184 category:0 data1_index:2 data2_index:-1 data3_index:-1
--------------------------------------------
--------------------------------------------



============================================
= unary_expression_table                   =
============================================
unary_expression_table_num:6
--------------------------------------------
index:0 node_index:95 category:0 data_index:0 
--------------------------------------------
index:1 node_index:102 category:1 data_index:2 
--------------------------------------------
index:2 node_index:101 category:0 data_index:1 
--------------------------------------------
index:3 node_index:124 category:0 data_index:2 
--------------------------------------------
index:4 node_index:134 category:0 data_index:3 
--------------------------------------------
index:5 node_index:172 category:0 data_index:4 
--------------------------------------------
--------------------------------------------



============================================
= logical_or_expression_table              =
============================================
logical_or_expression_table_num:3
--------------------------------------------
index:0 node_index:113 category:0 data1_index:0 data2_index:-1
--------------------------------------------
index:1 node_index:145 category:0 data1_index:1 data2_index:-1
--------------------------------------------
index:2 node_index:183 category:0 data1_index:2 data2_index:-1
--------------------------------------------
--------------------------------------------



============================================
= logical_and_expression_table             =
============================================
logical_and_expression_table_num:3
--------------------------------------------
index:0 node_index:112 category:0 data1_index:0 data2_index:-1
--------------------------------------------
index:1 node_index:144 category:0 data1_index:1 data2_index:-1
--------------------------------------------
index:2 node_index:182 category:0 data1_index:2 data2_index:-1
--------------------------------------------
--------------------------------------------



============================================
= inclusive_or_expression_table            =
============================================
inclusive_or_expression_table_num:3
--------------------------------------------
index:0 node_index:111 category:0 data1_index:0 data2_index:-1
--------------------------------------------
index:1 node_index:143 category:0 data1_index:1 data2_index:-1
--------------------------------------------
index:2 node_index:181 category:0 data1_index:2 data2_index:-1
--------------------------------------------
--------------------------------------------



============================================
= exclusive_or_expression_table            =
============================================
exclusive_or_expression_table_num:3
--------------------------------------------
index:0 node_index:110 category:0 data1_index:0 data2_index:-1
--------------------------------------------
index:1 node_index:142 category:0 data1_index:1 data2_index:-1
--------------------------------------------
index:2 node_index:180 category:0 data1_index:2 data2_index:-1
--------------------------------------------
--------------------------------------------



============================================
= and_expression_table                     =
============================================
and_expression_table_num:3
--------------------------------------------
index:0 node_index:109 category:0 data1_index:0 data2_index:-1
--------------------------------------------
index:1 node_index:141 category:0 data1_index:1 data2_index:-1
--------------------------------------------
index:2 node_index:179 category:0 data1_index:2 data2_index:-1
--------------------------------------------
--------------------------------------------



============================================
= equality_expression_table                =
============================================
equality_expression_table_num:3
--------------------------------------------
index:0 node_index:108 category:0 data1_index:0 data2_index:-1
--------------------------------------------
index:1 node_index:140 category:0 data1_index:1 data2_index:-1
--------------------------------------------
index:2 node_index:178 category:0 data1_index:3 data2_index:-1
--------------------------------------------
--------------------------------------------



============================================
= relational_expression_table              =
============================================
relational_expression_table_num:4
--------------------------------------------
index:0 node_index:107 category:0 data1_index:0 data2_index:-1
--------------------------------------------
index:1 node_index:139 category:2 data1_index:2 data2_index:2
--------------------------------------------
index:2 node_index:129 category:0 data1_index:1 data2_index:-1
--------------------------------------------
index:3 node_index:177 category:0 data1_index:3 data2_index:-1
--------------------------------------------
--------------------------------------------



============================================
= shift_expression_table                   =
============================================
shift_expression_table_num:4
--------------------------------------------
index:0 node_index:106 category:0 data1_index:0 data2_index:-1
--------------------------------------------
index:1 node_index:128 category:0 data1_index:1 data2_index:-1
--------------------------------------------
index:2 node_index:138 category:0 data1_index:2 data2_index:-1
--------------------------------------------
index:3 node_index:176 category:0 data1_index:3 data2_index:-1
--------------------------------------------
--------------------------------------------



============================================
= additive_expression_table                =
============================================
additive_expression_table_num:4
--------------------------------------------
index:0 node_index:105 category:0 data1_index:0 data2_index:-1
--------------------------------------------
index:1 node_index:127 category:0 data1_index:1 data2_index:-1
--------------------------------------------
index:2 node_index:137 category:0 data1_index:2 data2_index:-1
--------------------------------------------
index:3 node_index:175 category:0 data1_index:3 data2_index:-1
--------------------------------------------
--------------------------------------------



============================================
= multiplicative_expression_table          =
============================================
multiplicative_expression_table_num:4
--------------------------------------------
index:0 node_index:104 category:0 data1_index:0 data2_index:-1
--------------------------------------------
index:1 node_index:126 category:0 data1_index:1 data2_index:-1
--------------------------------------------
index:2 node_index:136 category:0 data1_index:2 data2_index:-1
--------------------------------------------
index:3 node_index:174 category:0 data1_index:3 data2_index:-1
--------------------------------------------
--------------------------------------------



============================================
= cast_expression_table                    =
============================================
cast_expression_table_num:4
--------------------------------------------
index:0 node_index:103 category:0 data1_index:1 data2_index:-1
--------------------------------------------
index:1 node_index:125 category:0 data1_index:3 data2_index:-1
--------------------------------------------
index:2 node_index:135 category:0 data1_index:4 data2_index:-1
--------------------------------------------
index:3 node_index:173 category:0 data1_index:5 data2_index:-1
--------------------------------------------
--------------------------------------------



============================================
= unary_expression_table                   =
============================================
unary_expression_table_num:6
--------------------------------------------
index:0 node_index:95 category:0 data_index:0 
--------------------------------------------
index:1 node_index:102 category:1 data_index:2 
--------------------------------------------
index:2 node_index:101 category:0 data_index:1 
--------------------------------------------
index:3 node_index:124 category:0 data_index:2 
--------------------------------------------
index:4 node_index:134 category:0 data_index:3 
--------------------------------------------
index:5 node_index:172 category:0 data_index:4 
--------------------------------------------
--------------------------------------------



============================================
= postfix_expression_table                 =
============================================
postfix_expression_table_num:6
--------------------------------------------
index:0 node_index:94 category:0 data1_index:0 data2_index:-2
--------------------------------------------
index:1 node_index:100 category:0 data1_index:1 data2_index:-2
--------------------------------------------
index:2 node_index:123 category:0 data1_index:2 data2_index:-2
--------------------------------------------
index:3 node_index:133 category:0 data1_index:3 data2_index:-2
--------------------------------------------
index:4 node_index:171 category:3 data1_index:5 data2_index:-2
--------------------------------------------
index:5 node_index:151 category:0 data1_index:4 data2_index:-2
--------------------------------------------
--------------------------------------------



============================================
= primary_expression_table                 =
============================================
primary_expression_table_num:5
--------------------------------------------
index:0 node_index:93 category:0 data_index:7 
--------------------------------------------
index:1 node_index:99 category:0 data_index:8 
--------------------------------------------
index:2 node_index:122 category:0 data_index:9 
--------------------------------------------
index:3 node_index:132 category:1 data_index:-1 
--------------------------------------------
index:4 node_index:150 category:0 data_index:10 
--------------------------------------------
--------------------------------------------



============================================
= IDENTIFIER_table                         =
============================================
IDENTIFIER_table_num:11
--------------------------------------------
index:0 node_num:1 smbl_num:1 node_index:5 symbol_a_index:-1
 node_id:5
 smbl_id:1
 smbl_name:a1
--------------------------------------------
index:1 node_num:1 smbl_num:1 node_index:12 symbol_a_index:-1
 node_id:12
 smbl_id:2
 smbl_name:a2
--------------------------------------------
index:2 node_num:1 smbl_num:1 node_index:18 symbol_a_index:-1
 node_id:18
 smbl_id:3
 smbl_name:a3
--------------------------------------------
index:3 node_num:1 smbl_num:1 node_index:1 symbol_a_index:-1
 node_id:1
 smbl_id:0
 smbl_name:main
--------------------------------------------
index:4 node_num:1 smbl_num:1 node_index:27 symbol_a_index:-1
declaration_specifiers_table[0] start
index:0
storage_class_specifier none(0x00000000)
type_specifier(0x00000001): signed default void index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[0] end
 node_id:27
 smbl_id:4
 smbl_name:a
--------------------------------------------
index:5 node_num:1 smbl_num:1 node_index:56 symbol_a_index:-1
declaration_specifiers_table[1] start
index:1
storage_class_specifier none(0x00000000)
type_specifier(0x00000003): signed default int index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[1] end
 node_id:56
 smbl_id:6
 smbl_name:b
--------------------------------------------
index:6 node_num:1 smbl_num:1 node_index:84 symbol_a_index:-1
declaration_specifiers_table[2] start
index:2
storage_class_specifier none(0x00000000)
type_specifier(0x00000003): signed default int index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[2] end
 node_id:84
 smbl_id:8
 smbl_name:c
--------------------------------------------
index:7 node_num:1 smbl_num:1 node_index:92 symbol_a_index:2
 node_id:92
 smbl_id:9
 smbl_name:c
--------------------------------------------
index:8 node_num:1 smbl_num:1 node_index:98 symbol_a_index:0
 node_id:98
 smbl_id:10
 smbl_name:a
--------------------------------------------
index:9 node_num:1 smbl_num:1 node_index:121 symbol_a_index:2
 node_id:121
 smbl_id:11
 smbl_name:c
--------------------------------------------
index:10 node_num:1 smbl_num:1 node_index:149 symbol_a_index:-1
 node_id:149
 smbl_id:13
 smbl_name:printf
--------------------------------------------
--------------------------------------------



============================================
= struct_or_union_specifier_table          =
============================================
struct_or_union_specifier_table_num:0
--------------------------------------------
--------------------------------------------



============================================
 parameter_declaration_table               =
============================================
index(0) node_index(9) category(0) data1_index(1) data2_index(1) next_sibling(1)
--------------------------------------------

index(1) node_index(16) category(0) data1_index(2) data2_index(2) next_sibling(2)
--------------------------------------------

index(2) node_index(22) category(0) data1_index(3) data2_index(3) next_sibling(-1)
--------------------------------------------

--------------------------------------------



============================================
= function_definition_table                =
============================================
function_definition_table_num:1
--------------------------------------------
index:0 node_index:197 category:1 data1_index:0 data2_index:0 data3_index:-1 data4_index:0
--------------------------------------------
--------------------------------------------



============================================
= symbol_a_table                           =
============================================
symbol_a_table_num:4
--------------------------------------------
index:0 declaration_specifiers_index:4 IDENTIFIER_index:4 symbol_name:***a(line_num:3)*** action_scope:196 s_type(variable:0 struct:1 function:2):0         
pointer_index:-1 array_dimension:0 
taint_m:0 taint_src:0
--------------------------------------------
index:1 declaration_specifiers_index:5 IDENTIFIER_index:5 symbol_name:***b(line_num:4)*** action_scope:196 s_type(variable:0 struct:1 function:2):0         
pointer_index:-1 array_dimension:0 
taint_m:0 taint_src:1
--------------------------------------------
index:2 declaration_specifiers_index:6 IDENTIFIER_index:6 symbol_name:***c(line_num:5)*** action_scope:196 s_type(variable:0 struct:1 function:2):0         
pointer_index:-1 array_dimension:0 
taint_m:0 taint_src:2
--------------------------------------------
index:3 declaration_specifiers_index:-1 IDENTIFIER_index:-1 symbol_name:***(null)(line_num:7)*** action_scope:196 s_type(variable:0 struct:1 function:2):4         
pointer_index:-1 array_dimension:0 
taint_m:0 taint_src:3
--------------------------------------------
--------------------------------------------


============================================
= instruction_table                        =
============================================
instruction_table_num:12
--------------------------------------------
index:0 sequence:0 node_index:196 prev:0 next:0 ins_type:57 ins_set_num:2
line_num:11 inst_type:57 ins_ret:-1 ins_data1:-1 ins_data2:-1 ins_data3:-1 ins_taint_level:0 ins_taint_src:-1
instruction description: compound_statement_ins(57)
including 0 instruction: 1
including 1 instruction: 6
--------------------------------------------
index:1 sequence:1 node_index:117 prev:0 next:0 ins_type:56 ins_set_num:1
line_num:6 inst_type:56 ins_ret:2 ins_data1:1 ins_data2:5 ins_data3:-1 ins_taint_level:0 ins_taint_src:-1
instruction description: expression_ins(56)
including 0 instruction: 5
--------------------------------------------
index:2 sequence:2 node_index:92 prev:0 next:0 ins_type:55 ins_set_num:0
line_num:6 inst_type:55 ins_ret:2 ins_data1:2 ins_data2:-1 ins_data3:-1 ins_taint_level:0 ins_taint_src:-1
instruction description: just_IDENTIFIER_ins(55)
--------------------------------------------
index:3 sequence:3 node_index:98 prev:0 next:0 ins_type:55 ins_set_num:0
line_num:6 inst_type:55 ins_ret:0 ins_data1:0 ins_data2:-1 ins_data3:-1 ins_taint_level:0 ins_taint_src:-1
instruction description: just_IDENTIFIER_ins(55)
--------------------------------------------
index:4 sequence:4 node_index:102 prev:0 next:0 ins_type:22 ins_set_num:0
line_num:6 inst_type:22 ins_ret:0 ins_data1:-1 ins_data2:-1 ins_data3:-1 ins_taint_level:0 ins_taint_src:-1
instruction description: inc_op_unary_ins(22)
--------------------------------------------
index:5 sequence:5 node_index:116 prev:0 next:0 ins_type:11 ins_set_num:0
line_num:6 inst_type:11 ins_ret:2 ins_data1:2 ins_data2:0 ins_data3:-1 ins_taint_level:0 ins_taint_src:-1
instruction description: assignment_ins(11)
--------------------------------------------
index:6 sequence:6 node_index:193 prev:0 next:0 ins_type:69 ins_set_num:0
line_num:10 inst_type:69 ins_ret:-1 ins_data1:7 ins_data2:10 ins_data3:-1 ins_taint_level:0 ins_taint_src:-1
instruction description: iteration_statement_0_ins(69)
--------------------------------------------
index:7 sequence:7 node_index:148 prev:0 next:0 ins_type:56 ins_set_num:1
line_num:7 inst_type:56 ins_ret:3 ins_data1:7 ins_data2:9 ins_data3:-1 ins_taint_level:0 ins_taint_src:-1
instruction description: expression_ins(56)
including 0 instruction: 9
--------------------------------------------
index:8 sequence:8 node_index:121 prev:0 next:0 ins_type:55 ins_set_num:0
line_num:7 inst_type:55 ins_ret:2 ins_data1:2 ins_data2:-1 ins_data3:-1 ins_taint_level:0 ins_taint_src:-1
instruction description: just_IDENTIFIER_ins(55)
--------------------------------------------
index:9 sequence:9 node_index:139 prev:0 next:0 ins_type:44 ins_set_num:0
line_num:7 inst_type:44 ins_ret:3 ins_data1:2 ins_data2:-1 ins_data3:-1 ins_taint_level:0 ins_taint_src:-1
instruction description: g_op_ins(44)
--------------------------------------------
index:10 sequence:10 node_index:191 prev:0 next:0 ins_type:57 ins_set_num:1
line_num:10 inst_type:57 ins_ret:-1 ins_data1:-1 ins_data2:-1 ins_data3:-1 ins_taint_level:0 ins_taint_src:-1
instruction description: compound_statement_ins(57)
including 0 instruction: 11
--------------------------------------------
index:11 sequence:11 node_index:186 prev:0 next:0 ins_type:56 ins_set_num:1
line_num:9 inst_type:56 ins_ret:-1 ins_data1:11 ins_data2:11 ins_data3:-1 ins_taint_level:0 ins_taint_src:-1
instruction description: expression_ins(56)
including 0 instruction: -1
--------------------------------------------
--------------------------------------------

