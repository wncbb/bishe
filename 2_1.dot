digraph G{
75[shape=box, label="75 translation_unit_type(91):0:0"];
74[shape=box, label="74 external_declaration_type(39):0:0"];
75->74;
74[shape=box, label="74 external_declaration_type(39):0:0"];
73[shape=box, label="73 function_definition_type(42):1:0"];
74->73;
73[shape=box, label="73 function_definition_type(42):1:0"];
2[shape=box, label="2 declaration_specifiers_type(21):3:0"];
73->2;
2[shape=box, label="2 declaration_specifiers_type(21):3:0"];
0[shape=box, label="0 type_specifier_type(95):3:0"];
2->0;
0[shape=box, label="0 type_specifier_type(95):3:0"];
5[shape=box, label="5 declarator_type(23):1:0"];
73->5;
5[shape=box, label="5 declarator_type(23):1:0"];
4[shape=box, label="4 direct_declarator_type(28):12:0"];
5->4;
4[shape=box, label="4 direct_declarator_type(28):12:0"];
3[shape=box, label="3 direct_declarator_type(28):0:0"];
4->3;
3[shape=box, label="3 direct_declarator_type(28):0:0"];
1[shape=box, label="1 IDENTIFIER_type(49):-1:0:main"];
3->1;
1[shape=box, label="1 IDENTIFIER_type(49):-1:0:main"];
72[shape=box, label="72 compound_statement_type(14):1:72"];
73->72;
72[shape=box, label="72 compound_statement_type(14):1:72"];
42[shape=box, label="42 block_item_list_type(11):0:72"];
72->42;
42[shape=box, label="42 block_item_list_type(11):0:72"];
41[shape=box, label="41 block_item_type(12):0:72"];
42->41;
41[shape=box, label="41 block_item_type(12):0:72"];
40[shape=box, label="40 declaration_type(22):1:72"];
41->40;
40[shape=box, label="40 declaration_type(22):1:72"];
8[shape=box, label="8 declaration_specifiers_type(21):3:72"];
40->8;
8[shape=box, label="8 declaration_specifiers_type(21):3:72"];
6[shape=box, label="6 type_specifier_type(95):3:72"];
8->6;
6[shape=box, label="6 type_specifier_type(95):3:72"];
39[shape=box, label="39 init_declarator_list_type(53):0:72"];
40->39;
39[shape=box, label="39 init_declarator_list_type(53):0:72"];
38[shape=box, label="38 init_declarator_type(54):0:72"];
39->38;
38[shape=box, label="38 init_declarator_type(54):0:72"];
10[shape=box, label="10 declarator_type(23):1:72"];
38->10;
10[shape=box, label="10 declarator_type(23):1:72"];
9[shape=box, label="9 direct_declarator_type(28):0:72"];
10->9;
9[shape=box, label="9 direct_declarator_type(28):0:72"];
7[shape=box, label="7 IDENTIFIER_type(49):-1:72:a"];
9->7;
7[shape=box, label="7 IDENTIFIER_type(49):-1:72:a"];
37[shape=box, label="37 initializer_type(56):2:72"];
38->37;
37[shape=box, label="37 initializer_type(56):2:72"];
36[shape=box, label="36 assignment_expression_type(8):0:72"];
37->36;
36[shape=box, label="36 assignment_expression_type(8):0:72"];
35[shape=box, label="35 conditional_expression_type(15):0:72"];
36->35;
35[shape=box, label="35 conditional_expression_type(15):0:72"];
34[shape=box, label="34 logical_or_expression_type(62):0:72"];
35->34;
34[shape=box, label="34 logical_or_expression_type(62):0:72"];
33[shape=box, label="33 logical_and_expression_type(61):0:72"];
34->33;
33[shape=box, label="33 logical_and_expression_type(61):0:72"];
32[shape=box, label="32 inclusive_or_expression_type(52):0:72"];
33->32;
32[shape=box, label="32 inclusive_or_expression_type(52):0:72"];
31[shape=box, label="31 exclusive_or_expression_type(36):0:72"];
32->31;
31[shape=box, label="31 exclusive_or_expression_type(36):0:72"];
30[shape=box, label="30 and_expression_type(6):0:72"];
31->30;
30[shape=box, label="30 and_expression_type(6):0:72"];
29[shape=box, label="29 equality_expression_type(35):0:72"];
30->29;
29[shape=box, label="29 equality_expression_type(35):0:72"];
28[shape=box, label="28 relational_expression_type(74):0:72"];
29->28;
28[shape=box, label="28 relational_expression_type(74):0:72"];
27[shape=box, label="27 shift_expression_type(78):0:72"];
28->27;
27[shape=box, label="27 shift_expression_type(78):0:72"];
26[shape=box, label="26 additive_expression_type(4):1:72"];
27->26;
26[shape=box, label="26 additive_expression_type(4):1:72"];
18[shape=box, label="18 additive_expression_type(4):0:72"];
26->18;
18[shape=box, label="18 additive_expression_type(4):0:72"];
17[shape=box, label="17 multiplicative_expression_type(65):0:72"];
18->17;
17[shape=box, label="17 multiplicative_expression_type(65):0:72"];
16[shape=box, label="16 cast_expression_type(13):0:72"];
17->16;
16[shape=box, label="16 cast_expression_type(13):0:72"];
15[shape=box, label="15 unary_expression_type(96):0:72"];
16->15;
15[shape=box, label="15 unary_expression_type(96):0:72"];
14[shape=box, label="14 postfix_expression_type(71):0:72"];
15->14;
14[shape=box, label="14 postfix_expression_type(71):0:72"];
13[shape=box, label="13 primary_expression_type(72):1:72"];
14->13;
13[shape=box, label="13 primary_expression_type(72):1:72"];
12[shape=box, label="12 constant_type(17):0:72"];
13->12;
12[shape=box, label="12 constant_type(17):0:72"];
11[shape=box, label="11 I_CONSTANT_type(48):-1:72:13"];
12->11;
11[shape=box, label="11 I_CONSTANT_type(48):-1:72:13"];
25[shape=box, label="25 multiplicative_expression_type(65):0:72"];
26->25;
25[shape=box, label="25 multiplicative_expression_type(65):0:72"];
24[shape=box, label="24 cast_expression_type(13):0:72"];
25->24;
24[shape=box, label="24 cast_expression_type(13):0:72"];
23[shape=box, label="23 unary_expression_type(96):0:72"];
24->23;
23[shape=box, label="23 unary_expression_type(96):0:72"];
22[shape=box, label="22 postfix_expression_type(71):0:72"];
23->22;
22[shape=box, label="22 postfix_expression_type(71):0:72"];
21[shape=box, label="21 primary_expression_type(72):1:72"];
22->21;
21[shape=box, label="21 primary_expression_type(72):1:72"];
20[shape=box, label="20 constant_type(17):0:72"];
21->20;
20[shape=box, label="20 constant_type(17):0:72"];
19[shape=box, label="19 I_CONSTANT_type(48):-1:72:12"];
20->19;
19[shape=box, label="19 I_CONSTANT_type(48):-1:72:12"];
71[shape=box, label="71 block_item_type(12):1:72"];
42->71;
71[shape=box, label="71 block_item_type(12):1:72"];
70[shape=box, label="70 statement_type(80):2:72"];
71->70;
70[shape=box, label="70 statement_type(80):2:72"];
69[shape=box, label="69 expression_statement_type(37):1:72"];
70->69;
69[shape=box, label="69 expression_statement_type(37):1:72"];
68[shape=box, label="68 expression_type(38):0:72"];
69->68;
68[shape=box, label="68 expression_type(38):0:72"];
67[shape=box, label="67 assignment_expression_type(8):1:72"];
68->67;
67[shape=box, label="67 assignment_expression_type(8):1:72"];
46[shape=box, label="46 unary_expression_type(96):0:72"];
67->46;
46[shape=box, label="46 unary_expression_type(96):0:72"];
45[shape=box, label="45 postfix_expression_type(71):0:72"];
46->45;
45[shape=box, label="45 postfix_expression_type(71):0:72"];
44[shape=box, label="44 primary_expression_type(72):0:72"];
45->44;
44[shape=box, label="44 primary_expression_type(72):0:72"];
43[shape=box, label="43 IDENTIFIER_type(49):-1:72:a"];
44->43;
43[shape=box, label="43 IDENTIFIER_type(49):-1:72:a"];
48[shape=box, label="48 assignment_operator_type(9):4:72"];
67->48;
48[shape=box, label="48 assignment_operator_type(9):4:72"];
47[shape=box, label="47 ADD_ASSIGN_type(1):-1:72"];
48->47;
47[shape=box, label="47 ADD_ASSIGN_type(1):-1:72"];
66[shape=box, label="66 assignment_expression_type(8):0:72"];
67->66;
66[shape=box, label="66 assignment_expression_type(8):0:72"];
65[shape=box, label="65 conditional_expression_type(15):0:72"];
66->65;
65[shape=box, label="65 conditional_expression_type(15):0:72"];
64[shape=box, label="64 logical_or_expression_type(62):0:72"];
65->64;
64[shape=box, label="64 logical_or_expression_type(62):0:72"];
63[shape=box, label="63 logical_and_expression_type(61):0:72"];
64->63;
63[shape=box, label="63 logical_and_expression_type(61):0:72"];
62[shape=box, label="62 inclusive_or_expression_type(52):0:72"];
63->62;
62[shape=box, label="62 inclusive_or_expression_type(52):0:72"];
61[shape=box, label="61 exclusive_or_expression_type(36):0:72"];
62->61;
61[shape=box, label="61 exclusive_or_expression_type(36):0:72"];
60[shape=box, label="60 and_expression_type(6):0:72"];
61->60;
60[shape=box, label="60 and_expression_type(6):0:72"];
59[shape=box, label="59 equality_expression_type(35):0:72"];
60->59;
59[shape=box, label="59 equality_expression_type(35):0:72"];
58[shape=box, label="58 relational_expression_type(74):0:72"];
59->58;
58[shape=box, label="58 relational_expression_type(74):0:72"];
57[shape=box, label="57 shift_expression_type(78):0:72"];
58->57;
57[shape=box, label="57 shift_expression_type(78):0:72"];
56[shape=box, label="56 additive_expression_type(4):0:72"];
57->56;
56[shape=box, label="56 additive_expression_type(4):0:72"];
55[shape=box, label="55 multiplicative_expression_type(65):0:72"];
56->55;
55[shape=box, label="55 multiplicative_expression_type(65):0:72"];
54[shape=box, label="54 cast_expression_type(13):0:72"];
55->54;
54[shape=box, label="54 cast_expression_type(13):0:72"];
53[shape=box, label="53 unary_expression_type(96):0:72"];
54->53;
53[shape=box, label="53 unary_expression_type(96):0:72"];
52[shape=box, label="52 postfix_expression_type(71):0:72"];
53->52;
52[shape=box, label="52 postfix_expression_type(71):0:72"];
51[shape=box, label="51 primary_expression_type(72):1:72"];
52->51;
51[shape=box, label="51 primary_expression_type(72):1:72"];
50[shape=box, label="50 constant_type(17):0:72"];
51->50;
50[shape=box, label="50 constant_type(17):0:72"];
49[shape=box, label="49 I_CONSTANT_type(48):-1:72:1"];
50->49;
49[shape=box, label="49 I_CONSTANT_type(48):-1:72:1"];
}
