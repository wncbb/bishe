before initialize compiler state
81818181: node_table:b7742008
81818181: symbol_table:b7701008
lib/compiler_state.c:151 8134170
after  initialize compiler state
================compiler_state start===================
c_file_str:b2.c
symbol_max_number:65536
symbol_number:0
node_max_number:65536
node_number:0
need_dot_file:0
dot_file_str:
need_infor:0
symbol_table:8134170
node_table:b7742008
declaration_secifiers_table:8134170
================compiler_state end ====================
type_specifier: INT
!!!a
291:yylineno:1
check_identifier end
declaration_specifiers: type_specifier
direct_declarator: IDENTIFIER
!!!2
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
direct_declarator: direct_declarator '[' assignment_expression ']'
!!!3
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
direct_declarator: direct_declarator '[' assignment_expression ']'
declarator: direct_declarator
init_declarator: declarator
init_declarator_list: init_declarator
declaration: declaration_specifiers init_declarator_list ';'
external_declaration: declaration
-------------------------translation_unit: external_declaration
----------print_node_table:
node_index node_parent node_child_num node_type_str node_symbol_index node_line_num node_compound_id
id(0):type(type_specifier_type[95]):index(0):parent(2):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(1):compound_id(0):

id(1):type(not_know_type[0]):index(1):parent(3):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[0]):infor_index(-1):line_num(1):compound_id(0):

id(2):type(declaration_specifiers_type[21]):index(2):parent(45):left_brother(-1):right_brother(44):brother_num(2):brother_seq(0):first_child(0):child_num(1):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(1):compound_id(0):

id(3):type(direct_declarator_type[28]):index(3):parent(22):left_brother(-1):right_brother(21):brother_num(2):brother_seq(0):first_child(1):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(4):type(I_CONSTANT_type[48]):index(4):parent(5):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(2[1]):infor_index(-1):line_num(1):compound_id(0):

id(5):type(constant_type[17]):index(5):parent(6):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(4):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(6):type(primary_expression_type[72]):index(6):parent(7):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(5):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(1):compound_id(0):

id(7):type(postfix_expression_type[71]):index(7):parent(8):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(6):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(8):type(unary_expression_type[96]):index(8):parent(9):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(7):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(9):type(cast_expression_type[13]):index(9):parent(10):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(8):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(10):type(multiplicative_expression_type[65]):index(10):parent(11):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(9):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(11):type(additive_expression_type[4]):index(11):parent(12):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(10):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(12):type(shift_expression_type[78]):index(12):parent(13):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(11):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(13):type(relational_expression_type[74]):index(13):parent(14):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(12):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(14):type(equality_expression_type[35]):index(14):parent(15):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(13):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(15):type(and_expression_type[6]):index(15):parent(16):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(14):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(16):type(exclusive_or_expression_type[36]):index(16):parent(17):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(15):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(17):type(inclusive_or_expression_type[52]):index(17):parent(18):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(16):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(18):type(logical_and_expression_type[61]):index(18):parent(19):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(17):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(19):type(logical_or_expression_type[62]):index(19):parent(20):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(18):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(20):type(conditional_expression_type[15]):index(20):parent(21):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(19):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(21):type(assignment_expression_type[8]):index(21):parent(22):left_brother(3):right_brother(-1):brother_num(2):brother_seq(1):first_child(20):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(22):type(direct_declarator_type[28]):index(22):parent(41):left_brother(-1):right_brother(40):brother_num(2):brother_seq(0):first_child(3):child_num(2):inrule_num(10):symbol_index([10]):infor_index(-1):line_num(1):compound_id(0):

id(23):type(I_CONSTANT_type[48]):index(23):parent(24):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(3[2]):infor_index(-1):line_num(1):compound_id(0):

id(24):type(constant_type[17]):index(24):parent(25):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(23):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(25):type(primary_expression_type[72]):index(25):parent(26):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(24):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(1):compound_id(0):

id(26):type(postfix_expression_type[71]):index(26):parent(27):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(25):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(27):type(unary_expression_type[96]):index(27):parent(28):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(26):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(28):type(cast_expression_type[13]):index(28):parent(29):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(27):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(29):type(multiplicative_expression_type[65]):index(29):parent(30):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(28):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(30):type(additive_expression_type[4]):index(30):parent(31):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(29):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(31):type(shift_expression_type[78]):index(31):parent(32):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(30):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(32):type(relational_expression_type[74]):index(32):parent(33):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(31):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(33):type(equality_expression_type[35]):index(33):parent(34):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(32):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(34):type(and_expression_type[6]):index(34):parent(35):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(33):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(35):type(exclusive_or_expression_type[36]):index(35):parent(36):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(34):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(36):type(inclusive_or_expression_type[52]):index(36):parent(37):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(35):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(37):type(logical_and_expression_type[61]):index(37):parent(38):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(36):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(38):type(logical_or_expression_type[62]):index(38):parent(39):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(37):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(39):type(conditional_expression_type[15]):index(39):parent(40):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(38):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(40):type(assignment_expression_type[8]):index(40):parent(41):left_brother(22):right_brother(-1):brother_num(2):brother_seq(1):first_child(39):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(41):type(direct_declarator_type[28]):index(41):parent(42):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(22):child_num(2):inrule_num(10):symbol_index([10]):infor_index(-1):line_num(1):compound_id(0):

id(42):type(declarator_type[23]):index(42):parent(43):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(41):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(1):compound_id(0):

id(43):type(init_declarator_type[54]):index(43):parent(44):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(42):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(1):compound_id(0):

id(44):type(init_declarator_list_type[53]):index(44):parent(45):left_brother(2):right_brother(-1):brother_num(2):brother_seq(1):first_child(43):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(45):type(declaration_type[22]):index(45):parent(46):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(2):child_num(2):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(1):compound_id(0):

id(46):type(external_declaration_type[39]):index(46):parent(47):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(45):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(1):compound_id(0):

id(47):type(translation_unit_type[91]):index(47):parent(-1):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(46):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

----------print_node_table!
+translation_unit_type node_id:47 child_number:1 inrule_num:0 line_num:1
 +external_declaration_type node_id:46 child_number:1 inrule_num:1 line_num:1
  +declaration_type node_id:45 child_number:2 inrule_num:1 line_num:1
   +declaration_specifiers_type node_id:2 child_number:1 inrule_num:3 line_num:1
    +type_specifier_type node_id:0 child_number:0 inrule_num:3 line_num:1
   +init_declarator_list_type node_id:44 child_number:1 inrule_num:0 line_num:1
    +init_declarator_type node_id:43 child_number:1 inrule_num:1 line_num:1
     +declarator_type node_id:42 child_number:1 inrule_num:1 line_num:1
      +direct_declarator_type node_id:41 child_number:2 inrule_num:10 line_num:1
       +direct_declarator_type node_id:22 child_number:2 inrule_num:10 line_num:1
        +direct_declarator_type node_id:3 child_number:1 inrule_num:0 line_num:1
         +not_know_type node_id:1 child_number:0 inrule_num:-1 line_num:1
 a
        +assignment_expression_type node_id:21 child_number:1 inrule_num:0 line_num:1
         +conditional_expression_type node_id:20 child_number:1 inrule_num:0 line_num:1
          +logical_or_expression_type node_id:19 child_number:1 inrule_num:0 line_num:1
           +logical_and_expression_type node_id:18 child_number:1 inrule_num:0 line_num:1
            +inclusive_or_expression_type node_id:17 child_number:1 inrule_num:0 line_num:1
             +exclusive_or_expression_type node_id:16 child_number:1 inrule_num:0 line_num:1
              +and_expression_type node_id:15 child_number:1 inrule_num:0 line_num:1
               +equality_expression_type node_id:14 child_number:1 inrule_num:0 line_num:1
                +relational_expression_type node_id:13 child_number:1 inrule_num:0 line_num:1
                 +shift_expression_type node_id:12 child_number:1 inrule_num:0 line_num:1
                  +additive_expression_type node_id:11 child_number:1 inrule_num:0 line_num:1
                   +multiplicative_expression_type node_id:10 child_number:1 inrule_num:0 line_num:1
                    +cast_expression_type node_id:9 child_number:1 inrule_num:0 line_num:1
                     +unary_expression_type node_id:8 child_number:1 inrule_num:0 line_num:1
                      +postfix_expression_type node_id:7 child_number:1 inrule_num:0 line_num:1
                       +primary_expression_type node_id:6 child_number:1 inrule_num:1 line_num:1
                        +constant_type node_id:5 child_number:1 inrule_num:0 line_num:1
                         +I_CONSTANT_type node_id:4 child_number:0 inrule_num:-1 line_num:1
       +assignment_expression_type node_id:40 child_number:1 inrule_num:0 line_num:1
        +conditional_expression_type node_id:39 child_number:1 inrule_num:0 line_num:1
         +logical_or_expression_type node_id:38 child_number:1 inrule_num:0 line_num:1
          +logical_and_expression_type node_id:37 child_number:1 inrule_num:0 line_num:1
           +inclusive_or_expression_type node_id:36 child_number:1 inrule_num:0 line_num:1
            +exclusive_or_expression_type node_id:35 child_number:1 inrule_num:0 line_num:1
             +and_expression_type node_id:34 child_number:1 inrule_num:0 line_num:1
              +equality_expression_type node_id:33 child_number:1 inrule_num:0 line_num:1
               +relational_expression_type node_id:32 child_number:1 inrule_num:0 line_num:1
                +shift_expression_type node_id:31 child_number:1 inrule_num:0 line_num:1
                 +additive_expression_type node_id:30 child_number:1 inrule_num:0 line_num:1
                  +multiplicative_expression_type node_id:29 child_number:1 inrule_num:0 line_num:1
                   +cast_expression_type node_id:28 child_number:1 inrule_num:0 line_num:1
                    +unary_expression_type node_id:27 child_number:1 inrule_num:0 line_num:1
                     +postfix_expression_type node_id:26 child_number:1 inrule_num:0 line_num:1
                      +primary_expression_type node_id:25 child_number:1 inrule_num:1 line_num:1
                       +constant_type node_id:24 child_number:1 inrule_num:0 line_num:1
                        +I_CONSTANT_type node_id:23 child_number:0 inrule_num:-1 line_num:1
---------------------symbol_table:
id(0):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(1):in_which_node(1):
id(1):name(2):name_len(1):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(1):in_which_node(4):
id(2):name(3):name_len(1):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(1):in_which_node(23):
---------------------symbol_table!
stack: 0 


============================================
= print declaration_specifiers_table       =
============================================






============================================
= declarator_table                         =
============================================
declarator_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= print direct_declarator_table            =
============================================






============================================
= print compound_statement_table           =
============================================






============================================
= block_item_table                         =
============================================
initializer_block_item_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= declaration_table                        =
============================================
declaration_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= init_declarator_table                    =
============================================
init_declarator_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= initializer_table                        =
============================================
initializer_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= initializer_list_table                   =
============================================
initializer_list_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= initializer_list_one_table               =
============================================
initializer_list_one_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= statement_table                          =
============================================
statement_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= labeled_statement_table                  =
============================================
labeled_statement_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= expression_statement_table               =
============================================
expression_statement_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= selection_statement_table                =
============================================
selection_statement_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= iteration_statement_table                =
============================================
iteration_statement_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= jump_statement_table                     =
============================================
jump_statement_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= expression_table                         =
============================================
expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= assignment_expression_table              =
============================================
assignment_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= conditional_expression_table             =
============================================
conditional_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= unary_expression_table                   =
============================================
unary_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= logical_or_expression_table              =
============================================
logical_or_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= logical_and_expression_table             =
============================================
logical_and_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= inclusive_or_expression_table            =
============================================
inclusive_or_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= exclusive_or_expression_table            =
============================================
exclusive_or_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= and_expression_table                     =
============================================
and_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= equality_expression_table                =
============================================
equality_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= relational_expression_table              =
============================================
relational_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= shift_expression_table                   =
============================================
shift_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= additive_expression_table                =
============================================
additive_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= multiplicative_expression_table          =
============================================
multiplicative_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= cast_expression_table                    =
============================================
cast_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= unary_expression_table                   =
============================================
unary_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= postfix_expression_table                 =
============================================
postfix_expression_table_num:0
--------------------------------------------
--------------------------------------------



============================================
= primary_expression_table                 =
============================================
primary_expression_table_num:0
--------------------------------------------
--------------------------------------------

