digraph G{
94[shape=box, label="94 translation_unit_type(91):0:0"];
93[shape=box, label="93 external_declaration_type(39):0:0"];
94->93;
93[shape=box, label="93 external_declaration_type(39):0:0"];
92[shape=box, label="92 function_definition_type(42):1:0"];
93->92;
92[shape=box, label="92 function_definition_type(42):1:0"];
2[shape=box, label="2 declaration_specifiers_type(21):3:0"];
92->2;
2[shape=box, label="2 declaration_specifiers_type(21):3:0"];
0[shape=box, label="0 type_specifier_type(95):3:0"];
2->0;
0[shape=box, label="0 type_specifier_type(95):3:0"];
5[shape=box, label="5 declarator_type(23):1:0"];
92->5;
5[shape=box, label="5 declarator_type(23):1:0"];
4[shape=box, label="4 direct_declarator_type(28):12:0"];
5->4;
4[shape=box, label="4 direct_declarator_type(28):12:0"];
3[shape=box, label="3 direct_declarator_type(28):0:0"];
4->3;
3[shape=box, label="3 direct_declarator_type(28):0:0"];
1[shape=box, label="1 IDENTIFIER_type(49):-1:0:main"];
3->1;
1[shape=box, label="1 IDENTIFIER_type(49):-1:0:main"];
91[shape=box, label="91 compound_statement_type(14):1:91"];
92->91;
91[shape=box, label="91 compound_statement_type(14):1:91"];
15[shape=box, label="15 block_item_list_type(11):0:91"];
91->15;
15[shape=box, label="15 block_item_list_type(11):0:91"];
14[shape=box, label="14 block_item_type(12):0:91"];
15->14;
14[shape=box, label="14 block_item_type(12):0:91"];
13[shape=box, label="13 declaration_type(22):1:91"];
14->13;
13[shape=box, label="13 declaration_type(22):1:91"];
8[shape=box, label="8 declaration_specifiers_type(21):3:91"];
13->8;
8[shape=box, label="8 declaration_specifiers_type(21):3:91"];
6[shape=box, label="6 type_specifier_type(95):3:91"];
8->6;
6[shape=box, label="6 type_specifier_type(95):3:91"];
12[shape=box, label="12 init_declarator_list_type(53):0:91"];
13->12;
12[shape=box, label="12 init_declarator_list_type(53):0:91"];
11[shape=box, label="11 init_declarator_type(54):1:91"];
12->11;
11[shape=box, label="11 init_declarator_type(54):1:91"];
10[shape=box, label="10 declarator_type(23):1:91"];
11->10;
10[shape=box, label="10 declarator_type(23):1:91"];
9[shape=box, label="9 direct_declarator_type(28):0:91"];
10->9;
9[shape=box, label="9 direct_declarator_type(28):0:91"];
7[shape=box, label="7 IDENTIFIER_type(49):-1:91:a"];
9->7;
7[shape=box, label="7 IDENTIFIER_type(49):-1:91:a"];
24[shape=box, label="24 block_item_type(12):0:91"];
15->24;
24[shape=box, label="24 block_item_type(12):0:91"];
23[shape=box, label="23 declaration_type(22):1:91"];
24->23;
23[shape=box, label="23 declaration_type(22):1:91"];
18[shape=box, label="18 declaration_specifiers_type(21):3:91"];
23->18;
18[shape=box, label="18 declaration_specifiers_type(21):3:91"];
16[shape=box, label="16 type_specifier_type(95):3:91"];
18->16;
16[shape=box, label="16 type_specifier_type(95):3:91"];
22[shape=box, label="22 init_declarator_list_type(53):0:91"];
23->22;
22[shape=box, label="22 init_declarator_list_type(53):0:91"];
21[shape=box, label="21 init_declarator_type(54):1:91"];
22->21;
21[shape=box, label="21 init_declarator_type(54):1:91"];
20[shape=box, label="20 declarator_type(23):1:91"];
21->20;
20[shape=box, label="20 declarator_type(23):1:91"];
19[shape=box, label="19 direct_declarator_type(28):0:91"];
20->19;
19[shape=box, label="19 direct_declarator_type(28):0:91"];
17[shape=box, label="17 IDENTIFIER_type(49):-1:91:b"];
19->17;
17[shape=box, label="17 IDENTIFIER_type(49):-1:91:b"];
90[shape=box, label="90 block_item_type(12):1:91"];
15->90;
90[shape=box, label="90 block_item_type(12):1:91"];
89[shape=box, label="89 statement_type(80):2:91"];
90->89;
89[shape=box, label="89 statement_type(80):2:91"];
88[shape=box, label="88 expression_statement_type(37):1:91"];
89->88;
88[shape=box, label="88 expression_statement_type(37):1:91"];
56[shape=box, label="56 expression_type(38):0:91"];
88->56;
56[shape=box, label="56 expression_type(38):0:91"];
55[shape=box, label="55 assignment_expression_type(8):1:91"];
56->55;
55[shape=box, label="55 assignment_expression_type(8):1:91"];
28[shape=box, label="28 unary_expression_type(96):0:91"];
55->28;
28[shape=box, label="28 unary_expression_type(96):0:91"];
27[shape=box, label="27 postfix_expression_type(71):0:91"];
28->27;
27[shape=box, label="27 postfix_expression_type(71):0:91"];
26[shape=box, label="26 primary_expression_type(72):0:91"];
27->26;
26[shape=box, label="26 primary_expression_type(72):0:91"];
25[shape=box, label="25 IDENTIFIER_type(49):-1:91:a"];
26->25;
25[shape=box, label="25 IDENTIFIER_type(49):-1:91:a"];
30[shape=box, label="30 assignment_operator_type(9):0:91"];
55->30;
30[shape=box, label="30 assignment_operator_type(9):0:91"];
29[shape=box, label="29 EQU_ASSIGN_type(30):-1:91"];
30->29;
29[shape=box, label="29 EQU_ASSIGN_type(30):-1:91"];
54[shape=box, label="54 assignment_expression_type(8):0:91"];
55->54;
54[shape=box, label="54 assignment_expression_type(8):0:91"];
53[shape=box, label="53 conditional_expression_type(15):0:91"];
54->53;
53[shape=box, label="53 conditional_expression_type(15):0:91"];
52[shape=box, label="52 logical_or_expression_type(62):0:91"];
53->52;
52[shape=box, label="52 logical_or_expression_type(62):0:91"];
51[shape=box, label="51 logical_and_expression_type(61):0:91"];
52->51;
51[shape=box, label="51 logical_and_expression_type(61):0:91"];
50[shape=box, label="50 inclusive_or_expression_type(52):0:91"];
51->50;
50[shape=box, label="50 inclusive_or_expression_type(52):0:91"];
49[shape=box, label="49 exclusive_or_expression_type(36):0:91"];
50->49;
49[shape=box, label="49 exclusive_or_expression_type(36):0:91"];
48[shape=box, label="48 and_expression_type(6):0:91"];
49->48;
48[shape=box, label="48 and_expression_type(6):0:91"];
47[shape=box, label="47 equality_expression_type(35):0:91"];
48->47;
47[shape=box, label="47 equality_expression_type(35):0:91"];
46[shape=box, label="46 relational_expression_type(74):0:91"];
47->46;
46[shape=box, label="46 relational_expression_type(74):0:91"];
45[shape=box, label="45 shift_expression_type(78):0:91"];
46->45;
45[shape=box, label="45 shift_expression_type(78):0:91"];
44[shape=box, label="44 additive_expression_type(4):1:91"];
45->44;
44[shape=box, label="44 additive_expression_type(4):1:91"];
37[shape=box, label="37 additive_expression_type(4):0:91"];
44->37;
37[shape=box, label="37 additive_expression_type(4):0:91"];
36[shape=box, label="36 multiplicative_expression_type(65):0:91"];
37->36;
36[shape=box, label="36 multiplicative_expression_type(65):0:91"];
35[shape=box, label="35 cast_expression_type(13):0:91"];
36->35;
35[shape=box, label="35 cast_expression_type(13):0:91"];
34[shape=box, label="34 unary_expression_type(96):0:91"];
35->34;
34[shape=box, label="34 unary_expression_type(96):0:91"];
33[shape=box, label="33 postfix_expression_type(71):0:91"];
34->33;
33[shape=box, label="33 postfix_expression_type(71):0:91"];
32[shape=box, label="32 primary_expression_type(72):0:91"];
33->32;
32[shape=box, label="32 primary_expression_type(72):0:91"];
31[shape=box, label="31 IDENTIFIER_type(49):-1:91:a"];
32->31;
31[shape=box, label="31 IDENTIFIER_type(49):-1:91:a"];
43[shape=box, label="43 multiplicative_expression_type(65):0:91"];
44->43;
43[shape=box, label="43 multiplicative_expression_type(65):0:91"];
42[shape=box, label="42 cast_expression_type(13):0:91"];
43->42;
42[shape=box, label="42 cast_expression_type(13):0:91"];
41[shape=box, label="41 unary_expression_type(96):0:91"];
42->41;
41[shape=box, label="41 unary_expression_type(96):0:91"];
40[shape=box, label="40 postfix_expression_type(71):0:91"];
41->40;
40[shape=box, label="40 postfix_expression_type(71):0:91"];
39[shape=box, label="39 primary_expression_type(72):0:91"];
40->39;
39[shape=box, label="39 primary_expression_type(72):0:91"];
38[shape=box, label="38 IDENTIFIER_type(49):-1:91:b"];
39->38;
38[shape=box, label="38 IDENTIFIER_type(49):-1:91:b"];
87[shape=box, label="87 assignment_expression_type(8):1:91"];
56->87;
87[shape=box, label="87 assignment_expression_type(8):1:91"];
60[shape=box, label="60 unary_expression_type(96):0:91"];
87->60;
60[shape=box, label="60 unary_expression_type(96):0:91"];
59[shape=box, label="59 postfix_expression_type(71):0:91"];
60->59;
59[shape=box, label="59 postfix_expression_type(71):0:91"];
58[shape=box, label="58 primary_expression_type(72):0:91"];
59->58;
58[shape=box, label="58 primary_expression_type(72):0:91"];
57[shape=box, label="57 IDENTIFIER_type(49):-1:91:b"];
58->57;
57[shape=box, label="57 IDENTIFIER_type(49):-1:91:b"];
62[shape=box, label="62 assignment_operator_type(9):0:91"];
87->62;
62[shape=box, label="62 assignment_operator_type(9):0:91"];
61[shape=box, label="61 EQU_ASSIGN_type(30):-1:91"];
62->61;
61[shape=box, label="61 EQU_ASSIGN_type(30):-1:91"];
86[shape=box, label="86 assignment_expression_type(8):0:91"];
87->86;
86[shape=box, label="86 assignment_expression_type(8):0:91"];
85[shape=box, label="85 conditional_expression_type(15):0:91"];
86->85;
85[shape=box, label="85 conditional_expression_type(15):0:91"];
84[shape=box, label="84 logical_or_expression_type(62):0:91"];
85->84;
84[shape=box, label="84 logical_or_expression_type(62):0:91"];
83[shape=box, label="83 logical_and_expression_type(61):0:91"];
84->83;
83[shape=box, label="83 logical_and_expression_type(61):0:91"];
82[shape=box, label="82 inclusive_or_expression_type(52):0:91"];
83->82;
82[shape=box, label="82 inclusive_or_expression_type(52):0:91"];
81[shape=box, label="81 exclusive_or_expression_type(36):0:91"];
82->81;
81[shape=box, label="81 exclusive_or_expression_type(36):0:91"];
80[shape=box, label="80 and_expression_type(6):0:91"];
81->80;
80[shape=box, label="80 and_expression_type(6):0:91"];
79[shape=box, label="79 equality_expression_type(35):0:91"];
80->79;
79[shape=box, label="79 equality_expression_type(35):0:91"];
78[shape=box, label="78 relational_expression_type(74):0:91"];
79->78;
78[shape=box, label="78 relational_expression_type(74):0:91"];
77[shape=box, label="77 shift_expression_type(78):0:91"];
78->77;
77[shape=box, label="77 shift_expression_type(78):0:91"];
76[shape=box, label="76 additive_expression_type(4):1:91"];
77->76;
76[shape=box, label="76 additive_expression_type(4):1:91"];
69[shape=box, label="69 additive_expression_type(4):0:91"];
76->69;
69[shape=box, label="69 additive_expression_type(4):0:91"];
68[shape=box, label="68 multiplicative_expression_type(65):0:91"];
69->68;
68[shape=box, label="68 multiplicative_expression_type(65):0:91"];
67[shape=box, label="67 cast_expression_type(13):0:91"];
68->67;
67[shape=box, label="67 cast_expression_type(13):0:91"];
66[shape=box, label="66 unary_expression_type(96):0:91"];
67->66;
66[shape=box, label="66 unary_expression_type(96):0:91"];
65[shape=box, label="65 postfix_expression_type(71):0:91"];
66->65;
65[shape=box, label="65 postfix_expression_type(71):0:91"];
64[shape=box, label="64 primary_expression_type(72):0:91"];
65->64;
64[shape=box, label="64 primary_expression_type(72):0:91"];
63[shape=box, label="63 IDENTIFIER_type(49):-1:91:a"];
64->63;
63[shape=box, label="63 IDENTIFIER_type(49):-1:91:a"];
75[shape=box, label="75 multiplicative_expression_type(65):0:91"];
76->75;
75[shape=box, label="75 multiplicative_expression_type(65):0:91"];
74[shape=box, label="74 cast_expression_type(13):0:91"];
75->74;
74[shape=box, label="74 cast_expression_type(13):0:91"];
73[shape=box, label="73 unary_expression_type(96):0:91"];
74->73;
73[shape=box, label="73 unary_expression_type(96):0:91"];
72[shape=box, label="72 postfix_expression_type(71):0:91"];
73->72;
72[shape=box, label="72 postfix_expression_type(71):0:91"];
71[shape=box, label="71 primary_expression_type(72):0:91"];
72->71;
71[shape=box, label="71 primary_expression_type(72):0:91"];
70[shape=box, label="70 IDENTIFIER_type(49):-1:91:b"];
71->70;
70[shape=box, label="70 IDENTIFIER_type(49):-1:91:b"];
}
