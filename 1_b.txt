need graph, name:1_b.dot
before initialize compiler state
81818181: node_table:b753b008
81818181: symbol_table:b74fa008
lib/compiler_state.c:151 8bb7170
after  initialize compiler state
================compiler_state start===================
c_file_str:1_b.c
symbol_max_number:65536
symbol_number:0
node_max_number:65536
node_number:0
need_dot_file:1
dot_file_str:1_b.dot
need_infor:0
symbol_table:8bb7170
node_table:b753b008
declaration_secifiers_table:8bb7170
================compiler_state end ====================
type_specifier: INT
!!!func
291:yylineno:1
check_identifier end
declaration_specifiers: type_specifier
direct_declarator: IDENTIFIER
direct_declarator: direct_declarator '(' ')'
stack: 1 0 
declarator: direct_declarator
type_specifier: INT
!!!a
291:yylineno:3
check_identifier end
declaration_specifiers: type_specifier
direct_declarator: IDENTIFIER
declarator: direct_declarator
init_declarator: declarator
init_declarator_list: init_declarator
!!!b
291:yylineno:3
check_identifier end
direct_declarator: IDENTIFIER
declarator: direct_declarator
!!!12
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
initializer: assignment_expression
init_declarator: declarator '=' initializer
init_declarator_list: init_declarator_list ',' init_declarator
!!!c
291:yylineno:3
check_identifier end
direct_declarator: IDENTIFIER
declarator: direct_declarator
!!!13
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
initializer: assignment_expression
init_declarator: declarator '=' initializer
init_declarator_list: init_declarator_list ',' init_declarator
declaration: declaration_specifiers init_declarator_list ';'
block_item: declaration
block_item_list: block_item
type_specifier: CHAR
!!!d
291:yylineno:5
check_identifier end
declaration_specifiers: type_specifier
direct_declarator: IDENTIFIER
declarator: direct_declarator
!!!'a'
constant: I_CONSTANT
primary_expression: constant
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
initializer: assignment_expression
init_declarator: declarator '=' initializer
init_declarator_list: init_declarator
declaration: declaration_specifiers init_declarator_list ';'
block_item: declaration
block_item_list: block_item_list block_item
!!!a
291:yylineno:7
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
assignment_operator: '='
!!!b
291:yylineno:7
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: multiplicative_expression
!!!c
291:yylineno:7
check_identifier end
primary_expression: IDENTIFIER
postfix_expression: primary_expression
unary_expression: postfix_expression
cast_expression: unary_expression
multiplicative_expression: cast_expression
additive_expression: additive_expression '+' multiplicative_expression
shift_expression: additive_expression
relational_expression: shift_expression
equality_expression: relational_expression
and_expression: equality_expression
exclusive_or_expression: and_expression
inclusive_or_expression: exclusive_or_expression
logical_and_expression: inclusive_or_expression
logical_or_expression: logical_and_expression
conditional_expression: logical_or_expression
assignment_expression: conditional_expression
assignment_expression: unary_expression assignment_operator assignment_expression
expression: assignment_expression
expression_statement: expression ';'
statement: expression_statement
block_item: statement
block_item_list: block_item_list block_item
stack: 0 
compound_statement(id:126): '{' block_item_list '}'
function_defination: declaration_specifiers declarator compound_statement
cbison.y:1624 start
deal_type_specifier node_inrule_num 3
0318: 59
deal_type_specifier node_inrule_num 3
right!!!
right!!!
right!!!
0318: 59
deal_type_specifier node_inrule_num 1
right!!!
cbison.y:1624 end
external_declaration: function_definition
-------------------------translation_unit: external_declaration
----------print_node_table:
node_index node_parent node_child_num node_type_str node_symbol_index node_line_num node_compound_id
id(0):type(type_specifier_type[95]):index(0):parent(2):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(1):compound_id(0):

id(1):type(not_know_type[0]):index(1):parent(3):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(func[0]):infor_index(-1):line_num(1):compound_id(0):

id(2):type(declaration_specifiers_type[21]):index(2):parent(126):left_brother(-1):right_brother(5):brother_num(2):brother_seq(0):first_child(0):child_num(1):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(1):compound_id(0):

id(3):type(direct_declarator_type[28]):index(3):parent(4):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(1):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(1):compound_id(0):

id(4):type(direct_declarator_type[28]):index(4):parent(5):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(3):child_num(1):inrule_num(12):symbol_index([12]):infor_index(-1):line_num(1):compound_id(0):

id(5):type(declarator_type[23]):index(5):parent(126):left_brother(2):right_brother(125):brother_num(3):brother_seq(1):first_child(4):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(2):compound_id(0):

id(6):type(type_specifier_type[95]):index(6):parent(8):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(3):compound_id(125):

id(7):type(not_know_type[0]):index(7):parent(9):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[1]):infor_index(-1):line_num(3):compound_id(125):

id(8):type(declaration_specifiers_type[21]):index(8):parent(59):left_brother(-1):right_brother(12):brother_num(2):brother_seq(0):first_child(6):child_num(1):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(3):compound_id(125):

id(9):type(direct_declarator_type[28]):index(9):parent(10):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(7):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(10):type(declarator_type[23]):index(10):parent(11):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(9):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(3):compound_id(125):

id(11):type(init_declarator_type[54]):index(11):parent(12):left_brother(-1):right_brother(35):brother_num(2):brother_seq(0):first_child(10):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(3):compound_id(125):

id(12):type(init_declarator_list_type[53]):index(12):parent(59):left_brother(8):right_brother(-1):brother_num(2):brother_seq(1):first_child(11):child_num(3):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(13):type(not_know_type[0]):index(13):parent(14):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(b[2]):infor_index(-1):line_num(3):compound_id(125):

id(14):type(direct_declarator_type[28]):index(14):parent(15):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(13):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(15):type(declarator_type[23]):index(15):parent(35):left_brother(-1):right_brother(34):brother_num(2):brother_seq(0):first_child(14):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(3):compound_id(125):

id(16):type(I_CONSTANT_type[48]):index(16):parent(17):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(12[3]):infor_index(-1):line_num(3):compound_id(125):

id(17):type(constant_type[17]):index(17):parent(18):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(16):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(18):type(primary_expression_type[72]):index(18):parent(19):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(17):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(3):compound_id(125):

id(19):type(postfix_expression_type[71]):index(19):parent(20):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(18):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(20):type(unary_expression_type[96]):index(20):parent(21):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(19):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(21):type(cast_expression_type[13]):index(21):parent(22):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(20):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(22):type(multiplicative_expression_type[65]):index(22):parent(23):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(21):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(23):type(additive_expression_type[4]):index(23):parent(24):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(22):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(24):type(shift_expression_type[78]):index(24):parent(25):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(23):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(25):type(relational_expression_type[74]):index(25):parent(26):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(24):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(26):type(equality_expression_type[35]):index(26):parent(27):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(25):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(27):type(and_expression_type[6]):index(27):parent(28):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(26):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(28):type(exclusive_or_expression_type[36]):index(28):parent(29):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(27):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(29):type(inclusive_or_expression_type[52]):index(29):parent(30):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(28):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(30):type(logical_and_expression_type[61]):index(30):parent(31):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(29):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(31):type(logical_or_expression_type[62]):index(31):parent(32):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(30):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(32):type(conditional_expression_type[15]):index(32):parent(33):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(31):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(33):type(assignment_expression_type[8]):index(33):parent(34):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(32):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(34):type(initializer_type[56]):index(34):parent(35):left_brother(15):right_brother(-1):brother_num(2):brother_seq(1):first_child(33):child_num(1):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(3):compound_id(125):

id(35):type(init_declarator_type[54]):index(35):parent(12):left_brother(11):right_brother(58):brother_num(3):brother_seq(1):first_child(15):child_num(2):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(36):type(not_know_type[0]):index(36):parent(37):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(c[4]):infor_index(-1):line_num(3):compound_id(125):

id(37):type(direct_declarator_type[28]):index(37):parent(38):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(36):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(38):type(declarator_type[23]):index(38):parent(58):left_brother(-1):right_brother(57):brother_num(2):brother_seq(0):first_child(37):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(3):compound_id(125):

id(39):type(I_CONSTANT_type[48]):index(39):parent(40):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(13[5]):infor_index(-1):line_num(3):compound_id(125):

id(40):type(constant_type[17]):index(40):parent(41):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(39):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(41):type(primary_expression_type[72]):index(41):parent(42):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(40):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(3):compound_id(125):

id(42):type(postfix_expression_type[71]):index(42):parent(43):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(41):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(43):type(unary_expression_type[96]):index(43):parent(44):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(42):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(44):type(cast_expression_type[13]):index(44):parent(45):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(43):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(45):type(multiplicative_expression_type[65]):index(45):parent(46):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(44):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(46):type(additive_expression_type[4]):index(46):parent(47):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(45):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(47):type(shift_expression_type[78]):index(47):parent(48):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(46):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(48):type(relational_expression_type[74]):index(48):parent(49):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(47):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(49):type(equality_expression_type[35]):index(49):parent(50):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(48):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(50):type(and_expression_type[6]):index(50):parent(51):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(49):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(51):type(exclusive_or_expression_type[36]):index(51):parent(52):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(50):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(52):type(inclusive_or_expression_type[52]):index(52):parent(53):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(51):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(53):type(logical_and_expression_type[61]):index(53):parent(54):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(52):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(54):type(logical_or_expression_type[62]):index(54):parent(55):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(53):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(55):type(conditional_expression_type[15]):index(55):parent(56):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(54):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(56):type(assignment_expression_type[8]):index(56):parent(57):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(55):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(57):type(initializer_type[56]):index(57):parent(58):left_brother(38):right_brother(-1):brother_num(2):brother_seq(1):first_child(56):child_num(1):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(3):compound_id(125):

id(58):type(init_declarator_type[54]):index(58):parent(12):left_brother(35):right_brother(-1):brother_num(3):brother_seq(2):first_child(38):child_num(2):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(59):type(declaration_type[22]):index(59):parent(60):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(8):child_num(2):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(3):compound_id(125):

id(60):type(block_item_type[12]):index(60):parent(61):left_brother(-1):right_brother(89):brother_num(2):brother_seq(0):first_child(59):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(61):type(block_item_list_type[11]):index(61):parent(125):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(60):child_num(3):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(3):compound_id(125):

id(62):type(type_specifier_type[95]):index(62):parent(64):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(5):compound_id(125):

id(63):type(not_know_type[0]):index(63):parent(65):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(d[6]):infor_index(-1):line_num(5):compound_id(125):

id(64):type(declaration_specifiers_type[21]):index(64):parent(88):left_brother(-1):right_brother(87):brother_num(2):brother_seq(0):first_child(62):child_num(1):inrule_num(3):symbol_index([3]):infor_index(-1):line_num(5):compound_id(125):

id(65):type(direct_declarator_type[28]):index(65):parent(66):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(63):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(66):type(declarator_type[23]):index(66):parent(86):left_brother(-1):right_brother(85):brother_num(2):brother_seq(0):first_child(65):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(5):compound_id(125):

id(67):type(I_CONSTANT_type[48]):index(67):parent(68):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index('a'[7]):infor_index(-1):line_num(5):compound_id(125):

id(68):type(constant_type[17]):index(68):parent(69):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(67):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(69):type(primary_expression_type[72]):index(69):parent(70):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(68):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(5):compound_id(125):

id(70):type(postfix_expression_type[71]):index(70):parent(71):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(69):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(71):type(unary_expression_type[96]):index(71):parent(72):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(70):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(72):type(cast_expression_type[13]):index(72):parent(73):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(71):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(73):type(multiplicative_expression_type[65]):index(73):parent(74):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(72):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(74):type(additive_expression_type[4]):index(74):parent(75):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(73):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(75):type(shift_expression_type[78]):index(75):parent(76):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(74):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(76):type(relational_expression_type[74]):index(76):parent(77):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(75):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(77):type(equality_expression_type[35]):index(77):parent(78):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(76):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(78):type(and_expression_type[6]):index(78):parent(79):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(77):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(79):type(exclusive_or_expression_type[36]):index(79):parent(80):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(78):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(80):type(inclusive_or_expression_type[52]):index(80):parent(81):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(79):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(81):type(logical_and_expression_type[61]):index(81):parent(82):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(80):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(82):type(logical_or_expression_type[62]):index(82):parent(83):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(81):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(83):type(conditional_expression_type[15]):index(83):parent(84):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(82):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(84):type(assignment_expression_type[8]):index(84):parent(85):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(83):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(85):type(initializer_type[56]):index(85):parent(86):left_brother(66):right_brother(-1):brother_num(2):brother_seq(1):first_child(84):child_num(1):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(5):compound_id(125):

id(86):type(init_declarator_type[54]):index(86):parent(87):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(66):child_num(2):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(87):type(init_declarator_list_type[53]):index(87):parent(88):left_brother(64):right_brother(-1):brother_num(2):brother_seq(1):first_child(86):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(88):type(declaration_type[22]):index(88):parent(89):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(64):child_num(2):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(5):compound_id(125):

id(89):type(block_item_type[12]):index(89):parent(61):left_brother(60):right_brother(124):brother_num(3):brother_seq(1):first_child(88):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(5):compound_id(125):

id(90):type(not_know_type[0]):index(90):parent(91):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(a[8]):infor_index(-1):line_num(7):compound_id(125):

id(91):type(primary_expression_type[72]):index(91):parent(92):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(90):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(92):type(postfix_expression_type[71]):index(92):parent(93):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(91):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(93):type(unary_expression_type[96]):index(93):parent(120):left_brother(-1):right_brother(95):brother_num(2):brother_seq(0):first_child(92):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(94):type(EQU_ASSIGN_type[30]):index(94):parent(95):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index([-1]):infor_index(-1):line_num(7):compound_id(125):

id(95):type(assignment_operator_type[9]):index(95):parent(120):left_brother(93):right_brother(119):brother_num(3):brother_seq(1):first_child(94):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(96):type(not_know_type[0]):index(96):parent(97):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(b[9]):infor_index(-1):line_num(7):compound_id(125):

id(97):type(primary_expression_type[72]):index(97):parent(98):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(96):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(98):type(postfix_expression_type[71]):index(98):parent(99):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(97):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(99):type(unary_expression_type[96]):index(99):parent(100):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(98):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(100):type(cast_expression_type[13]):index(100):parent(101):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(99):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(101):type(multiplicative_expression_type[65]):index(101):parent(102):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(100):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(102):type(additive_expression_type[4]):index(102):parent(109):left_brother(-1):right_brother(108):brother_num(2):brother_seq(0):first_child(101):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(103):type(not_know_type[0]):index(103):parent(104):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(-1):child_num(0):inrule_num(-1):symbol_index(c[10]):infor_index(-1):line_num(7):compound_id(125):

id(104):type(primary_expression_type[72]):index(104):parent(105):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(103):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(105):type(postfix_expression_type[71]):index(105):parent(106):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(104):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(106):type(unary_expression_type[96]):index(106):parent(107):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(105):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(107):type(cast_expression_type[13]):index(107):parent(108):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(106):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(108):type(multiplicative_expression_type[65]):index(108):parent(109):left_brother(102):right_brother(-1):brother_num(2):brother_seq(1):first_child(107):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(109):type(additive_expression_type[4]):index(109):parent(110):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(102):child_num(2):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(7):compound_id(125):

id(110):type(shift_expression_type[78]):index(110):parent(111):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(109):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(111):type(relational_expression_type[74]):index(111):parent(112):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(110):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(112):type(equality_expression_type[35]):index(112):parent(113):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(111):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(113):type(and_expression_type[6]):index(113):parent(114):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(112):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(114):type(exclusive_or_expression_type[36]):index(114):parent(115):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(113):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(115):type(inclusive_or_expression_type[52]):index(115):parent(116):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(114):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(116):type(logical_and_expression_type[61]):index(116):parent(117):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(115):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(117):type(logical_or_expression_type[62]):index(117):parent(118):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(116):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(118):type(conditional_expression_type[15]):index(118):parent(119):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(117):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(119):type(assignment_expression_type[8]):index(119):parent(120):left_brother(95):right_brother(-1):brother_num(3):brother_seq(2):first_child(118):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(120):type(assignment_expression_type[8]):index(120):parent(121):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(93):child_num(3):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(7):compound_id(125):

id(121):type(expression_type[38]):index(121):parent(122):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(120):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(7):compound_id(125):

id(122):type(expression_statement_type[37]):index(122):parent(123):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(121):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(7):compound_id(125):

id(123):type(statement_type[80]):index(123):parent(124):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(122):child_num(1):inrule_num(2):symbol_index([2]):infor_index(-1):line_num(7):compound_id(125):

id(124):type(block_item_type[12]):index(124):parent(61):left_brother(89):right_brother(-1):brother_num(3):brother_seq(2):first_child(123):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(7):compound_id(125):

id(125):type(compound_statement_type[14]):index(125):parent(126):left_brother(5):right_brother(-1):brother_num(3):brother_seq(2):first_child(61):child_num(1):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(9):compound_id(125):

id(126):type(function_definition_type[42]):index(126):parent(127):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(2):child_num(3):inrule_num(1):symbol_index([1]):infor_index(-1):line_num(9):compound_id(0):

id(127):type(external_declaration_type[39]):index(127):parent(128):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(126):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(0):

id(128):type(translation_unit_type[91]):index(128):parent(-1):left_brother(-1):right_brother(-1):brother_num(1):brother_seq(0):first_child(127):child_num(1):inrule_num(0):symbol_index([0]):infor_index(-1):line_num(9):compound_id(0):

----------print_node_table!
+translation_unit_type node_id:128 child_number:1 inrule_num:0 line_num:9
 +external_declaration_type node_id:127 child_number:1 inrule_num:0 line_num:9
  +function_definition_type node_id:126 child_number:3 inrule_num:1 line_num:9
   +declaration_specifiers_type node_id:2 child_number:1 inrule_num:3 line_num:1
    +type_specifier_type node_id:0 child_number:0 inrule_num:3 line_num:1
   +declarator_type node_id:5 child_number:1 inrule_num:1 line_num:2
    +direct_declarator_type node_id:4 child_number:1 inrule_num:12 line_num:1
     +direct_declarator_type node_id:3 child_number:1 inrule_num:0 line_num:1
      +not_know_type node_id:1 child_number:0 inrule_num:-1 line_num:1
 func
   +compound_statement_type node_id:125 child_number:1 inrule_num:1 line_num:9
    +block_item_list_type node_id:61 child_number:3 inrule_num:0 line_num:3
     +block_item_type node_id:60 child_number:1 inrule_num:0 line_num:3
      +declaration_type node_id:59 child_number:2 inrule_num:1 line_num:3
       +declaration_specifiers_type node_id:8 child_number:1 inrule_num:3 line_num:3
        +type_specifier_type node_id:6 child_number:0 inrule_num:3 line_num:3
       +init_declarator_list_type node_id:12 child_number:3 inrule_num:0 line_num:3
        +init_declarator_type node_id:11 child_number:1 inrule_num:1 line_num:3
         +declarator_type node_id:10 child_number:1 inrule_num:1 line_num:3
          +direct_declarator_type node_id:9 child_number:1 inrule_num:0 line_num:3
           +not_know_type node_id:7 child_number:0 inrule_num:-1 line_num:3
 a
        +init_declarator_type node_id:35 child_number:2 inrule_num:0 line_num:3
         +declarator_type node_id:15 child_number:1 inrule_num:1 line_num:3
          +direct_declarator_type node_id:14 child_number:1 inrule_num:0 line_num:3
           +not_know_type node_id:13 child_number:0 inrule_num:-1 line_num:3
 b
         +initializer_type node_id:34 child_number:1 inrule_num:2 line_num:3
          +assignment_expression_type node_id:33 child_number:1 inrule_num:0 line_num:3
           +conditional_expression_type node_id:32 child_number:1 inrule_num:0 line_num:3
            +logical_or_expression_type node_id:31 child_number:1 inrule_num:0 line_num:3
             +logical_and_expression_type node_id:30 child_number:1 inrule_num:0 line_num:3
              +inclusive_or_expression_type node_id:29 child_number:1 inrule_num:0 line_num:3
               +exclusive_or_expression_type node_id:28 child_number:1 inrule_num:0 line_num:3
                +and_expression_type node_id:27 child_number:1 inrule_num:0 line_num:3
                 +equality_expression_type node_id:26 child_number:1 inrule_num:0 line_num:3
                  +relational_expression_type node_id:25 child_number:1 inrule_num:0 line_num:3
                   +shift_expression_type node_id:24 child_number:1 inrule_num:0 line_num:3
                    +additive_expression_type node_id:23 child_number:1 inrule_num:0 line_num:3
                     +multiplicative_expression_type node_id:22 child_number:1 inrule_num:0 line_num:3
                      +cast_expression_type node_id:21 child_number:1 inrule_num:0 line_num:3
                       +unary_expression_type node_id:20 child_number:1 inrule_num:0 line_num:3
                        +postfix_expression_type node_id:19 child_number:1 inrule_num:0 line_num:3
                         +primary_expression_type node_id:18 child_number:1 inrule_num:1 line_num:3
                          +constant_type node_id:17 child_number:1 inrule_num:0 line_num:3
                           +I_CONSTANT_type node_id:16 child_number:0 inrule_num:-1 line_num:3
        +init_declarator_type node_id:58 child_number:2 inrule_num:0 line_num:3
         +declarator_type node_id:38 child_number:1 inrule_num:1 line_num:3
          +direct_declarator_type node_id:37 child_number:1 inrule_num:0 line_num:3
           +not_know_type node_id:36 child_number:0 inrule_num:-1 line_num:3
 c
         +initializer_type node_id:57 child_number:1 inrule_num:2 line_num:3
          +assignment_expression_type node_id:56 child_number:1 inrule_num:0 line_num:3
           +conditional_expression_type node_id:55 child_number:1 inrule_num:0 line_num:3
            +logical_or_expression_type node_id:54 child_number:1 inrule_num:0 line_num:3
             +logical_and_expression_type node_id:53 child_number:1 inrule_num:0 line_num:3
              +inclusive_or_expression_type node_id:52 child_number:1 inrule_num:0 line_num:3
               +exclusive_or_expression_type node_id:51 child_number:1 inrule_num:0 line_num:3
                +and_expression_type node_id:50 child_number:1 inrule_num:0 line_num:3
                 +equality_expression_type node_id:49 child_number:1 inrule_num:0 line_num:3
                  +relational_expression_type node_id:48 child_number:1 inrule_num:0 line_num:3
                   +shift_expression_type node_id:47 child_number:1 inrule_num:0 line_num:3
                    +additive_expression_type node_id:46 child_number:1 inrule_num:0 line_num:3
                     +multiplicative_expression_type node_id:45 child_number:1 inrule_num:0 line_num:3
                      +cast_expression_type node_id:44 child_number:1 inrule_num:0 line_num:3
                       +unary_expression_type node_id:43 child_number:1 inrule_num:0 line_num:3
                        +postfix_expression_type node_id:42 child_number:1 inrule_num:0 line_num:3
                         +primary_expression_type node_id:41 child_number:1 inrule_num:1 line_num:3
                          +constant_type node_id:40 child_number:1 inrule_num:0 line_num:3
                           +I_CONSTANT_type node_id:39 child_number:0 inrule_num:-1 line_num:3
     +block_item_type node_id:89 child_number:1 inrule_num:0 line_num:5
      +declaration_type node_id:88 child_number:2 inrule_num:1 line_num:5
       +declaration_specifiers_type node_id:64 child_number:1 inrule_num:3 line_num:5
        +type_specifier_type node_id:62 child_number:0 inrule_num:1 line_num:5
       +init_declarator_list_type node_id:87 child_number:1 inrule_num:0 line_num:5
        +init_declarator_type node_id:86 child_number:2 inrule_num:0 line_num:5
         +declarator_type node_id:66 child_number:1 inrule_num:1 line_num:5
          +direct_declarator_type node_id:65 child_number:1 inrule_num:0 line_num:5
           +not_know_type node_id:63 child_number:0 inrule_num:-1 line_num:5
 d
         +initializer_type node_id:85 child_number:1 inrule_num:2 line_num:5
          +assignment_expression_type node_id:84 child_number:1 inrule_num:0 line_num:5
           +conditional_expression_type node_id:83 child_number:1 inrule_num:0 line_num:5
            +logical_or_expression_type node_id:82 child_number:1 inrule_num:0 line_num:5
             +logical_and_expression_type node_id:81 child_number:1 inrule_num:0 line_num:5
              +inclusive_or_expression_type node_id:80 child_number:1 inrule_num:0 line_num:5
               +exclusive_or_expression_type node_id:79 child_number:1 inrule_num:0 line_num:5
                +and_expression_type node_id:78 child_number:1 inrule_num:0 line_num:5
                 +equality_expression_type node_id:77 child_number:1 inrule_num:0 line_num:5
                  +relational_expression_type node_id:76 child_number:1 inrule_num:0 line_num:5
                   +shift_expression_type node_id:75 child_number:1 inrule_num:0 line_num:5
                    +additive_expression_type node_id:74 child_number:1 inrule_num:0 line_num:5
                     +multiplicative_expression_type node_id:73 child_number:1 inrule_num:0 line_num:5
                      +cast_expression_type node_id:72 child_number:1 inrule_num:0 line_num:5
                       +unary_expression_type node_id:71 child_number:1 inrule_num:0 line_num:5
                        +postfix_expression_type node_id:70 child_number:1 inrule_num:0 line_num:5
                         +primary_expression_type node_id:69 child_number:1 inrule_num:1 line_num:5
                          +constant_type node_id:68 child_number:1 inrule_num:0 line_num:5
                           +I_CONSTANT_type node_id:67 child_number:0 inrule_num:-1 line_num:5
     +block_item_type node_id:124 child_number:1 inrule_num:1 line_num:7
      +statement_type node_id:123 child_number:1 inrule_num:2 line_num:7
       +expression_statement_type node_id:122 child_number:1 inrule_num:1 line_num:7
        +expression_type node_id:121 child_number:1 inrule_num:0 line_num:7
         +assignment_expression_type node_id:120 child_number:3 inrule_num:1 line_num:7
          +unary_expression_type node_id:93 child_number:1 inrule_num:0 line_num:7
           +postfix_expression_type node_id:92 child_number:1 inrule_num:0 line_num:7
            +primary_expression_type node_id:91 child_number:1 inrule_num:0 line_num:7
             +not_know_type node_id:90 child_number:0 inrule_num:-1 line_num:7
 a
          +assignment_operator_type node_id:95 child_number:1 inrule_num:0 line_num:7
           +EQU_ASSIGN_type node_id:94 child_number:0 inrule_num:-1 line_num:7
          +assignment_expression_type node_id:119 child_number:1 inrule_num:0 line_num:7
           +conditional_expression_type node_id:118 child_number:1 inrule_num:0 line_num:7
            +logical_or_expression_type node_id:117 child_number:1 inrule_num:0 line_num:7
             +logical_and_expression_type node_id:116 child_number:1 inrule_num:0 line_num:7
              +inclusive_or_expression_type node_id:115 child_number:1 inrule_num:0 line_num:7
               +exclusive_or_expression_type node_id:114 child_number:1 inrule_num:0 line_num:7
                +and_expression_type node_id:113 child_number:1 inrule_num:0 line_num:7
                 +equality_expression_type node_id:112 child_number:1 inrule_num:0 line_num:7
                  +relational_expression_type node_id:111 child_number:1 inrule_num:0 line_num:7
                   +shift_expression_type node_id:110 child_number:1 inrule_num:0 line_num:7
                    +additive_expression_type node_id:109 child_number:2 inrule_num:1 line_num:7
                     +additive_expression_type node_id:102 child_number:1 inrule_num:0 line_num:7
                      +multiplicative_expression_type node_id:101 child_number:1 inrule_num:0 line_num:7
                       +cast_expression_type node_id:100 child_number:1 inrule_num:0 line_num:7
                        +unary_expression_type node_id:99 child_number:1 inrule_num:0 line_num:7
                         +postfix_expression_type node_id:98 child_number:1 inrule_num:0 line_num:7
                          +primary_expression_type node_id:97 child_number:1 inrule_num:0 line_num:7
                           +not_know_type node_id:96 child_number:0 inrule_num:-1 line_num:7
 b
                     +multiplicative_expression_type node_id:108 child_number:1 inrule_num:0 line_num:7
                      +cast_expression_type node_id:107 child_number:1 inrule_num:0 line_num:7
                       +unary_expression_type node_id:106 child_number:1 inrule_num:0 line_num:7
                        +postfix_expression_type node_id:105 child_number:1 inrule_num:0 line_num:7
                         +primary_expression_type node_id:104 child_number:1 inrule_num:0 line_num:7
                          +not_know_type node_id:103 child_number:0 inrule_num:-1 line_num:7
 c
---------------------symbol_table:
id(0):name(func):name_len(4):type(not_know_type[0]):file((null)):file_len(0):line_num:(1):in_which_node(1):
id(1):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(3):in_which_node(7):
id(2):name(b):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(3):in_which_node(13):
id(3):name(12):name_len(2):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(3):in_which_node(16):
id(4):name(c):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(3):in_which_node(36):
id(5):name(13):name_len(2):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(3):in_which_node(39):
id(6):name(d):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(5):in_which_node(63):
id(7):name('a'):name_len(3):type(I_CONSTANT_type[48]):file((null)):file_len(0):line_num:(5):in_which_node(67):
id(8):name(a):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(7):in_which_node(90):
id(9):name(b):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(7):in_which_node(96):
id(10):name(c):name_len(1):type(not_know_type[0]):file((null)):file_len(0):line_num:(7):in_which_node(103):
---------------------symbol_table!
1 has father 0
stack: 0 


============================================
= print declaration_specifiers_table       =
============================================
declaration_specifiers_table[0] start
index:0
storage_class_specifier none(0x00000000)
type_specifier(0x00000003): signed default int index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[0] end
--------------------------------------------
declaration_specifiers_table[1] start
index:1
storage_class_specifier none(0x00000000)
type_specifier(0x00000003): signed default int index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[1] end
--------------------------------------------
declaration_specifiers_table[2] start
index:2
storage_class_specifier none(0x00000000)
type_specifier(0x00000002): signed default char index(0)
type_qualifier(0x00000000): 
function_specifier(0x00000000): 
declaration_specifiers_table[2] end
--------------------------------------------






============================================
= print direct_declarator_table            =
============================================
index:0
is_IDENTIFIER:0
ns_index:-1
number:1
category:12 index1:0 index2:0
--------------------------------------------






============================================
= print compound_statement_table           =
============================================
index:0 node_index:125 block_item_num:3
is_statement:0 node_index:60 index:0
is_statement:0 node_index:89 index:-1
is_statement:1 node_index:124 index:-1
--------------------------------------------






============================================
= declaration_table                        =
============================================
declaration_table_num:2
index:0 node_index:59 declaration_specifiers_index:1 static_assert_declaration_index:-1         init_declarator_num:3 init_declarator_infor->next_id:0
--------------------------------------------
index:1 node_index:88 declaration_specifiers_index:2 static_assert_declaration_index:-1         init_declarator_num:1 init_declarator_infor->next_id:3
--------------------------------------------


============================================
= init_declarator_table                    =
============================================
init_declarator_infor index:0 node_index:11 declarator_index:-1 initializer_index:-1 next:1
--------------------------------------------
init_declarator_infor index:1 node_index:35 declarator_index:-1 initializer_index:-1 next:2
--------------------------------------------
init_declarator_infor index:2 node_index:58 declarator_index:-1 initializer_index:-1 next:-1
--------------------------------------------
init_declarator_infor index:3 node_index:86 declarator_index:-1 initializer_index:-1 next:-1
--------------------------------------------
